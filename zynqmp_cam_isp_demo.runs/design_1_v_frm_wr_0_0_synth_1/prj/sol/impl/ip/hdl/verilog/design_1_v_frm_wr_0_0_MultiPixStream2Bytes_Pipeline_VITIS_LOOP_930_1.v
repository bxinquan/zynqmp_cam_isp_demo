// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module design_1_v_frm_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_930_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_dout,
        img_num_data_valid,
        img_fifo_cap,
        img_empty_n,
        img_read,
        p_0_3_0_0_0130_795_lcssa125,
        p_0_0_0_0_0124_767_lcssa116,
        trunc_ln915_1,
        bytePlanes1_din,
        bytePlanes1_num_data_valid,
        bytePlanes1_fifo_cap,
        bytePlanes1_full_n,
        bytePlanes1_write,
        icmp_ln920,
        cmp103_6,
        cmp103_5,
        cmp103_4,
        cmp103_3,
        cmp103_2,
        cmp103_1,
        sub100_cast43,
        cmp103,
        p_0_3_0_0_0130_794_out,
        p_0_3_0_0_0130_794_out_ap_vld,
        p_0_0_0_0_0124_766_out,
        p_0_0_0_0_0124_766_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [59:0] img_dout;
input  [1:0] img_num_data_valid;
input  [1:0] img_fifo_cap;
input   img_empty_n;
output   img_read;
input  [9:0] p_0_3_0_0_0130_795_lcssa125;
input  [9:0] p_0_0_0_0_0124_767_lcssa116;
input  [11:0] trunc_ln915_1;
output  [127:0] bytePlanes1_din;
input  [9:0] bytePlanes1_num_data_valid;
input  [9:0] bytePlanes1_fifo_cap;
input   bytePlanes1_full_n;
output   bytePlanes1_write;
input  [0:0] icmp_ln920;
input  [0:0] cmp103_6;
input  [0:0] cmp103_5;
input  [0:0] cmp103_4;
input  [0:0] cmp103_3;
input  [0:0] cmp103_2;
input  [0:0] cmp103_1;
input  [11:0] sub100_cast43;
input  [0:0] cmp103;
output  [9:0] p_0_3_0_0_0130_794_out;
output   p_0_3_0_0_0130_794_out_ap_vld;
output  [9:0] p_0_0_0_0_0124_766_out;
output   p_0_0_0_0_0124_766_out_ap_vld;

reg ap_idle;
reg img_read;
reg bytePlanes1_write;
reg p_0_3_0_0_0130_794_out_ap_vld;
reg p_0_0_0_0_0124_766_out_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
reg   [0:0] icmp_ln930_reg_772;
reg   [0:0] or_ln934_reg_787;
reg    ap_predicate_op49_read_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage7;
reg   [0:0] or_ln934_6_reg_856;
reg    ap_predicate_op110_read_state8;
reg    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_subdone;
reg    bytePlanes1_blk_n;
wire    ap_block_pp0_stage0;
reg    img_blk_n;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] or_ln934_1_reg_806;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] or_ln934_2_reg_825;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [0:0] or_ln934_3_reg_844;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [0:0] or_ln934_4_reg_848;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
reg   [0:0] or_ln934_5_reg_852;
wire    ap_block_pp0_stage7;
reg   [0:0] or_ln934_7_reg_860;
reg    ap_block_pp0_stage1_11001;
reg    ap_predicate_op69_read_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg    ap_predicate_op92_read_state6;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
reg    ap_block_pp0_stage7_11001;
reg    ap_predicate_op59_read_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
reg    ap_predicate_op83_read_state5;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
reg    ap_predicate_op101_read_state7;
reg    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_predicate_op119_read_state9;
reg    ap_block_state9_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln930_fu_409_p2;
wire   [0:0] cmp101_fu_425_p2;
reg   [0:0] cmp101_reg_776;
wire   [0:0] or_ln934_fu_431_p2;
wire   [9:0] trunc_ln145_fu_448_p1;
wire   [0:0] or_ln934_1_fu_452_p2;
reg   [7:0] trunc_ln4_reg_810;
reg   [7:0] trunc_ln414_1_reg_815;
wire   [9:0] trunc_ln145_10_fu_476_p1;
wire   [0:0] or_ln934_2_fu_480_p2;
reg   [7:0] trunc_ln414_2_reg_829;
reg   [7:0] trunc_ln414_3_reg_834;
wire   [9:0] trunc_ln145_11_fu_504_p1;
wire   [0:0] or_ln934_3_fu_508_p2;
wire   [0:0] or_ln934_4_fu_512_p2;
wire   [0:0] or_ln934_5_fu_516_p2;
wire   [0:0] or_ln934_6_fu_520_p2;
wire   [0:0] or_ln934_7_fu_524_p2;
reg   [7:0] trunc_ln414_4_reg_864;
reg   [7:0] trunc_ln414_5_reg_869;
wire   [9:0] trunc_ln145_13_fu_548_p1;
reg   [7:0] trunc_ln414_6_reg_879;
reg   [7:0] trunc_ln414_7_reg_884;
wire   [9:0] trunc_ln145_14_fu_572_p1;
reg   [7:0] trunc_ln414_8_reg_894;
reg   [7:0] trunc_ln414_9_reg_899;
wire   [9:0] trunc_ln145_15_fu_596_p1;
reg   [7:0] trunc_ln414_s_reg_909;
reg   [7:0] trunc_ln414_10_reg_914;
wire   [9:0] trunc_ln145_17_fu_620_p1;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
reg   [9:0] ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_793_reg_191;
reg   [9:0] ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_765_reg_201;
reg   [9:0] ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_792_reg_211;
reg   [9:0] ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_764_reg_222;
reg   [9:0] ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_791_reg_233;
reg   [9:0] ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_763_reg_244;
reg   [9:0] ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_790_reg_255;
reg   [9:0] ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_762_reg_266;
reg   [9:0] ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_789_reg_277;
reg   [9:0] ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_761_reg_288;
reg   [9:0] ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_788_reg_299;
reg   [9:0] ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_760_reg_310;
wire   [9:0] ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_787_reg_321;
reg   [9:0] ap_phi_reg_pp0_iter1_p_0_3_0_0_0130_787_reg_321;
wire   [9:0] ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_768_reg_331;
reg   [9:0] ap_phi_reg_pp0_iter1_p_0_0_0_0_0124_768_reg_331;
reg   [9:0] ap_phi_mux_p_0_3_0_0_0130_795_phi_fu_344_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_p_0_3_0_0_0130_795_reg_341;
reg   [9:0] ap_phi_mux_p_0_0_0_0_0124_767_phi_fu_354_p4;
wire   [9:0] trunc_ln145_19_fu_644_p1;
wire   [9:0] ap_phi_reg_pp0_iter1_p_0_0_0_0_0124_767_reg_351;
reg   [11:0] x_fu_94;
wire   [11:0] x_4_fu_415_p2;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_x_3;
reg   [9:0] p_0_0_0_0_0124_766_fu_98;
reg   [9:0] p_0_3_0_0_0130_794_fu_102;
reg    ap_block_pp0_stage0_01001;
wire   [12:0] zext_ln930_fu_421_p1;
wire  signed [12:0] sub100_cast43_cast_fu_387_p1;
wire   [7:0] trunc_ln414_14_fu_659_p4;
wire   [7:0] trunc_ln414_13_fu_649_p4;
wire   [7:0] trunc_ln414_12_fu_634_p4;
wire   [7:0] trunc_ln414_11_fu_624_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_773;
reg    ap_condition_777;
reg    ap_condition_781;
reg    ap_condition_785;
reg    ap_condition_789;
reg    ap_condition_794;
reg    ap_condition_277;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

design_1_v_frm_wr_0_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_773)) begin
        if ((or_ln934_5_reg_852 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_760_reg_310 <= ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_761_reg_288;
        end else if ((or_ln934_5_reg_852 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_760_reg_310 <= trunc_ln145_15_fu_596_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_777)) begin
        if ((or_ln934_4_reg_848 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_761_reg_288 <= ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_762_reg_266;
        end else if ((or_ln934_4_reg_848 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_761_reg_288 <= trunc_ln145_14_fu_572_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_781)) begin
        if ((or_ln934_3_reg_844 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_762_reg_266 <= ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_763_reg_244;
        end else if ((or_ln934_3_reg_844 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_762_reg_266 <= trunc_ln145_13_fu_548_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_785)) begin
        if ((or_ln934_2_reg_825 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_763_reg_244 <= ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_764_reg_222;
        end else if ((or_ln934_2_reg_825 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_763_reg_244 <= trunc_ln145_11_fu_504_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_789)) begin
        if ((or_ln934_1_reg_806 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_764_reg_222 <= ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_765_reg_201;
        end else if ((or_ln934_1_reg_806 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_764_reg_222 <= trunc_ln145_10_fu_476_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_794)) begin
        if ((or_ln934_reg_787 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_765_reg_201 <= p_0_0_0_0_0124_766_fu_98;
        end else if ((or_ln934_reg_787 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_765_reg_201 <= trunc_ln145_fu_448_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_773)) begin
        if ((or_ln934_5_reg_852 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_788_reg_299 <= ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_789_reg_277;
        end else if ((or_ln934_5_reg_852 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_788_reg_299 <= {{img_dout[39:30]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_777)) begin
        if ((or_ln934_4_reg_848 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_789_reg_277 <= ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_790_reg_255;
        end else if ((or_ln934_4_reg_848 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_789_reg_277 <= {{img_dout[39:30]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_781)) begin
        if ((or_ln934_3_reg_844 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_790_reg_255 <= ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_791_reg_233;
        end else if ((or_ln934_3_reg_844 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_790_reg_255 <= {{img_dout[39:30]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_785)) begin
        if ((or_ln934_2_reg_825 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_791_reg_233 <= ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_792_reg_211;
        end else if ((or_ln934_2_reg_825 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_791_reg_233 <= {{img_dout[39:30]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_789)) begin
        if ((or_ln934_1_reg_806 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_792_reg_211 <= ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_793_reg_191;
        end else if ((or_ln934_1_reg_806 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_792_reg_211 <= {{img_dout[39:30]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_794)) begin
        if ((or_ln934_reg_787 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_793_reg_191 <= p_0_3_0_0_0130_794_fu_102;
        end else if ((or_ln934_reg_787 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_793_reg_191 <= {{img_dout[39:30]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_277)) begin
        if (((or_ln934_6_reg_856 == 1'd0) & (icmp_ln930_reg_772 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_0_0_0_0_0124_768_reg_331 <= ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_760_reg_310;
        end else if (((or_ln934_6_reg_856 == 1'd1) & (icmp_ln930_reg_772 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_0_0_0_0_0124_768_reg_331 <= trunc_ln145_17_fu_620_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_0_0_0_0_0124_768_reg_331 <= ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_768_reg_331;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_277)) begin
        if (((or_ln934_6_reg_856 == 1'd0) & (icmp_ln930_reg_772 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_0_3_0_0_0130_787_reg_321 <= ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_788_reg_299;
        end else if (((or_ln934_6_reg_856 == 1'd1) & (icmp_ln930_reg_772 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_0_3_0_0_0130_787_reg_321 <= {{img_dout[39:30]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_0_3_0_0_0130_787_reg_321 <= ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_787_reg_321;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_0_0_0_0124_766_fu_98 <= p_0_0_0_0_0124_767_lcssa116;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            p_0_0_0_0_0124_766_fu_98 <= ap_phi_mux_p_0_0_0_0_0124_767_phi_fu_354_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_0_3_0_0_0130_794_fu_102 <= p_0_3_0_0_0130_795_lcssa125;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            p_0_3_0_0_0130_794_fu_102 <= ap_phi_mux_p_0_3_0_0_0130_795_phi_fu_344_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln930_fu_409_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_94 <= x_4_fu_415_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_94 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln930_fu_409_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp101_reg_776 <= cmp101_fu_425_p2;
        or_ln934_reg_787 <= or_ln934_fu_431_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln930_reg_772 <= icmp_ln930_fu_409_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln930_reg_772 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        or_ln934_1_reg_806 <= or_ln934_1_fu_452_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln930_reg_772 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        or_ln934_2_reg_825 <= or_ln934_2_fu_480_p2;
        trunc_ln414_1_reg_815 <= {{ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_793_reg_191[9:2]}};
        trunc_ln4_reg_810 <= {{ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_765_reg_201[9:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln930_reg_772 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        or_ln934_3_reg_844 <= or_ln934_3_fu_508_p2;
        or_ln934_4_reg_848 <= or_ln934_4_fu_512_p2;
        or_ln934_5_reg_852 <= or_ln934_5_fu_516_p2;
        or_ln934_6_reg_856 <= or_ln934_6_fu_520_p2;
        or_ln934_7_reg_860 <= or_ln934_7_fu_524_p2;
        trunc_ln414_2_reg_829 <= {{ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_764_reg_222[9:2]}};
        trunc_ln414_3_reg_834 <= {{ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_792_reg_211[9:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln930_reg_772 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        trunc_ln414_10_reg_914 <= {{ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_788_reg_299[9:2]}};
        trunc_ln414_s_reg_909 <= {{ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_760_reg_310[9:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln930_reg_772 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        trunc_ln414_4_reg_864 <= {{ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_763_reg_244[9:2]}};
        trunc_ln414_5_reg_869 <= {{ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_791_reg_233[9:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln930_reg_772 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        trunc_ln414_6_reg_879 <= {{ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_762_reg_266[9:2]}};
        trunc_ln414_7_reg_884 <= {{ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_790_reg_255[9:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln930_reg_772 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        trunc_ln414_8_reg_894 <= {{ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_761_reg_288[9:2]}};
        trunc_ln414_9_reg_899 <= {{ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_789_reg_277[9:2]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (icmp_ln930_reg_772 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln930_reg_772 == 1'd0)) begin
        if ((or_ln934_7_reg_860 == 1'd0)) begin
            ap_phi_mux_p_0_0_0_0_0124_767_phi_fu_354_p4 = ap_phi_reg_pp0_iter1_p_0_0_0_0_0124_768_reg_331;
        end else if ((or_ln934_7_reg_860 == 1'd1)) begin
            ap_phi_mux_p_0_0_0_0_0124_767_phi_fu_354_p4 = trunc_ln145_19_fu_644_p1;
        end else begin
            ap_phi_mux_p_0_0_0_0_0124_767_phi_fu_354_p4 = ap_phi_reg_pp0_iter1_p_0_0_0_0_0124_767_reg_351;
        end
    end else begin
        ap_phi_mux_p_0_0_0_0_0124_767_phi_fu_354_p4 = ap_phi_reg_pp0_iter1_p_0_0_0_0_0124_767_reg_351;
    end
end

always @ (*) begin
    if ((icmp_ln930_reg_772 == 1'd0)) begin
        if ((or_ln934_7_reg_860 == 1'd0)) begin
            ap_phi_mux_p_0_3_0_0_0130_795_phi_fu_344_p4 = ap_phi_reg_pp0_iter1_p_0_3_0_0_0130_787_reg_321;
        end else if ((or_ln934_7_reg_860 == 1'd1)) begin
            ap_phi_mux_p_0_3_0_0_0130_795_phi_fu_344_p4 = {{img_dout[39:30]}};
        end else begin
            ap_phi_mux_p_0_3_0_0_0130_795_phi_fu_344_p4 = ap_phi_reg_pp0_iter1_p_0_3_0_0_0130_795_reg_341;
        end
    end else begin
        ap_phi_mux_p_0_3_0_0_0130_795_phi_fu_344_p4 = ap_phi_reg_pp0_iter1_p_0_3_0_0_0130_795_reg_341;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_3 = 12'd0;
    end else begin
        ap_sig_allocacmp_x_3 = x_fu_94;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bytePlanes1_blk_n = bytePlanes1_full_n;
    end else begin
        bytePlanes1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bytePlanes1_write = 1'b1;
    end else begin
        bytePlanes1_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op110_read_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (icmp_ln930_reg_772 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (or_ln934_5_reg_852 == 1'd1)) | ((1'b0 == ap_block_pp0_stage5) & (icmp_ln930_reg_772 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln934_4_reg_848 == 1'd1)) | ((1'b0 == ap_block_pp0_stage4) & (icmp_ln930_reg_772 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln934_3_reg_844 == 1'd1)) | ((1'b0 == ap_block_pp0_stage3) & (icmp_ln930_reg_772 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln934_2_reg_825 == 1'd1)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln930_reg_772 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln934_1_reg_806 == 1'd1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_predicate_op49_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (icmp_ln930_reg_772 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln934_7_reg_860 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        img_blk_n = img_empty_n;
    end else begin
        img_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op110_read_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op119_read_state9 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_predicate_op101_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_predicate_op83_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op59_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op92_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op69_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op49_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        img_read = 1'b1;
    end else begin
        img_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln930_reg_772 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_0_0_0_0_0124_766_out_ap_vld = 1'b1;
    end else begin
        p_0_0_0_0_0124_766_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln930_reg_772 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_0_3_0_0_0130_794_out_ap_vld = 1'b1;
    end else begin
        p_0_3_0_0_0130_794_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((bytePlanes1_full_n == 1'b0) | ((img_empty_n == 1'b0) & (ap_predicate_op119_read_state9 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((bytePlanes1_full_n == 1'b0) | ((img_empty_n == 1'b0) & (ap_predicate_op119_read_state9 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((bytePlanes1_full_n == 1'b0) | ((img_empty_n == 1'b0) & (ap_predicate_op119_read_state9 == 1'b1))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_predicate_op49_read_state2 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_predicate_op49_read_state2 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op59_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op59_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op69_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op69_read_state4 == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op83_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op83_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op92_read_state6 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op92_read_state6 == 1'b1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op101_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op101_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_predicate_op110_read_state8 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_predicate_op110_read_state8 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((ap_predicate_op49_read_state2 == 1'b1) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op59_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op69_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op83_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op92_read_state6 == 1'b1));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op101_read_state7 == 1'b1));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0 = ((ap_predicate_op110_read_state8 == 1'b1) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter1 = ((bytePlanes1_full_n == 1'b0) | ((img_empty_n == 1'b0) & (ap_predicate_op119_read_state9 == 1'b1)));
end

always @ (*) begin
    ap_condition_277 = ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7));
end

always @ (*) begin
    ap_condition_773 = ((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln930_reg_772 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6));
end

always @ (*) begin
    ap_condition_777 = ((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln930_reg_772 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5));
end

always @ (*) begin
    ap_condition_781 = ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln930_reg_772 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4));
end

always @ (*) begin
    ap_condition_785 = ((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln930_reg_772 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_789 = ((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln930_reg_772 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_794 = ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln930_reg_772 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_phi_reg_pp0_iter0_p_0_0_0_0_0124_768_reg_331 = 'bx;

assign ap_phi_reg_pp0_iter0_p_0_3_0_0_0130_787_reg_321 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_0_0_0_0124_767_reg_351 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_3_0_0_0130_795_reg_341 = 'bx;

always @ (*) begin
    ap_predicate_op101_read_state7 = ((icmp_ln930_reg_772 == 1'd0) & (or_ln934_5_reg_852 == 1'd1));
end

always @ (*) begin
    ap_predicate_op110_read_state8 = ((or_ln934_6_reg_856 == 1'd1) & (icmp_ln930_reg_772 == 1'd0));
end

always @ (*) begin
    ap_predicate_op119_read_state9 = ((icmp_ln930_reg_772 == 1'd0) & (or_ln934_7_reg_860 == 1'd1));
end

always @ (*) begin
    ap_predicate_op49_read_state2 = ((or_ln934_reg_787 == 1'd1) & (icmp_ln930_reg_772 == 1'd0));
end

always @ (*) begin
    ap_predicate_op59_read_state3 = ((icmp_ln930_reg_772 == 1'd0) & (or_ln934_1_reg_806 == 1'd1));
end

always @ (*) begin
    ap_predicate_op69_read_state4 = ((icmp_ln930_reg_772 == 1'd0) & (or_ln934_2_reg_825 == 1'd1));
end

always @ (*) begin
    ap_predicate_op83_read_state5 = ((icmp_ln930_reg_772 == 1'd0) & (or_ln934_3_reg_844 == 1'd1));
end

always @ (*) begin
    ap_predicate_op92_read_state6 = ((icmp_ln930_reg_772 == 1'd0) & (or_ln934_4_reg_848 == 1'd1));
end

assign bytePlanes1_din = {{{{{{{{{{{{{{{{trunc_ln414_14_fu_659_p4}, {trunc_ln414_13_fu_649_p4}}, {trunc_ln414_12_fu_634_p4}}, {trunc_ln414_11_fu_624_p4}}, {trunc_ln414_10_reg_914}}, {trunc_ln414_s_reg_909}}, {trunc_ln414_9_reg_899}}, {trunc_ln414_8_reg_894}}, {trunc_ln414_7_reg_884}}, {trunc_ln414_6_reg_879}}, {trunc_ln414_5_reg_869}}, {trunc_ln414_4_reg_864}}, {trunc_ln414_3_reg_834}}, {trunc_ln414_2_reg_829}}, {trunc_ln414_1_reg_815}}, {trunc_ln4_reg_810}};

assign cmp101_fu_425_p2 = (($signed(zext_ln930_fu_421_p1) < $signed(sub100_cast43_cast_fu_387_p1)) ? 1'b1 : 1'b0);

assign icmp_ln930_fu_409_p2 = ((ap_sig_allocacmp_x_3 == trunc_ln915_1) ? 1'b1 : 1'b0);

assign or_ln934_1_fu_452_p2 = (cmp103_1 | cmp101_reg_776);

assign or_ln934_2_fu_480_p2 = (cmp103_2 | cmp101_reg_776);

assign or_ln934_3_fu_508_p2 = (cmp103_3 | cmp101_reg_776);

assign or_ln934_4_fu_512_p2 = (cmp103_4 | cmp101_reg_776);

assign or_ln934_5_fu_516_p2 = (cmp103_5 | cmp101_reg_776);

assign or_ln934_6_fu_520_p2 = (cmp103_6 | cmp101_reg_776);

assign or_ln934_7_fu_524_p2 = (icmp_ln920 | cmp101_reg_776);

assign or_ln934_fu_431_p2 = (cmp103 | cmp101_fu_425_p2);

assign p_0_0_0_0_0124_766_out = p_0_0_0_0_0124_766_fu_98;

assign p_0_3_0_0_0130_794_out = p_0_3_0_0_0130_794_fu_102;

assign sub100_cast43_cast_fu_387_p1 = $signed(sub100_cast43);

assign trunc_ln145_10_fu_476_p1 = img_dout[9:0];

assign trunc_ln145_11_fu_504_p1 = img_dout[9:0];

assign trunc_ln145_13_fu_548_p1 = img_dout[9:0];

assign trunc_ln145_14_fu_572_p1 = img_dout[9:0];

assign trunc_ln145_15_fu_596_p1 = img_dout[9:0];

assign trunc_ln145_17_fu_620_p1 = img_dout[9:0];

assign trunc_ln145_19_fu_644_p1 = img_dout[9:0];

assign trunc_ln145_fu_448_p1 = img_dout[9:0];

assign trunc_ln414_11_fu_624_p4 = {{ap_phi_reg_pp0_iter1_p_0_0_0_0_0124_768_reg_331[9:2]}};

assign trunc_ln414_12_fu_634_p4 = {{ap_phi_reg_pp0_iter1_p_0_3_0_0_0130_787_reg_321[9:2]}};

assign trunc_ln414_13_fu_649_p4 = {{ap_phi_mux_p_0_0_0_0_0124_767_phi_fu_354_p4[9:2]}};

assign trunc_ln414_14_fu_659_p4 = {{ap_phi_mux_p_0_3_0_0_0130_795_phi_fu_344_p4[9:2]}};

assign x_4_fu_415_p2 = (ap_sig_allocacmp_x_3 + 12'd1);

assign zext_ln930_fu_421_p1 = ap_sig_allocacmp_x_3;

endmodule //design_1_v_frm_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_930_1
