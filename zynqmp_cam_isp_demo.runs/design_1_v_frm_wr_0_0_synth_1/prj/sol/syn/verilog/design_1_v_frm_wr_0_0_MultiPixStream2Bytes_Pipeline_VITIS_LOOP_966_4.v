// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module design_1_v_frm_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_966_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_dout,
        img_num_data_valid,
        img_fifo_cap,
        img_empty_n,
        img_read,
        p_0_3_0_0_0_5159_lcssa185,
        p_0_0_0_0_0_5138_lcssa176,
        trunc_ln,
        bytePlanes1_din,
        bytePlanes1_num_data_valid,
        bytePlanes1_fifo_cap,
        bytePlanes1_full_n,
        bytePlanes1_write,
        cmp169_5,
        cmp169_4,
        cmp169_3,
        cmp169_2,
        cmp169_1,
        sub166_cast44,
        cmp169,
        p_0_3_0_0_0_5158_out,
        p_0_3_0_0_0_5158_out_ap_vld,
        p_0_0_0_0_0_5137_out,
        p_0_0_0_0_0_5137_out_ap_vld,
        out_pix_V_7_out_i,
        out_pix_V_7_out_o,
        out_pix_V_7_out_o_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 6'd1;
parameter    ap_ST_fsm_pp0_stage1 = 6'd2;
parameter    ap_ST_fsm_pp0_stage2 = 6'd4;
parameter    ap_ST_fsm_pp0_stage3 = 6'd8;
parameter    ap_ST_fsm_pp0_stage4 = 6'd16;
parameter    ap_ST_fsm_pp0_stage5 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [59:0] img_dout;
input  [1:0] img_num_data_valid;
input  [1:0] img_fifo_cap;
input   img_empty_n;
output   img_read;
input  [9:0] p_0_3_0_0_0_5159_lcssa185;
input  [9:0] p_0_0_0_0_0_5138_lcssa176;
input  [11:0] trunc_ln;
output  [127:0] bytePlanes1_din;
input  [9:0] bytePlanes1_num_data_valid;
input  [9:0] bytePlanes1_fifo_cap;
input   bytePlanes1_full_n;
output   bytePlanes1_write;
input  [0:0] cmp169_5;
input  [0:0] cmp169_4;
input  [0:0] cmp169_3;
input  [0:0] cmp169_2;
input  [0:0] cmp169_1;
input  [11:0] sub166_cast44;
input  [0:0] cmp169;
output  [9:0] p_0_3_0_0_0_5158_out;
output   p_0_3_0_0_0_5158_out_ap_vld;
output  [9:0] p_0_0_0_0_0_5137_out;
output   p_0_0_0_0_0_5137_out_ap_vld;
input  [127:0] out_pix_V_7_out_i;
output  [127:0] out_pix_V_7_out_o;
output   out_pix_V_7_out_o_ap_vld;

reg ap_idle;
reg img_read;
reg bytePlanes1_write;
reg p_0_3_0_0_0_5158_out_ap_vld;
reg p_0_0_0_0_0_5137_out_ap_vld;
reg[127:0] out_pix_V_7_out_o;
reg out_pix_V_7_out_o_ap_vld;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
reg   [0:0] icmp_ln966_reg_610;
reg   [0:0] or_ln971_reg_623;
reg    ap_predicate_op45_read_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage5;
reg   [0:0] or_ln971_4_reg_659;
reg    ap_predicate_op78_read_state6;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_subdone;
reg    bytePlanes1_blk_n;
wire    ap_block_pp0_stage0;
reg    img_blk_n;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] or_ln971_1_reg_642;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] or_ln971_2_reg_651;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [0:0] or_ln971_3_reg_655;
wire    ap_block_pp0_stage5;
reg   [0:0] or_ln971_5_reg_663;
reg   [9:0] r_V_1_reg_187;
reg   [9:0] r_V_reg_197;
reg   [9:0] r_V_3_reg_207;
reg   [9:0] r_V_2_reg_218;
reg   [9:0] r_V_5_reg_229;
reg   [9:0] r_V_4_reg_240;
reg   [9:0] r_V_7_reg_251;
reg   [9:0] r_V_6_reg_262;
reg    ap_block_pp0_stage1_11001;
reg    ap_predicate_op64_read_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg    ap_block_pp0_stage5_11001;
reg    ap_predicate_op53_read_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
reg    ap_predicate_op71_read_state5;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_predicate_op85_read_state7;
reg    ap_block_state7_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln966_fu_359_p2;
wire   [0:0] cmp167_fu_375_p2;
reg   [0:0] cmp167_reg_614;
wire   [0:0] or_ln971_fu_381_p2;
wire   [9:0] trunc_ln145_fu_398_p1;
wire   [0:0] or_ln971_1_fu_402_p2;
wire   [9:0] trunc_ln145_1_fu_406_p1;
wire   [0:0] or_ln971_2_fu_410_p2;
wire   [0:0] or_ln971_3_fu_414_p2;
wire   [0:0] or_ln971_4_fu_418_p2;
wire   [0:0] or_ln971_5_fu_422_p2;
wire   [9:0] trunc_ln145_2_fu_426_p1;
wire   [9:0] trunc_ln145_4_fu_430_p1;
wire   [9:0] trunc_ln145_6_fu_434_p1;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
reg   [9:0] ap_phi_reg_pp0_iter0_r_V_1_reg_187;
reg   [9:0] ap_phi_reg_pp0_iter0_r_V_reg_197;
reg   [9:0] ap_phi_reg_pp0_iter0_r_V_3_reg_207;
reg   [9:0] ap_phi_reg_pp0_iter0_r_V_2_reg_218;
reg   [9:0] ap_phi_reg_pp0_iter0_r_V_5_reg_229;
reg   [9:0] ap_phi_reg_pp0_iter0_r_V_4_reg_240;
reg   [9:0] ap_phi_reg_pp0_iter0_r_V_7_reg_251;
reg   [9:0] ap_phi_reg_pp0_iter0_r_V_6_reg_262;
wire   [9:0] ap_phi_reg_pp0_iter0_r_V_9_reg_273;
reg   [9:0] ap_phi_reg_pp0_iter1_r_V_9_reg_273;
wire   [9:0] ap_phi_reg_pp0_iter0_r_V_8_reg_283;
reg   [9:0] ap_phi_reg_pp0_iter1_r_V_8_reg_283;
reg   [9:0] ap_phi_mux_r_V_11_phi_fu_296_p4;
wire   [9:0] ap_phi_reg_pp0_iter1_r_V_11_reg_293;
reg   [9:0] ap_phi_mux_r_V_10_phi_fu_306_p4;
wire   [9:0] trunc_ln145_9_fu_438_p1;
wire   [9:0] ap_phi_reg_pp0_iter1_r_V_10_reg_303;
wire   [127:0] p_Result_3_fu_523_p5;
reg   [11:0] x_fu_102;
wire   [11:0] x_2_fu_365_p2;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_x_1;
reg   [9:0] r_V_12_fu_106;
reg   [9:0] r_V_13_fu_110;
reg    ap_block_pp0_stage0_01001;
wire   [12:0] zext_ln966_fu_371_p1;
wire  signed [12:0] sub166_cast44_cast_fu_337_p1;
wire   [29:0] tmp_s_fu_447_p4;
wire   [127:0] p_Result_s_fu_457_p5;
wire   [29:0] tmp_1_fu_469_p4;
wire   [127:0] p_Result_1_fu_479_p5;
wire   [29:0] tmp_2_fu_491_p4;
wire   [127:0] p_Result_2_fu_501_p5;
wire   [29:0] tmp_3_fu_513_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_588;
reg    ap_condition_593;
reg    ap_condition_597;
reg    ap_condition_601;
reg    ap_condition_227;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

design_1_v_frm_wr_0_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_588)) begin
        if ((or_ln971_reg_623 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_r_V_1_reg_187 <= r_V_13_fu_110;
        end else if ((or_ln971_reg_623 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_r_V_1_reg_187 <= {{img_dout[39:30]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_593)) begin
        if ((or_ln971_1_reg_642 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_r_V_2_reg_218 <= ap_phi_reg_pp0_iter0_r_V_reg_197;
        end else if ((or_ln971_1_reg_642 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_r_V_2_reg_218 <= trunc_ln145_1_fu_406_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_593)) begin
        if ((or_ln971_1_reg_642 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_r_V_3_reg_207 <= ap_phi_reg_pp0_iter0_r_V_1_reg_187;
        end else if ((or_ln971_1_reg_642 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_r_V_3_reg_207 <= {{img_dout[39:30]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_597)) begin
        if ((or_ln971_2_reg_651 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_r_V_4_reg_240 <= ap_phi_reg_pp0_iter0_r_V_2_reg_218;
        end else if ((or_ln971_2_reg_651 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_r_V_4_reg_240 <= trunc_ln145_2_fu_426_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_597)) begin
        if ((or_ln971_2_reg_651 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_r_V_5_reg_229 <= ap_phi_reg_pp0_iter0_r_V_3_reg_207;
        end else if ((or_ln971_2_reg_651 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_r_V_5_reg_229 <= {{img_dout[39:30]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_601)) begin
        if ((or_ln971_3_reg_655 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_r_V_6_reg_262 <= ap_phi_reg_pp0_iter0_r_V_4_reg_240;
        end else if ((or_ln971_3_reg_655 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_r_V_6_reg_262 <= trunc_ln145_4_fu_430_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_601)) begin
        if ((or_ln971_3_reg_655 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_r_V_7_reg_251 <= ap_phi_reg_pp0_iter0_r_V_5_reg_229;
        end else if ((or_ln971_3_reg_655 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_r_V_7_reg_251 <= {{img_dout[39:30]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_588)) begin
        if ((or_ln971_reg_623 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_r_V_reg_197 <= r_V_12_fu_106;
        end else if ((or_ln971_reg_623 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_r_V_reg_197 <= trunc_ln145_fu_398_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_227)) begin
        if (((or_ln971_4_reg_659 == 1'd0) & (icmp_ln966_reg_610 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_r_V_8_reg_283 <= ap_phi_reg_pp0_iter0_r_V_6_reg_262;
        end else if (((or_ln971_4_reg_659 == 1'd1) & (icmp_ln966_reg_610 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_r_V_8_reg_283 <= trunc_ln145_6_fu_434_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_r_V_8_reg_283 <= ap_phi_reg_pp0_iter0_r_V_8_reg_283;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_227)) begin
        if (((or_ln971_4_reg_659 == 1'd0) & (icmp_ln966_reg_610 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_r_V_9_reg_273 <= ap_phi_reg_pp0_iter0_r_V_7_reg_251;
        end else if (((or_ln971_4_reg_659 == 1'd1) & (icmp_ln966_reg_610 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_r_V_9_reg_273 <= {{img_dout[39:30]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_r_V_9_reg_273 <= ap_phi_reg_pp0_iter0_r_V_9_reg_273;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            r_V_12_fu_106 <= p_0_0_0_0_0_5138_lcssa176;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            r_V_12_fu_106 <= ap_phi_mux_r_V_10_phi_fu_306_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            r_V_13_fu_110 <= p_0_3_0_0_0_5159_lcssa185;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            r_V_13_fu_110 <= ap_phi_mux_r_V_11_phi_fu_296_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln966_fu_359_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_102 <= x_2_fu_365_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_102 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln966_fu_359_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp167_reg_614 <= cmp167_fu_375_p2;
        or_ln971_reg_623 <= or_ln971_fu_381_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln966_reg_610 <= icmp_ln966_fu_359_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln966_reg_610 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        or_ln971_1_reg_642 <= or_ln971_1_fu_402_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln966_reg_610 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        or_ln971_2_reg_651 <= or_ln971_2_fu_410_p2;
        or_ln971_3_reg_655 <= or_ln971_3_fu_414_p2;
        or_ln971_4_reg_659 <= or_ln971_4_fu_418_p2;
        or_ln971_5_reg_663 <= or_ln971_5_fu_422_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        r_V_1_reg_187 <= ap_phi_reg_pp0_iter0_r_V_1_reg_187;
        r_V_reg_197 <= ap_phi_reg_pp0_iter0_r_V_reg_197;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        r_V_2_reg_218 <= ap_phi_reg_pp0_iter0_r_V_2_reg_218;
        r_V_3_reg_207 <= ap_phi_reg_pp0_iter0_r_V_3_reg_207;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        r_V_4_reg_240 <= ap_phi_reg_pp0_iter0_r_V_4_reg_240;
        r_V_5_reg_229 <= ap_phi_reg_pp0_iter0_r_V_5_reg_229;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        r_V_6_reg_262 <= ap_phi_reg_pp0_iter0_r_V_6_reg_262;
        r_V_7_reg_251 <= ap_phi_reg_pp0_iter0_r_V_7_reg_251;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (icmp_ln966_reg_610 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln966_reg_610 == 1'd0)) begin
        if ((or_ln971_5_reg_663 == 1'd0)) begin
            ap_phi_mux_r_V_10_phi_fu_306_p4 = ap_phi_reg_pp0_iter1_r_V_8_reg_283;
        end else if ((or_ln971_5_reg_663 == 1'd1)) begin
            ap_phi_mux_r_V_10_phi_fu_306_p4 = trunc_ln145_9_fu_438_p1;
        end else begin
            ap_phi_mux_r_V_10_phi_fu_306_p4 = ap_phi_reg_pp0_iter1_r_V_10_reg_303;
        end
    end else begin
        ap_phi_mux_r_V_10_phi_fu_306_p4 = ap_phi_reg_pp0_iter1_r_V_10_reg_303;
    end
end

always @ (*) begin
    if ((icmp_ln966_reg_610 == 1'd0)) begin
        if ((or_ln971_5_reg_663 == 1'd0)) begin
            ap_phi_mux_r_V_11_phi_fu_296_p4 = ap_phi_reg_pp0_iter1_r_V_9_reg_273;
        end else if ((or_ln971_5_reg_663 == 1'd1)) begin
            ap_phi_mux_r_V_11_phi_fu_296_p4 = {{img_dout[39:30]}};
        end else begin
            ap_phi_mux_r_V_11_phi_fu_296_p4 = ap_phi_reg_pp0_iter1_r_V_11_reg_293;
        end
    end else begin
        ap_phi_mux_r_V_11_phi_fu_296_p4 = ap_phi_reg_pp0_iter1_r_V_11_reg_293;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_1 = 12'd0;
    end else begin
        ap_sig_allocacmp_x_1 = x_fu_102;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bytePlanes1_blk_n = bytePlanes1_full_n;
    end else begin
        bytePlanes1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bytePlanes1_write = 1'b1;
    end else begin
        bytePlanes1_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op78_read_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (icmp_ln966_reg_610 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln971_3_reg_655 == 1'd1)) | ((1'b0 == ap_block_pp0_stage3) & (icmp_ln966_reg_610 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln971_2_reg_651 == 1'd1)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln966_reg_610 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln971_1_reg_642 == 1'd1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_predicate_op45_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (icmp_ln966_reg_610 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_ln971_5_reg_663 == 1'd1)))) begin
        img_blk_n = img_empty_n;
    end else begin
        img_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op78_read_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op85_read_state7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op71_read_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op53_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op64_read_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op45_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        img_read = 1'b1;
    end else begin
        img_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_pix_V_7_out_o = p_Result_3_fu_523_p5;
    end else begin
        out_pix_V_7_out_o = out_pix_V_7_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_pix_V_7_out_o_ap_vld = 1'b1;
    end else begin
        out_pix_V_7_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln966_reg_610 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_0_0_0_0_0_5137_out_ap_vld = 1'b1;
    end else begin
        p_0_0_0_0_0_5137_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln966_reg_610 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_0_3_0_0_0_5158_out_ap_vld = 1'b1;
    end else begin
        p_0_3_0_0_0_5158_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((bytePlanes1_full_n == 1'b0) | ((img_empty_n == 1'b0) & (ap_predicate_op85_read_state7 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((bytePlanes1_full_n == 1'b0) | ((img_empty_n == 1'b0) & (ap_predicate_op85_read_state7 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((bytePlanes1_full_n == 1'b0) | ((img_empty_n == 1'b0) & (ap_predicate_op85_read_state7 == 1'b1))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_predicate_op45_read_state2 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_predicate_op45_read_state2 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op53_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op53_read_state3 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op64_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op64_read_state4 == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op71_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op71_read_state5 == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_predicate_op78_read_state6 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_predicate_op78_read_state6 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((ap_predicate_op45_read_state2 == 1'b1) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op53_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op64_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op71_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = ((ap_predicate_op78_read_state6 == 1'b1) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7_pp0_stage0_iter1 = ((bytePlanes1_full_n == 1'b0) | ((img_empty_n == 1'b0) & (ap_predicate_op85_read_state7 == 1'b1)));
end

always @ (*) begin
    ap_condition_227 = ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5));
end

always @ (*) begin
    ap_condition_588 = ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln966_reg_610 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_593 = ((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln966_reg_610 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_597 = ((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln966_reg_610 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_601 = ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln966_reg_610 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_phi_reg_pp0_iter0_r_V_8_reg_283 = 'bx;

assign ap_phi_reg_pp0_iter0_r_V_9_reg_273 = 'bx;

assign ap_phi_reg_pp0_iter1_r_V_10_reg_303 = 'bx;

assign ap_phi_reg_pp0_iter1_r_V_11_reg_293 = 'bx;

always @ (*) begin
    ap_predicate_op45_read_state2 = ((or_ln971_reg_623 == 1'd1) & (icmp_ln966_reg_610 == 1'd0));
end

always @ (*) begin
    ap_predicate_op53_read_state3 = ((icmp_ln966_reg_610 == 1'd0) & (or_ln971_1_reg_642 == 1'd1));
end

always @ (*) begin
    ap_predicate_op64_read_state4 = ((icmp_ln966_reg_610 == 1'd0) & (or_ln971_2_reg_651 == 1'd1));
end

always @ (*) begin
    ap_predicate_op71_read_state5 = ((icmp_ln966_reg_610 == 1'd0) & (or_ln971_3_reg_655 == 1'd1));
end

always @ (*) begin
    ap_predicate_op78_read_state6 = ((or_ln971_4_reg_659 == 1'd1) & (icmp_ln966_reg_610 == 1'd0));
end

always @ (*) begin
    ap_predicate_op85_read_state7 = ((icmp_ln966_reg_610 == 1'd0) & (or_ln971_5_reg_663 == 1'd1));
end

assign bytePlanes1_din = {{p_Result_2_fu_501_p5[127:126]}, {tmp_3_fu_513_p4}, {p_Result_2_fu_501_p5[95:0]}};

assign cmp167_fu_375_p2 = (($signed(zext_ln966_fu_371_p1) < $signed(sub166_cast44_cast_fu_337_p1)) ? 1'b1 : 1'b0);

assign icmp_ln966_fu_359_p2 = ((ap_sig_allocacmp_x_1 == trunc_ln) ? 1'b1 : 1'b0);

assign or_ln971_1_fu_402_p2 = (cmp169_1 | cmp167_reg_614);

assign or_ln971_2_fu_410_p2 = (cmp169_2 | cmp167_reg_614);

assign or_ln971_3_fu_414_p2 = (cmp169_3 | cmp167_reg_614);

assign or_ln971_4_fu_418_p2 = (cmp169_4 | cmp167_reg_614);

assign or_ln971_5_fu_422_p2 = (cmp169_5 | cmp167_reg_614);

assign or_ln971_fu_381_p2 = (cmp169 | cmp167_fu_375_p2);

assign p_0_0_0_0_0_5137_out = r_V_12_fu_106;

assign p_0_3_0_0_0_5158_out = r_V_13_fu_110;

assign p_Result_1_fu_479_p5 = {{p_Result_s_fu_457_p5[127:62]}, {tmp_1_fu_469_p4}, {p_Result_s_fu_457_p5[31:0]}};

assign p_Result_2_fu_501_p5 = {{p_Result_1_fu_479_p5[127:94]}, {tmp_2_fu_491_p4}, {p_Result_1_fu_479_p5[63:0]}};

assign p_Result_3_fu_523_p5 = {{p_Result_2_fu_501_p5[127:126]}, {tmp_3_fu_513_p4}, {p_Result_2_fu_501_p5[95:0]}};

assign p_Result_s_fu_457_p5 = {{out_pix_V_7_out_i[127:30]}, {tmp_s_fu_447_p4}};

assign sub166_cast44_cast_fu_337_p1 = $signed(sub166_cast44);

assign tmp_1_fu_469_p4 = {{{r_V_5_reg_229}, {r_V_4_reg_240}}, {r_V_3_reg_207}};

assign tmp_2_fu_491_p4 = {{{ap_phi_reg_pp0_iter1_r_V_8_reg_283}, {r_V_7_reg_251}}, {r_V_6_reg_262}};

assign tmp_3_fu_513_p4 = {{{ap_phi_mux_r_V_11_phi_fu_296_p4}, {ap_phi_mux_r_V_10_phi_fu_306_p4}}, {ap_phi_reg_pp0_iter1_r_V_9_reg_273}};

assign tmp_s_fu_447_p4 = {{{r_V_2_reg_218}, {r_V_1_reg_187}}, {r_V_reg_197}};

assign trunc_ln145_1_fu_406_p1 = img_dout[9:0];

assign trunc_ln145_2_fu_426_p1 = img_dout[9:0];

assign trunc_ln145_4_fu_430_p1 = img_dout[9:0];

assign trunc_ln145_6_fu_434_p1 = img_dout[9:0];

assign trunc_ln145_9_fu_438_p1 = img_dout[9:0];

assign trunc_ln145_fu_398_p1 = img_dout[9:0];

assign x_2_fu_365_p2 = (ap_sig_allocacmp_x_1 + 12'd1);

assign zext_ln966_fu_371_p1 = ap_sig_allocacmp_x_1;

endmodule //design_1_v_frm_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_966_4
