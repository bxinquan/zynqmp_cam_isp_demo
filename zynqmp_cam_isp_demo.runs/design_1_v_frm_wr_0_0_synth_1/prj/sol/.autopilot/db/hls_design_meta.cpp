#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_mm_video_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_mm_video_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_mm_video_AWADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_mm_video_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_mm_video_AWLEN", 8, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_mm_video_AWSIZE", 3, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_mm_video_AWBURST", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_mm_video_AWLOCK", 2, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_mm_video_AWCACHE", 4, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_mm_video_AWPROT", 3, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_mm_video_AWQOS", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_mm_video_AWREGION", 4, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_mm_video_AWUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_mm_video_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_mm_video_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_mm_video_WDATA", 128, hls_out, 0, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_mm_video_WSTRB", 16, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_mm_video_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_mm_video_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_mm_video_WUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_mm_video_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_mm_video_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_mm_video_ARADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_mm_video_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_mm_video_ARLEN", 8, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_mm_video_ARSIZE", 3, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_mm_video_ARBURST", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_mm_video_ARLOCK", 2, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_mm_video_ARCACHE", 4, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_mm_video_ARPROT", 3, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_mm_video_ARQOS", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_mm_video_ARREGION", 4, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_mm_video_ARUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_mm_video_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_mm_video_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_mm_video_RDATA", 128, hls_in, 0, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_mm_video_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_mm_video_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_mm_video_RUSER", 1, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_mm_video_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_mm_video_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_mm_video_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_mm_video_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_mm_video_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_mm_video_BUSER", 1, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("s_axis_video_TDATA", 64, hls_in, 8, "axis", "in_data", 1),
	Port_Property("s_axis_video_TVALID", 1, hls_in, 14, "axis", "in_vld", 1),
	Port_Property("s_axis_video_TREADY", 1, hls_out, 14, "axis", "in_acc", 1),
	Port_Property("s_axis_video_TKEEP", 8, hls_in, 9, "axis", "in_data", 1),
	Port_Property("s_axis_video_TSTRB", 8, hls_in, 10, "axis", "in_data", 1),
	Port_Property("s_axis_video_TUSER", 1, hls_in, 11, "axis", "in_data", 1),
	Port_Property("s_axis_video_TLAST", 1, hls_in, 12, "axis", "in_data", 1),
	Port_Property("s_axis_video_TID", 1, hls_in, 13, "axis", "in_data", 1),
	Port_Property("s_axis_video_TDEST", 1, hls_in, 14, "axis", "in_data", 1),
	Port_Property("s_axi_CTRL_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_AWADDR", 7, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARADDR", 7, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "v_frmbuf_wr";
