// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module design_1_v_frmbuf_rd_0_0_Bytes2MultiPixStream_Pipeline_VITIS_LOOP_1302_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_din,
        img_num_data_valid,
        img_fifo_cap,
        img_full_n,
        img_write,
        trunc_ln,
        icmp_ln1292,
        cmp226_4,
        cmp226_3,
        cmp226_2,
        cmp226_1,
        bytePlanes1_dout,
        bytePlanes1_num_data_valid,
        bytePlanes1_fifo_cap,
        bytePlanes1_empty_n,
        bytePlanes1_read,
        sub222_cast17,
        cmp226
);

parameter    ap_ST_fsm_pp0_stage0 = 6'd1;
parameter    ap_ST_fsm_pp0_stage1 = 6'd2;
parameter    ap_ST_fsm_pp0_stage2 = 6'd4;
parameter    ap_ST_fsm_pp0_stage3 = 6'd8;
parameter    ap_ST_fsm_pp0_stage4 = 6'd16;
parameter    ap_ST_fsm_pp0_stage5 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [29:0] img_din;
input  [1:0] img_num_data_valid;
input  [1:0] img_fifo_cap;
input   img_full_n;
output   img_write;
input  [12:0] trunc_ln;
input  [0:0] icmp_ln1292;
input  [0:0] cmp226_4;
input  [0:0] cmp226_3;
input  [0:0] cmp226_2;
input  [0:0] cmp226_1;
input  [63:0] bytePlanes1_dout;
input  [10:0] bytePlanes1_num_data_valid;
input  [10:0] bytePlanes1_fifo_cap;
input   bytePlanes1_empty_n;
output   bytePlanes1_read;
input  [12:0] sub222_cast17;
input  [0:0] cmp226;

reg ap_idle;
reg[29:0] img_din;
reg img_write;
reg bytePlanes1_read;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] or_ln1323_5_reg_366;
reg    ap_block_state7_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1302_fu_169_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage5;
reg   [0:0] icmp_ln1302_reg_342;
reg   [0:0] or_ln1323_4_reg_362;
reg    ap_predicate_op68_write_state6;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_subdone;
reg    bytePlanes1_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    img_blk_n;
reg   [0:0] or_ln1323_reg_346;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] or_ln1323_1_reg_350;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] or_ln1323_2_reg_354;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [0:0] or_ln1323_3_reg_358;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] or_ln1323_fu_191_p2;
wire   [0:0] or_ln1323_1_fu_197_p2;
wire   [0:0] or_ln1323_2_fu_203_p2;
wire   [0:0] or_ln1323_3_fu_209_p2;
wire   [0:0] or_ln1323_4_fu_215_p2;
wire   [0:0] or_ln1323_5_fu_221_p2;
reg   [9:0] tmp_6_reg_370;
reg    ap_predicate_op51_write_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
reg   [9:0] tmp_3_reg_375;
reg   [9:0] tmp_5_reg_380;
reg   [9:0] tmp_8_reg_385;
reg   [9:0] tmp_s_reg_390;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [12:0] x_fu_92;
wire   [12:0] x_2_fu_175_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_x_1;
wire   [29:0] p_s_fu_236_p3;
reg    ap_block_pp0_stage1_01001;
wire   [29:0] p_1_fu_295_p3;
reg    ap_predicate_op59_write_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_01001;
wire   [29:0] p_2_fu_303_p3;
reg    ap_predicate_op62_write_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_01001;
wire   [29:0] p_3_fu_311_p3;
reg    ap_predicate_op65_write_state5;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_01001;
wire   [29:0] p_4_fu_319_p3;
reg    ap_block_pp0_stage5_01001;
wire   [29:0] p_0_fu_327_p3;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_pp0_stage3_11001;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_pp0_stage5_11001;
wire   [13:0] zext_ln1302_fu_181_p1;
wire  signed [13:0] sub222_cast17_cast_fu_157_p1;
wire   [0:0] cmp223_fu_185_p2;
wire   [9:0] trunc_ln674_fu_232_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 or_ln1323_5_reg_366 = 1'd0;
#0 icmp_ln1302_reg_342 = 1'd0;
#0 or_ln1323_4_reg_362 = 1'd0;
#0 or_ln1323_reg_346 = 1'd0;
#0 or_ln1323_1_reg_350 = 1'd0;
#0 or_ln1323_2_reg_354 = 1'd0;
#0 or_ln1323_3_reg_358 = 1'd0;
#0 tmp_6_reg_370 = 10'd0;
#0 tmp_3_reg_375 = 10'd0;
#0 tmp_5_reg_380 = 10'd0;
#0 tmp_8_reg_385 = 10'd0;
#0 tmp_s_reg_390 = 10'd0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 x_fu_92 = 13'd0;
#0 ap_done_reg = 1'b0;
end

design_1_v_frmbuf_rd_0_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        icmp_ln1302_reg_342 <= 1'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            icmp_ln1302_reg_342 <= icmp_ln1302_fu_169_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln1323_1_reg_350 <= 1'd0;
    end else begin
        if (((icmp_ln1302_fu_169_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln1323_1_reg_350 <= or_ln1323_1_fu_197_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln1323_2_reg_354 <= 1'd0;
    end else begin
        if (((icmp_ln1302_fu_169_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln1323_2_reg_354 <= or_ln1323_2_fu_203_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln1323_3_reg_358 <= 1'd0;
    end else begin
        if (((icmp_ln1302_fu_169_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln1323_3_reg_358 <= or_ln1323_3_fu_209_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln1323_4_reg_362 <= 1'd0;
    end else begin
        if (((icmp_ln1302_fu_169_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln1323_4_reg_362 <= or_ln1323_4_fu_215_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln1323_5_reg_366 <= 1'd0;
    end else begin
        if (((icmp_ln1302_fu_169_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln1323_5_reg_366 <= or_ln1323_5_fu_221_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        or_ln1323_reg_346 <= 1'd0;
    end else begin
        if (((icmp_ln1302_fu_169_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            or_ln1323_reg_346 <= or_ln1323_fu_191_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_3_reg_375 <= 10'd0;
    end else begin
        if (((icmp_ln1302_reg_342 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_3_reg_375 <= {{bytePlanes1_dout[29:20]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_5_reg_380 <= 10'd0;
    end else begin
        if (((icmp_ln1302_reg_342 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_5_reg_380 <= {{bytePlanes1_dout[41:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_6_reg_370 <= 10'd0;
    end else begin
        if (((icmp_ln1302_reg_342 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_6_reg_370 <= {{bytePlanes1_dout[19:10]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_8_reg_385 <= 10'd0;
    end else begin
        if (((icmp_ln1302_reg_342 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_8_reg_385 <= {{bytePlanes1_dout[51:42]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tmp_s_reg_390 <= 10'd0;
    end else begin
        if (((icmp_ln1302_reg_342 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            tmp_s_reg_390 <= {{bytePlanes1_dout[61:52]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        x_fu_92 <= 13'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            if (((icmp_ln1302_fu_169_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                x_fu_92 <= x_2_fu_175_p2;
            end else if ((ap_loop_init == 1'b1)) begin
                x_fu_92 <= 13'd0;
            end
        end
    end
end

always @ (*) begin
    if (((icmp_ln1302_fu_169_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_1 = 13'd0;
    end else begin
        ap_sig_allocacmp_x_1 = x_fu_92;
    end
end

always @ (*) begin
    if (((icmp_ln1302_reg_342 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes1_blk_n = bytePlanes1_empty_n;
    end else begin
        bytePlanes1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln1302_reg_342 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes1_read = 1'b1;
    end else begin
        bytePlanes1_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op68_write_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1302_reg_342 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln1323_3_reg_358 == 1'd1)) | ((icmp_ln1302_reg_342 == 1'd0) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln1323_2_reg_354 == 1'd1)) | ((icmp_ln1302_reg_342 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln1323_1_reg_350 == 1'd1)) | ((icmp_ln1302_reg_342 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_ln1323_reg_346 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0) & (or_ln1323_5_reg_366 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        img_blk_n = img_full_n;
    end else begin
        img_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (or_ln1323_5_reg_366 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        img_din = p_0_fu_327_p3;
    end else if (((ap_predicate_op68_write_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage5_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        img_din = p_4_fu_319_p3;
    end else if (((1'b0 == ap_block_pp0_stage4_01001) & (ap_predicate_op65_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        img_din = p_3_fu_311_p3;
    end else if (((1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op62_write_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        img_din = p_2_fu_303_p3;
    end else if (((1'b0 == ap_block_pp0_stage2_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op59_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        img_din = p_1_fu_295_p3;
    end else if (((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op51_write_state2 == 1'b1))) begin
        img_din = p_s_fu_236_p3;
    end else begin
        img_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op68_write_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_predicate_op65_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op62_write_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op59_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op51_write_state2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (or_ln1323_5_reg_366 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        img_write = 1'b1;
    end else begin
        img_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((or_ln1323_5_reg_366 == 1'd1) & (img_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((or_ln1323_5_reg_366 == 1'd1) & (img_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((or_ln1323_5_reg_366 == 1'd1) & (img_full_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((img_full_n == 1'b0) & (ap_predicate_op51_write_state2 == 1'b1)) | ((bytePlanes1_empty_n == 1'b0) & (icmp_ln1302_reg_342 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((img_full_n == 1'b0) & (ap_predicate_op51_write_state2 == 1'b1)) | ((bytePlanes1_empty_n == 1'b0) & (icmp_ln1302_reg_342 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((img_full_n == 1'b0) & (ap_predicate_op51_write_state2 == 1'b1)) | ((bytePlanes1_empty_n == 1'b0) & (icmp_ln1302_reg_342 == 1'd0))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((img_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op59_write_state3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((img_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op59_write_state3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((img_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op59_write_state3 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((img_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op62_write_state4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((img_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op62_write_state4 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((img_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op62_write_state4 == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((img_full_n == 1'b0) & (ap_predicate_op65_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((img_full_n == 1'b0) & (ap_predicate_op65_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((img_full_n == 1'b0) & (ap_predicate_op65_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((ap_predicate_op68_write_state6 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_predicate_op68_write_state6 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_predicate_op68_write_state6 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = (((img_full_n == 1'b0) & (ap_predicate_op51_write_state2 == 1'b1)) | ((bytePlanes1_empty_n == 1'b0) & (icmp_ln1302_reg_342 == 1'd0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((img_full_n == 1'b0) & (ap_predicate_op59_write_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((img_full_n == 1'b0) & (ap_predicate_op62_write_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = ((img_full_n == 1'b0) & (ap_predicate_op65_write_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = ((ap_predicate_op68_write_state6 == 1'b1) & (img_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state7_pp0_stage0_iter1 = ((or_ln1323_5_reg_366 == 1'd1) & (img_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op51_write_state2 = ((icmp_ln1302_reg_342 == 1'd0) & (or_ln1323_reg_346 == 1'd1));
end

always @ (*) begin
    ap_predicate_op59_write_state3 = ((icmp_ln1302_reg_342 == 1'd0) & (or_ln1323_1_reg_350 == 1'd1));
end

always @ (*) begin
    ap_predicate_op62_write_state4 = ((icmp_ln1302_reg_342 == 1'd0) & (or_ln1323_2_reg_354 == 1'd1));
end

always @ (*) begin
    ap_predicate_op65_write_state5 = ((icmp_ln1302_reg_342 == 1'd0) & (or_ln1323_3_reg_358 == 1'd1));
end

always @ (*) begin
    ap_predicate_op68_write_state6 = ((or_ln1323_4_reg_362 == 1'd1) & (icmp_ln1302_reg_342 == 1'd0));
end

assign cmp223_fu_185_p2 = (($signed(zext_ln1302_fu_181_p1) < $signed(sub222_cast17_cast_fu_157_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1302_fu_169_p2 = ((ap_sig_allocacmp_x_1 == trunc_ln) ? 1'b1 : 1'b0);

assign or_ln1323_1_fu_197_p2 = (cmp226_1 | cmp223_fu_185_p2);

assign or_ln1323_2_fu_203_p2 = (cmp226_2 | cmp223_fu_185_p2);

assign or_ln1323_3_fu_209_p2 = (cmp226_3 | cmp223_fu_185_p2);

assign or_ln1323_4_fu_215_p2 = (cmp226_4 | cmp223_fu_185_p2);

assign or_ln1323_5_fu_221_p2 = (icmp_ln1292 | cmp223_fu_185_p2);

assign or_ln1323_fu_191_p2 = (cmp226 | cmp223_fu_185_p2);

assign p_0_fu_327_p3 = {{20'd524800}, {tmp_s_reg_390}};

assign p_1_fu_295_p3 = {{20'd524800}, {tmp_6_reg_370}};

assign p_2_fu_303_p3 = {{20'd524800}, {tmp_3_reg_375}};

assign p_3_fu_311_p3 = {{20'd524800}, {tmp_5_reg_380}};

assign p_4_fu_319_p3 = {{20'd524800}, {tmp_8_reg_385}};

assign p_s_fu_236_p3 = {{20'd524800}, {trunc_ln674_fu_232_p1}};

assign sub222_cast17_cast_fu_157_p1 = $signed(sub222_cast17);

assign trunc_ln674_fu_232_p1 = bytePlanes1_dout[9:0];

assign x_2_fu_175_p2 = (ap_sig_allocacmp_x_1 + 13'd1);

assign zext_ln1302_fu_181_p1 = ap_sig_allocacmp_x_1;

endmodule //design_1_v_frmbuf_rd_0_0_Bytes2MultiPixStream_Pipeline_VITIS_LOOP_1302_4
