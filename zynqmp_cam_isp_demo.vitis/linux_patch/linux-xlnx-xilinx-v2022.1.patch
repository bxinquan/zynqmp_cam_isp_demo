diff --git a/Makefile b/Makefile
index ed6e7ec60..9f9122e29 100644
--- a/Makefile
+++ b/Makefile
@@ -381,7 +381,9 @@ include $(srctree)/scripts/subarch.include
 # Alternatively CROSS_COMPILE can be set in the environment.
 # Default value for CROSS_COMPILE is not to prefix executables
 # Note: Some architectures assign CROSS_COMPILE in their arch/*/Makefile
-ARCH		?= $(SUBARCH)
+# ARCH		?= $(SUBARCH)
+ARCH		?= arm64
+CROSS_COMPILE	?= aarch64-linux-gnu-
 
 # Architecture as present in compile.h
 UTS_MACHINE 	:= $(ARCH)
diff --git a/arch/arm64/configs/xilinx_zynqmp_defconfig b/arch/arm64/configs/xilinx_zynqmp_defconfig
index 30fcc83df..6974868ad 100644
--- a/arch/arm64/configs/xilinx_zynqmp_defconfig
+++ b/arch/arm64/configs/xilinx_zynqmp_defconfig
@@ -1,101 +1,1309 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# Linux/arm64 5.15.0 Kernel Configuration
+#
+CONFIG_CC_VERSION_TEXT="aarch64-linux-gnu-gcc (GCC) 11.3.1 20220604 [releases/gcc-11 revision 591c0f4b92548e3ae2e8173f4f93984b1c7f62bb]"
+CONFIG_CC_IS_GCC=y
+CONFIG_GCC_VERSION=110301
+CONFIG_CLANG_VERSION=0
+CONFIG_AS_IS_GNU=y
+CONFIG_AS_VERSION=20243822
+CONFIG_LD_IS_BFD=y
+CONFIG_LD_VERSION=20243822
+CONFIG_LLD_VERSION=0
+CONFIG_CC_CAN_LINK=y
+CONFIG_CC_CAN_LINK_STATIC=y
+CONFIG_CC_HAS_ASM_GOTO=y
+CONFIG_CC_HAS_ASM_GOTO_OUTPUT=y
+CONFIG_CC_HAS_ASM_INLINE=y
+CONFIG_CC_HAS_NO_PROFILE_FN_ATTR=y
+CONFIG_IRQ_WORK=y
+CONFIG_BUILDTIME_TABLE_SORT=y
+CONFIG_THREAD_INFO_IN_TASK=y
+
+#
+# General setup
+#
+CONFIG_INIT_ENV_ARG_LIMIT=32
+# CONFIG_COMPILE_TEST is not set
+# CONFIG_WERROR is not set
+CONFIG_LOCALVERSION=""
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_BUILD_SALT=""
+CONFIG_DEFAULT_INIT=""
+CONFIG_DEFAULT_HOSTNAME="(none)"
+CONFIG_SWAP=y
 CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
 CONFIG_POSIX_MQUEUE=y
+CONFIG_POSIX_MQUEUE_SYSCTL=y
+# CONFIG_WATCH_QUEUE is not set
+CONFIG_CROSS_MEMORY_ATTACH=y
+# CONFIG_USELIB is not set
 CONFIG_AUDIT=y
+CONFIG_HAVE_ARCH_AUDITSYSCALL=y
+CONFIG_AUDITSYSCALL=y
+
+#
+# IRQ subsystem
+#
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_GENERIC_IRQ_SHOW=y
+CONFIG_GENERIC_IRQ_SHOW_LEVEL=y
+CONFIG_GENERIC_IRQ_EFFECTIVE_AFF_MASK=y
+CONFIG_GENERIC_IRQ_MIGRATION=y
+CONFIG_HARDIRQS_SW_RESEND=y
+CONFIG_IRQ_DOMAIN=y
+CONFIG_IRQ_DOMAIN_HIERARCHY=y
+CONFIG_GENERIC_IRQ_IPI=y
+CONFIG_GENERIC_MSI_IRQ=y
+CONFIG_GENERIC_MSI_IRQ_DOMAIN=y
+CONFIG_IRQ_MSI_IOMMU=y
+CONFIG_HANDLE_DOMAIN_IRQ=y
+CONFIG_IRQ_FORCED_THREADING=y
+CONFIG_SPARSE_IRQ=y
+# CONFIG_GENERIC_IRQ_DEBUGFS is not set
+# end of IRQ subsystem
+
+CONFIG_GENERIC_TIME_VSYSCALL=y
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_ARCH_HAS_TICK_BROADCAST=y
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+
+#
+# Timers subsystem
+#
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ_COMMON=y
+# CONFIG_HZ_PERIODIC is not set
+CONFIG_NO_HZ_IDLE=y
+# CONFIG_NO_HZ_FULL is not set
 CONFIG_NO_HZ=y
 CONFIG_HIGH_RES_TIMERS=y
+# end of Timers subsystem
+
+CONFIG_BPF=y
+CONFIG_HAVE_EBPF_JIT=y
+CONFIG_ARCH_WANT_DEFAULT_BPF_JIT=y
+
+#
+# BPF subsystem
+#
+# CONFIG_BPF_SYSCALL is not set
+# CONFIG_BPF_JIT is not set
+# end of BPF subsystem
+
+CONFIG_PREEMPT_NONE=y
+# CONFIG_PREEMPT_VOLUNTARY is not set
+# CONFIG_PREEMPT is not set
+
+#
+# CPU/Task time and stats accounting
+#
+CONFIG_TICK_CPU_ACCOUNTING=y
+# CONFIG_VIRT_CPU_ACCOUNTING_GEN is not set
+# CONFIG_IRQ_TIME_ACCOUNTING is not set
 CONFIG_BSD_PROCESS_ACCT=y
+# CONFIG_BSD_PROCESS_ACCT_V3 is not set
 CONFIG_TASKSTATS=y
 CONFIG_TASK_DELAY_ACCT=y
 CONFIG_TASK_XACCT=y
 CONFIG_TASK_IO_ACCOUNTING=y
+# CONFIG_PSI is not set
+# end of CPU/Task time and stats accounting
+
+CONFIG_CPU_ISOLATION=y
+
+#
+# RCU Subsystem
+#
+CONFIG_TREE_RCU=y
+# CONFIG_RCU_EXPERT is not set
+CONFIG_SRCU=y
+CONFIG_TREE_SRCU=y
+CONFIG_RCU_STALL_COMMON=y
+CONFIG_RCU_NEED_SEGCBLIST=y
+# end of RCU Subsystem
+
 CONFIG_IKCONFIG=y
 CONFIG_IKCONFIG_PROC=y
+# CONFIG_IKHEADERS is not set
 CONFIG_LOG_BUF_SHIFT=16
+CONFIG_LOG_CPU_MAX_BUF_SHIFT=12
+CONFIG_PRINTK_SAFE_LOG_BUF_SHIFT=13
+# CONFIG_PRINTK_INDEX is not set
+CONFIG_GENERIC_SCHED_CLOCK=y
+
+#
+# Scheduler features
+#
+# end of Scheduler features
+
+CONFIG_ARCH_SUPPORTS_NUMA_BALANCING=y
+CONFIG_CC_HAS_INT128=y
+CONFIG_ARCH_SUPPORTS_INT128=y
 CONFIG_CGROUPS=y
+# CONFIG_MEMCG is not set
+# CONFIG_BLK_CGROUP is not set
+# CONFIG_CGROUP_SCHED is not set
+# CONFIG_CGROUP_PIDS is not set
+# CONFIG_CGROUP_RDMA is not set
+# CONFIG_CGROUP_FREEZER is not set
+# CONFIG_CGROUP_HUGETLB is not set
+# CONFIG_CPUSETS is not set
+# CONFIG_CGROUP_DEVICE is not set
+# CONFIG_CGROUP_CPUACCT is not set
+# CONFIG_CGROUP_PERF is not set
+# CONFIG_CGROUP_MISC is not set
+# CONFIG_CGROUP_DEBUG is not set
+CONFIG_NAMESPACES=y
+# CONFIG_UTS_NS is not set
+# CONFIG_TIME_NS is not set
+# CONFIG_IPC_NS is not set
+CONFIG_USER_NS=y
+# CONFIG_PID_NS is not set
+CONFIG_NET_NS=y
+# CONFIG_CHECKPOINT_RESTORE is not set
+# CONFIG_SCHED_AUTOGROUP is not set
+# CONFIG_SYSFS_DEPRECATED is not set
+# CONFIG_RELAY is not set
 CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE=""
+CONFIG_RD_GZIP=y
+CONFIG_RD_BZIP2=y
+CONFIG_RD_LZMA=y
+CONFIG_RD_XZ=y
+CONFIG_RD_LZO=y
+CONFIG_RD_LZ4=y
+CONFIG_RD_ZSTD=y
+# CONFIG_BOOT_CONFIG is not set
+CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE=y
+# CONFIG_CC_OPTIMIZE_FOR_SIZE is not set
+CONFIG_LD_ORPHAN_WARN=y
+CONFIG_SYSCTL=y
+CONFIG_HAVE_UID16=y
+CONFIG_SYSCTL_EXCEPTION_TRACE=y
+CONFIG_EXPERT=y
+CONFIG_UID16=y
+CONFIG_MULTIUSER=y
+# CONFIG_SGETMASK_SYSCALL is not set
+CONFIG_SYSFS_SYSCALL=y
+CONFIG_FHANDLE=y
+CONFIG_POSIX_TIMERS=y
+CONFIG_PRINTK=y
+CONFIG_BUG=y
+CONFIG_ELF_CORE=y
+CONFIG_BASE_FULL=y
+CONFIG_FUTEX=y
+CONFIG_FUTEX_PI=y
+CONFIG_HAVE_FUTEX_CMPXCHG=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_TIMERFD=y
+CONFIG_EVENTFD=y
+CONFIG_SHMEM=y
+CONFIG_AIO=y
+CONFIG_IO_URING=y
+CONFIG_ADVISE_SYSCALLS=y
+CONFIG_MEMBARRIER=y
+CONFIG_KALLSYMS=y
+# CONFIG_KALLSYMS_ALL is not set
+CONFIG_KALLSYMS_BASE_RELATIVE=y
+# CONFIG_USERFAULTFD is not set
+CONFIG_ARCH_HAS_MEMBARRIER_SYNC_CORE=y
+CONFIG_KCMP=y
+CONFIG_RSEQ=y
+# CONFIG_DEBUG_RSEQ is not set
 CONFIG_EMBEDDED=y
+CONFIG_HAVE_PERF_EVENTS=y
+# CONFIG_PC104 is not set
+
+#
+# Kernel Performance Events And Counters
+#
+CONFIG_PERF_EVENTS=y
+# CONFIG_DEBUG_PERF_USE_VMALLOC is not set
+# end of Kernel Performance Events And Counters
+
+CONFIG_VM_EVENT_COUNTERS=y
 # CONFIG_COMPAT_BRK is not set
 CONFIG_SLAB=y
+# CONFIG_SLUB is not set
+# CONFIG_SLOB is not set
+CONFIG_SLAB_MERGE_DEFAULT=y
+# CONFIG_SLAB_FREELIST_RANDOM is not set
+# CONFIG_SLAB_FREELIST_HARDENED is not set
+# CONFIG_SHUFFLE_PAGE_ALLOCATOR is not set
+CONFIG_SYSTEM_DATA_VERIFICATION=y
 CONFIG_PROFILING=y
+# end of General setup
+
+CONFIG_ARM64=y
+CONFIG_64BIT=y
+CONFIG_MMU=y
+CONFIG_ARM64_PAGE_SHIFT=12
+CONFIG_ARM64_CONT_PTE_SHIFT=4
+CONFIG_ARM64_CONT_PMD_SHIFT=4
+CONFIG_ARCH_MMAP_RND_BITS_MIN=18
+CONFIG_ARCH_MMAP_RND_BITS_MAX=24
+CONFIG_ARCH_MMAP_RND_COMPAT_BITS_MIN=11
+CONFIG_ARCH_MMAP_RND_COMPAT_BITS_MAX=16
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_ILLEGAL_POINTER_VALUE=0xdead000000000000
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_GENERIC_BUG=y
+CONFIG_GENERIC_BUG_RELATIVE_POINTERS=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_GENERIC_CSUM=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_ARCH_MHP_MEMMAP_ON_MEMORY_ENABLE=y
+CONFIG_SMP=y
+CONFIG_KERNEL_MODE_NEON=y
+CONFIG_FIX_EARLYCON_MEM=y
+CONFIG_PGTABLE_LEVELS=3
+CONFIG_ARCH_SUPPORTS_UPROBES=y
+CONFIG_ARCH_PROC_KCORE_TEXT=y
+
+#
+# Platform selection
+#
+# CONFIG_ARCH_ACTIONS is not set
+# CONFIG_ARCH_SUNXI is not set
+# CONFIG_ARCH_ALPINE is not set
+# CONFIG_ARCH_APPLE is not set
+# CONFIG_ARCH_BCM2835 is not set
+# CONFIG_ARCH_BCM4908 is not set
+# CONFIG_ARCH_BCM_IPROC is not set
+# CONFIG_ARCH_BERLIN is not set
+# CONFIG_ARCH_BITMAIN is not set
+# CONFIG_ARCH_BRCMSTB is not set
+# CONFIG_ARCH_EXYNOS is not set
+# CONFIG_ARCH_SPARX5 is not set
+# CONFIG_ARCH_K3 is not set
+# CONFIG_ARCH_LAYERSCAPE is not set
+# CONFIG_ARCH_LG1K is not set
+# CONFIG_ARCH_HISI is not set
+# CONFIG_ARCH_KEEMBAY is not set
+# CONFIG_ARCH_MEDIATEK is not set
+# CONFIG_ARCH_MESON is not set
+# CONFIG_ARCH_MVEBU is not set
+# CONFIG_ARCH_MXC is not set
+# CONFIG_ARCH_QCOM is not set
+# CONFIG_ARCH_REALTEK is not set
+# CONFIG_ARCH_RENESAS is not set
+# CONFIG_ARCH_ROCKCHIP is not set
+# CONFIG_ARCH_S32 is not set
+# CONFIG_ARCH_SEATTLE is not set
+# CONFIG_ARCH_INTEL_SOCFPGA is not set
+# CONFIG_ARCH_SYNQUACER is not set
+# CONFIG_ARCH_TEGRA is not set
+# CONFIG_ARCH_SPRD is not set
+# CONFIG_ARCH_THUNDER is not set
+# CONFIG_ARCH_THUNDER2 is not set
+# CONFIG_ARCH_UNIPHIER is not set
+# CONFIG_ARCH_VEXPRESS is not set
+# CONFIG_ARCH_VISCONTI is not set
+# CONFIG_ARCH_XGENE is not set
 CONFIG_ARCH_ZYNQMP=y
+# end of Platform selection
+
+#
+# Kernel Features
+#
+
+#
+# ARM errata workarounds via the alternatives framework
+#
+CONFIG_ARM64_WORKAROUND_CLEAN_CACHE=y
+CONFIG_ARM64_ERRATUM_826319=y
+CONFIG_ARM64_ERRATUM_827319=y
+CONFIG_ARM64_ERRATUM_824069=y
+CONFIG_ARM64_ERRATUM_819472=y
+CONFIG_ARM64_ERRATUM_832075=y
+CONFIG_ARM64_ERRATUM_845719=y
+CONFIG_ARM64_ERRATUM_843419=y
+CONFIG_ARM64_LD_HAS_FIX_ERRATUM_843419=y
+CONFIG_ARM64_ERRATUM_1024718=y
+CONFIG_ARM64_ERRATUM_1418040=y
+CONFIG_ARM64_WORKAROUND_SPECULATIVE_AT=y
+CONFIG_ARM64_ERRATUM_1165522=y
+CONFIG_ARM64_ERRATUM_1319367=y
+CONFIG_ARM64_ERRATUM_1530923=y
+CONFIG_ARM64_WORKAROUND_REPEAT_TLBI=y
+CONFIG_ARM64_ERRATUM_1286807=y
+CONFIG_ARM64_ERRATUM_1463225=y
+CONFIG_ARM64_ERRATUM_1542419=y
+CONFIG_ARM64_ERRATUM_1508412=y
+CONFIG_CAVIUM_ERRATUM_22375=y
+CONFIG_CAVIUM_ERRATUM_23154=y
+CONFIG_CAVIUM_ERRATUM_27456=y
+CONFIG_CAVIUM_ERRATUM_30115=y
+CONFIG_CAVIUM_TX2_ERRATUM_219=y
+CONFIG_FUJITSU_ERRATUM_010001=y
+CONFIG_HISILICON_ERRATUM_161600802=y
+CONFIG_QCOM_FALKOR_ERRATUM_1003=y
+CONFIG_QCOM_FALKOR_ERRATUM_1009=y
+CONFIG_QCOM_QDF2400_ERRATUM_0065=y
+CONFIG_QCOM_FALKOR_ERRATUM_E1041=y
+CONFIG_NVIDIA_CARMEL_CNP_ERRATUM=y
+CONFIG_SOCIONEXT_SYNQUACER_PREITS=y
+# end of ARM errata workarounds via the alternatives framework
+
+CONFIG_ARM64_4K_PAGES=y
+# CONFIG_ARM64_16K_PAGES is not set
+# CONFIG_ARM64_64K_PAGES is not set
+CONFIG_ARM64_VA_BITS_39=y
+# CONFIG_ARM64_VA_BITS_48 is not set
+CONFIG_ARM64_VA_BITS=39
+CONFIG_ARM64_PA_BITS_48=y
+CONFIG_ARM64_PA_BITS=48
+# CONFIG_CPU_BIG_ENDIAN is not set
+CONFIG_CPU_LITTLE_ENDIAN=y
+# CONFIG_SCHED_MC is not set
+# CONFIG_SCHED_SMT is not set
 CONFIG_NR_CPUS=4
+CONFIG_HOTPLUG_CPU=y
+# CONFIG_NUMA is not set
+# CONFIG_HZ_100 is not set
+CONFIG_HZ_250=y
+# CONFIG_HZ_300 is not set
+# CONFIG_HZ_1000 is not set
+CONFIG_HZ=250
+CONFIG_SCHED_HRTICK=y
+CONFIG_ARCH_SPARSEMEM_ENABLE=y
+CONFIG_HW_PERF_EVENTS=y
+CONFIG_ARCH_HAS_FILTER_PGPROT=y
+# CONFIG_PARAVIRT is not set
+# CONFIG_PARAVIRT_TIME_ACCOUNTING is not set
+# CONFIG_KEXEC is not set
+# CONFIG_KEXEC_FILE is not set
+# CONFIG_CRASH_DUMP is not set
+# CONFIG_XEN is not set
+CONFIG_FORCE_MAX_ZONEORDER=11
+CONFIG_UNMAP_KERNEL_AT_EL0=y
+CONFIG_RODATA_FULL_DEFAULT_ENABLED=y
+# CONFIG_ARM64_SW_TTBR0_PAN is not set
+CONFIG_ARM64_TAGGED_ADDR_ABI=y
 CONFIG_COMPAT=y
+CONFIG_KUSER_HELPERS=y
+# CONFIG_ARMV8_DEPRECATED is not set
+
+#
+# ARMv8.1 architectural features
+#
+CONFIG_ARM64_HW_AFDBM=y
+CONFIG_ARM64_PAN=y
+CONFIG_AS_HAS_LDAPR=y
+CONFIG_AS_HAS_LSE_ATOMICS=y
+# end of ARMv8.1 architectural features
+
+#
+# ARMv8.2 architectural features
+#
+# CONFIG_ARM64_PMEM is not set
+CONFIG_ARM64_RAS_EXTN=y
+CONFIG_ARM64_CNP=y
+# end of ARMv8.2 architectural features
+
+#
+# ARMv8.3 architectural features
+#
+CONFIG_ARM64_PTR_AUTH=y
+CONFIG_ARM64_PTR_AUTH_KERNEL=y
+CONFIG_CC_HAS_BRANCH_PROT_PAC_RET=y
+CONFIG_CC_HAS_SIGN_RETURN_ADDRESS=y
+CONFIG_AS_HAS_PAC=y
+CONFIG_AS_HAS_CFI_NEGATE_RA_STATE=y
+# end of ARMv8.3 architectural features
+
+#
+# ARMv8.4 architectural features
+#
+CONFIG_ARM64_AMU_EXTN=y
+CONFIG_AS_HAS_ARMV8_4=y
+CONFIG_ARM64_TLB_RANGE=y
+# end of ARMv8.4 architectural features
+
+#
+# ARMv8.5 architectural features
+#
+CONFIG_AS_HAS_ARMV8_5=y
+CONFIG_ARM64_BTI=y
+CONFIG_ARM64_BTI_KERNEL=y
+CONFIG_CC_HAS_BRANCH_PROT_PAC_RET_BTI=y
+CONFIG_ARM64_E0PD=y
+CONFIG_ARCH_RANDOM=y
+CONFIG_ARM64_AS_HAS_MTE=y
+CONFIG_ARM64_MTE=y
+# end of ARMv8.5 architectural features
+
+#
+# ARMv8.7 architectural features
+#
+CONFIG_ARM64_EPAN=y
+# end of ARMv8.7 architectural features
+
+CONFIG_ARM64_SVE=y
+CONFIG_ARM64_MODULE_PLTS=y
+# CONFIG_ARM64_PSEUDO_NMI is not set
+CONFIG_RELOCATABLE=y
+# CONFIG_RANDOMIZE_BASE is not set
+CONFIG_CC_HAVE_STACKPROTECTOR_SYSREG=y
+CONFIG_STACKPROTECTOR_PER_TASK=y
+# end of Kernel Features
+
+#
+# Boot options
+#
+CONFIG_CMDLINE=""
+CONFIG_EFI_STUB=y
+CONFIG_EFI=y
 # CONFIG_DMI is not set
+# end of Boot options
+
+CONFIG_SYSVIPC_COMPAT=y
+
+#
+# Power management options
+#
+CONFIG_SUSPEND=y
+CONFIG_SUSPEND_FREEZER=y
+# CONFIG_SUSPEND_SKIP_SYNC is not set
+# CONFIG_HIBERNATION is not set
+CONFIG_PM_SLEEP=y
+CONFIG_PM_SLEEP_SMP=y
+# CONFIG_PM_AUTOSLEEP is not set
+# CONFIG_PM_WAKELOCKS is not set
+CONFIG_PM=y
+# CONFIG_PM_DEBUG is not set
+CONFIG_PM_CLK=y
+CONFIG_PM_GENERIC_DOMAINS=y
+# CONFIG_WQ_POWER_EFFICIENT_DEFAULT is not set
+CONFIG_PM_GENERIC_DOMAINS_SLEEP=y
+CONFIG_PM_GENERIC_DOMAINS_OF=y
+CONFIG_CPU_PM=y
+# CONFIG_ENERGY_MODEL is not set
+CONFIG_ARCH_HIBERNATION_POSSIBLE=y
+CONFIG_ARCH_SUSPEND_POSSIBLE=y
+# end of Power management options
+
+#
+# CPU Power Management
+#
+
+#
+# CPU Idle
+#
+# CONFIG_CPU_IDLE is not set
+# end of CPU Idle
+
+#
+# CPU Frequency scaling
+#
 CONFIG_CPU_FREQ=y
+# CONFIG_CPU_FREQ_STAT is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE is not set
 CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE=y
+# CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL is not set
+# CONFIG_CPU_FREQ_GOV_PERFORMANCE is not set
+# CONFIG_CPU_FREQ_GOV_POWERSAVE is not set
+CONFIG_CPU_FREQ_GOV_USERSPACE=y
+# CONFIG_CPU_FREQ_GOV_ONDEMAND is not set
+# CONFIG_CPU_FREQ_GOV_CONSERVATIVE is not set
+# CONFIG_CPU_FREQ_GOV_SCHEDUTIL is not set
+
+#
+# CPU frequency scaling drivers
+#
 CONFIG_CPUFREQ_DT=y
+CONFIG_CPUFREQ_DT_PLATDEV=y
+# end of CPU Frequency scaling
+# end of CPU Power Management
+
+CONFIG_ARCH_SUPPORTS_ACPI=y
+# CONFIG_ACPI is not set
+# CONFIG_VIRTUALIZATION is not set
+# CONFIG_ARM64_CRYPTO is not set
+
+#
+# General architecture-dependent options
+#
+# CONFIG_KPROBES is not set
+# CONFIG_JUMP_LABEL is not set
+CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS=y
+CONFIG_HAVE_KPROBES=y
+CONFIG_HAVE_KRETPROBES=y
+CONFIG_HAVE_FUNCTION_ERROR_INJECTION=y
+CONFIG_HAVE_NMI=y
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_HAVE_ARCH_TRACEHOOK=y
+CONFIG_HAVE_DMA_CONTIGUOUS=y
+CONFIG_GENERIC_SMP_IDLE_THREAD=y
+CONFIG_GENERIC_IDLE_POLL_SETUP=y
+CONFIG_ARCH_HAS_FORTIFY_SOURCE=y
+CONFIG_ARCH_HAS_KEEPINITRD=y
+CONFIG_ARCH_HAS_SET_MEMORY=y
+CONFIG_ARCH_HAS_SET_DIRECT_MAP=y
+CONFIG_HAVE_ARCH_THREAD_STRUCT_WHITELIST=y
+CONFIG_ARCH_WANTS_NO_INSTR=y
+CONFIG_HAVE_ASM_MODVERSIONS=y
+CONFIG_HAVE_REGS_AND_STACK_ACCESS_API=y
+CONFIG_HAVE_RSEQ=y
+CONFIG_HAVE_FUNCTION_ARG_ACCESS_API=y
+CONFIG_HAVE_HW_BREAKPOINT=y
+CONFIG_HAVE_PERF_REGS=y
+CONFIG_HAVE_PERF_USER_STACK_DUMP=y
+CONFIG_HAVE_ARCH_JUMP_LABEL=y
+CONFIG_HAVE_ARCH_JUMP_LABEL_RELATIVE=y
+CONFIG_MMU_GATHER_TABLE_FREE=y
+CONFIG_MMU_GATHER_RCU_TABLE_FREE=y
+CONFIG_ARCH_HAVE_NMI_SAFE_CMPXCHG=y
+CONFIG_HAVE_CMPXCHG_LOCAL=y
+CONFIG_HAVE_CMPXCHG_DOUBLE=y
+CONFIG_ARCH_WANT_COMPAT_IPC_PARSE_VERSION=y
+CONFIG_HAVE_ARCH_SECCOMP=y
+CONFIG_HAVE_ARCH_SECCOMP_FILTER=y
+CONFIG_SECCOMP=y
+CONFIG_SECCOMP_FILTER=y
+# CONFIG_SECCOMP_CACHE_DEBUG is not set
+CONFIG_HAVE_ARCH_STACKLEAK=y
+CONFIG_HAVE_STACKPROTECTOR=y
+CONFIG_STACKPROTECTOR=y
+CONFIG_STACKPROTECTOR_STRONG=y
+CONFIG_ARCH_SUPPORTS_LTO_CLANG=y
+CONFIG_ARCH_SUPPORTS_LTO_CLANG_THIN=y
+CONFIG_LTO_NONE=y
+CONFIG_ARCH_SUPPORTS_CFI_CLANG=y
+CONFIG_HAVE_CONTEXT_TRACKING=y
+CONFIG_HAVE_VIRT_CPU_ACCOUNTING_GEN=y
+CONFIG_HAVE_IRQ_TIME_ACCOUNTING=y
+CONFIG_HAVE_MOVE_PUD=y
+CONFIG_HAVE_MOVE_PMD=y
+CONFIG_HAVE_ARCH_TRANSPARENT_HUGEPAGE=y
+CONFIG_HAVE_ARCH_HUGE_VMAP=y
+CONFIG_ARCH_WANT_HUGE_PMD_SHARE=y
+CONFIG_HAVE_MOD_ARCH_SPECIFIC=y
+CONFIG_MODULES_USE_ELF_RELA=y
+CONFIG_ARCH_HAS_ELF_RANDOMIZE=y
+CONFIG_HAVE_ARCH_MMAP_RND_BITS=y
+CONFIG_ARCH_MMAP_RND_BITS=18
+CONFIG_HAVE_ARCH_MMAP_RND_COMPAT_BITS=y
+CONFIG_ARCH_MMAP_RND_COMPAT_BITS=11
+CONFIG_ARCH_WANT_DEFAULT_TOPDOWN_MMAP_LAYOUT=y
+CONFIG_CLONE_BACKWARDS=y
+CONFIG_OLD_SIGSUSPEND3=y
+CONFIG_COMPAT_OLD_SIGACTION=y
+CONFIG_COMPAT_32BIT_TIME=y
+CONFIG_HAVE_ARCH_VMAP_STACK=y
+CONFIG_VMAP_STACK=y
+CONFIG_HAVE_ARCH_RANDOMIZE_KSTACK_OFFSET=y
+# CONFIG_RANDOMIZE_KSTACK_OFFSET_DEFAULT is not set
+CONFIG_ARCH_HAS_STRICT_KERNEL_RWX=y
+CONFIG_STRICT_KERNEL_RWX=y
+CONFIG_ARCH_HAS_STRICT_MODULE_RWX=y
+CONFIG_STRICT_MODULE_RWX=y
+CONFIG_HAVE_ARCH_COMPILER_H=y
+CONFIG_HAVE_ARCH_PREL32_RELOCATIONS=y
+CONFIG_ARCH_USE_MEMREMAP_PROT=y
+# CONFIG_LOCK_EVENT_COUNTS is not set
+CONFIG_ARCH_HAS_RELR=y
+CONFIG_ARCH_WANT_LD_ORPHAN_WARN=y
+CONFIG_HAVE_ARCH_PFN_VALID=y
+CONFIG_ARCH_SUPPORTS_DEBUG_PAGEALLOC=y
+
+#
+# GCOV-based kernel profiling
+#
+# CONFIG_GCOV_KERNEL is not set
+CONFIG_ARCH_HAS_GCOV_PROFILE_ALL=y
+# end of GCOV-based kernel profiling
+
+CONFIG_HAVE_GCC_PLUGINS=y
+CONFIG_GCC_PLUGINS=y
+# CONFIG_GCC_PLUGIN_CYC_COMPLEXITY is not set
+# CONFIG_GCC_PLUGIN_LATENT_ENTROPY is not set
+# CONFIG_GCC_PLUGIN_RANDSTRUCT is not set
+# end of General architecture-dependent options
+
+CONFIG_RT_MUTEXES=y
+CONFIG_BASE_SMALL=0
 CONFIG_MODULES=y
+# CONFIG_MODULE_FORCE_LOAD is not set
 CONFIG_MODULE_UNLOAD=y
+# CONFIG_MODULE_FORCE_UNLOAD is not set
+# CONFIG_MODVERSIONS is not set
+# CONFIG_MODULE_SRCVERSION_ALL is not set
+# CONFIG_MODULE_SIG is not set
+CONFIG_MODULE_COMPRESS_NONE=y
+# CONFIG_MODULE_COMPRESS_GZIP is not set
+# CONFIG_MODULE_COMPRESS_XZ is not set
+# CONFIG_MODULE_COMPRESS_ZSTD is not set
+# CONFIG_MODULE_ALLOW_MISSING_NAMESPACE_IMPORTS is not set
+CONFIG_MODPROBE_PATH="/sbin/modprobe"
+# CONFIG_TRIM_UNUSED_KSYMS is not set
+CONFIG_MODULES_TREE_LOOKUP=y
+CONFIG_BLOCK=y
+CONFIG_BLK_DEV_BSG_COMMON=y
+# CONFIG_BLK_DEV_BSGLIB is not set
+# CONFIG_BLK_DEV_INTEGRITY is not set
+# CONFIG_BLK_DEV_ZONED is not set
+# CONFIG_BLK_WBT is not set
+CONFIG_BLK_DEBUG_FS=y
+# CONFIG_BLK_SED_OPAL is not set
+# CONFIG_BLK_INLINE_ENCRYPTION is not set
+
+#
+# Partition Types
+#
+# CONFIG_PARTITION_ADVANCED is not set
+CONFIG_MSDOS_PARTITION=y
+CONFIG_EFI_PARTITION=y
+# end of Partition Types
+
+CONFIG_BLOCK_COMPAT=y
+CONFIG_BLK_MQ_PCI=y
+CONFIG_BLK_MQ_VIRTIO=y
+CONFIG_BLK_PM=y
+
+#
+# IO Schedulers
+#
+CONFIG_MQ_IOSCHED_DEADLINE=y
+CONFIG_MQ_IOSCHED_KYBER=y
+# CONFIG_IOSCHED_BFQ is not set
+# end of IO Schedulers
+
+CONFIG_ASN1=y
+CONFIG_ARCH_INLINE_SPIN_TRYLOCK=y
+CONFIG_ARCH_INLINE_SPIN_TRYLOCK_BH=y
+CONFIG_ARCH_INLINE_SPIN_LOCK=y
+CONFIG_ARCH_INLINE_SPIN_LOCK_BH=y
+CONFIG_ARCH_INLINE_SPIN_LOCK_IRQ=y
+CONFIG_ARCH_INLINE_SPIN_LOCK_IRQSAVE=y
+CONFIG_ARCH_INLINE_SPIN_UNLOCK=y
+CONFIG_ARCH_INLINE_SPIN_UNLOCK_BH=y
+CONFIG_ARCH_INLINE_SPIN_UNLOCK_IRQ=y
+CONFIG_ARCH_INLINE_SPIN_UNLOCK_IRQRESTORE=y
+CONFIG_ARCH_INLINE_READ_LOCK=y
+CONFIG_ARCH_INLINE_READ_LOCK_BH=y
+CONFIG_ARCH_INLINE_READ_LOCK_IRQ=y
+CONFIG_ARCH_INLINE_READ_LOCK_IRQSAVE=y
+CONFIG_ARCH_INLINE_READ_UNLOCK=y
+CONFIG_ARCH_INLINE_READ_UNLOCK_BH=y
+CONFIG_ARCH_INLINE_READ_UNLOCK_IRQ=y
+CONFIG_ARCH_INLINE_READ_UNLOCK_IRQRESTORE=y
+CONFIG_ARCH_INLINE_WRITE_LOCK=y
+CONFIG_ARCH_INLINE_WRITE_LOCK_BH=y
+CONFIG_ARCH_INLINE_WRITE_LOCK_IRQ=y
+CONFIG_ARCH_INLINE_WRITE_LOCK_IRQSAVE=y
+CONFIG_ARCH_INLINE_WRITE_UNLOCK=y
+CONFIG_ARCH_INLINE_WRITE_UNLOCK_BH=y
+CONFIG_ARCH_INLINE_WRITE_UNLOCK_IRQ=y
+CONFIG_ARCH_INLINE_WRITE_UNLOCK_IRQRESTORE=y
+CONFIG_INLINE_SPIN_TRYLOCK=y
+CONFIG_INLINE_SPIN_TRYLOCK_BH=y
+CONFIG_INLINE_SPIN_LOCK=y
+CONFIG_INLINE_SPIN_LOCK_BH=y
+CONFIG_INLINE_SPIN_LOCK_IRQ=y
+CONFIG_INLINE_SPIN_LOCK_IRQSAVE=y
+CONFIG_INLINE_SPIN_UNLOCK_BH=y
+CONFIG_INLINE_SPIN_UNLOCK_IRQ=y
+CONFIG_INLINE_SPIN_UNLOCK_IRQRESTORE=y
+CONFIG_INLINE_READ_LOCK=y
+CONFIG_INLINE_READ_LOCK_BH=y
+CONFIG_INLINE_READ_LOCK_IRQ=y
+CONFIG_INLINE_READ_LOCK_IRQSAVE=y
+CONFIG_INLINE_READ_UNLOCK=y
+CONFIG_INLINE_READ_UNLOCK_BH=y
+CONFIG_INLINE_READ_UNLOCK_IRQ=y
+CONFIG_INLINE_READ_UNLOCK_IRQRESTORE=y
+CONFIG_INLINE_WRITE_LOCK=y
+CONFIG_INLINE_WRITE_LOCK_BH=y
+CONFIG_INLINE_WRITE_LOCK_IRQ=y
+CONFIG_INLINE_WRITE_LOCK_IRQSAVE=y
+CONFIG_INLINE_WRITE_UNLOCK=y
+CONFIG_INLINE_WRITE_UNLOCK_BH=y
+CONFIG_INLINE_WRITE_UNLOCK_IRQ=y
+CONFIG_INLINE_WRITE_UNLOCK_IRQRESTORE=y
+CONFIG_ARCH_SUPPORTS_ATOMIC_RMW=y
+CONFIG_MUTEX_SPIN_ON_OWNER=y
+CONFIG_RWSEM_SPIN_ON_OWNER=y
+CONFIG_LOCK_SPIN_ON_OWNER=y
+CONFIG_ARCH_USE_QUEUED_SPINLOCKS=y
+CONFIG_QUEUED_SPINLOCKS=y
+CONFIG_ARCH_USE_QUEUED_RWLOCKS=y
+CONFIG_QUEUED_RWLOCKS=y
+CONFIG_ARCH_HAS_NON_OVERLAPPING_ADDRESS_SPACE=y
+CONFIG_ARCH_HAS_SYSCALL_WRAPPER=y
+CONFIG_FREEZER=y
+
+#
+# Executable file formats
+#
+CONFIG_BINFMT_ELF=y
+CONFIG_COMPAT_BINFMT_ELF=y
+CONFIG_ARCH_BINFMT_ELF_STATE=y
+CONFIG_ARCH_HAVE_ELF_PROT=y
+CONFIG_ARCH_USE_GNU_PROPERTY=y
+CONFIG_ELFCORE=y
+CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS=y
+CONFIG_BINFMT_SCRIPT=y
+# CONFIG_BINFMT_MISC is not set
+CONFIG_COREDUMP=y
+# end of Executable file formats
+
+#
+# Memory Management options
+#
+CONFIG_SPARSEMEM=y
+CONFIG_SPARSEMEM_EXTREME=y
+CONFIG_SPARSEMEM_VMEMMAP_ENABLE=y
+CONFIG_SPARSEMEM_VMEMMAP=y
+CONFIG_HAVE_FAST_GUP=y
+CONFIG_ARCH_KEEP_MEMBLOCK=y
+CONFIG_MEMORY_ISOLATION=y
+CONFIG_ARCH_ENABLE_MEMORY_HOTPLUG=y
 CONFIG_MEMORY_HOTPLUG=y
+CONFIG_MEMORY_HOTPLUG_SPARSE=y
+# CONFIG_MEMORY_HOTPLUG_DEFAULT_ONLINE is not set
+CONFIG_ARCH_ENABLE_MEMORY_HOTREMOVE=y
+# CONFIG_MEMORY_HOTREMOVE is not set
+CONFIG_MHP_MEMMAP_ON_MEMORY=y
+CONFIG_SPLIT_PTLOCK_CPUS=4
+CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK=y
+CONFIG_COMPACTION=y
+# CONFIG_PAGE_REPORTING is not set
+CONFIG_MIGRATION=y
+CONFIG_ARCH_ENABLE_HUGEPAGE_MIGRATION=y
+CONFIG_ARCH_ENABLE_THP_MIGRATION=y
+CONFIG_CONTIG_ALLOC=y
+CONFIG_PHYS_ADDR_T_64BIT=y
+# CONFIG_KSM is not set
 CONFIG_DEFAULT_MMAP_MIN_ADDR=32768
+CONFIG_ARCH_SUPPORTS_MEMORY_FAILURE=y
+# CONFIG_MEMORY_FAILURE is not set
 CONFIG_TRANSPARENT_HUGEPAGE=y
+# CONFIG_TRANSPARENT_HUGEPAGE_ALWAYS is not set
 CONFIG_TRANSPARENT_HUGEPAGE_MADVISE=y
+# CONFIG_CLEANCACHE is not set
+# CONFIG_FRONTSWAP is not set
 CONFIG_CMA=y
+# CONFIG_CMA_DEBUG is not set
+# CONFIG_CMA_DEBUGFS is not set
+# CONFIG_CMA_SYSFS is not set
+CONFIG_CMA_AREAS=7
+# CONFIG_ZPOOL is not set
+# CONFIG_ZSMALLOC is not set
+CONFIG_GENERIC_EARLY_IOREMAP=y
+# CONFIG_DEFERRED_STRUCT_PAGE_INIT is not set
+# CONFIG_IDLE_PAGE_TRACKING is not set
+CONFIG_ARCH_HAS_CACHE_LINE_SIZE=y
+CONFIG_ARCH_HAS_PTE_DEVMAP=y
+CONFIG_ARCH_HAS_ZONE_DMA_SET=y
 # CONFIG_ZONE_DMA is not set
+CONFIG_ZONE_DMA32=y
+CONFIG_ARCH_USES_HIGH_VMA_FLAGS=y
+# CONFIG_PERCPU_STATS is not set
+# CONFIG_GUP_TEST is not set
+# CONFIG_READ_ONLY_THP_FOR_FS is not set
+CONFIG_ARCH_HAS_PTE_SPECIAL=y
+
+#
+# Data Access Monitoring
+#
+# CONFIG_DAMON is not set
+# end of Data Access Monitoring
+# end of Memory Management options
+
 CONFIG_NET=y
+CONFIG_COMPAT_NETLINK_MESSAGES=y
+CONFIG_NET_INGRESS=y
+CONFIG_SKB_EXTENSIONS=y
+
+#
+# Networking options
+#
 CONFIG_PACKET=y
+# CONFIG_PACKET_DIAG is not set
 CONFIG_UNIX=y
+CONFIG_UNIX_SCM=y
+CONFIG_AF_UNIX_OOB=y
+# CONFIG_UNIX_DIAG is not set
+# CONFIG_TLS is not set
+CONFIG_XFRM=y
+CONFIG_XFRM_ALGO=y
 CONFIG_XFRM_USER=y
+# CONFIG_XFRM_INTERFACE is not set
+# CONFIG_XFRM_SUB_POLICY is not set
+CONFIG_XFRM_MIGRATE=y
+# CONFIG_XFRM_STATISTICS is not set
 CONFIG_NET_KEY=y
 CONFIG_NET_KEY_MIGRATE=y
 CONFIG_INET=y
 CONFIG_IP_MULTICAST=y
+# CONFIG_IP_ADVANCED_ROUTER is not set
 CONFIG_IP_PNP=y
 CONFIG_IP_PNP_DHCP=y
 CONFIG_IP_PNP_BOOTP=y
 CONFIG_IP_PNP_RARP=y
+# CONFIG_NET_IPIP is not set
+# CONFIG_NET_IPGRE_DEMUX is not set
+CONFIG_NET_IP_TUNNEL=y
+# CONFIG_IP_MROUTE is not set
 CONFIG_SYN_COOKIES=y
+# CONFIG_NET_IPVTI is not set
+# CONFIG_NET_FOU is not set
+# CONFIG_NET_FOU_IP_TUNNELS is not set
+# CONFIG_INET_AH is not set
+# CONFIG_INET_ESP is not set
+# CONFIG_INET_IPCOMP is not set
+CONFIG_INET_TUNNEL=y
+CONFIG_INET_DIAG=y
+CONFIG_INET_TCP_DIAG=y
+# CONFIG_INET_UDP_DIAG is not set
+# CONFIG_INET_RAW_DIAG is not set
+# CONFIG_INET_DIAG_DESTROY is not set
+# CONFIG_TCP_CONG_ADVANCED is not set
+CONFIG_TCP_CONG_CUBIC=y
+CONFIG_DEFAULT_TCP_CONG="cubic"
+# CONFIG_TCP_MD5SIG is not set
+CONFIG_IPV6=y
+# CONFIG_IPV6_ROUTER_PREF is not set
+# CONFIG_IPV6_OPTIMISTIC_DAD is not set
+# CONFIG_INET6_AH is not set
+# CONFIG_INET6_ESP is not set
+# CONFIG_INET6_IPCOMP is not set
+# CONFIG_IPV6_MIP6 is not set
+# CONFIG_IPV6_ILA is not set
+# CONFIG_IPV6_VTI is not set
+CONFIG_IPV6_SIT=y
+# CONFIG_IPV6_SIT_6RD is not set
+CONFIG_IPV6_NDISC_NODETYPE=y
+# CONFIG_IPV6_TUNNEL is not set
+# CONFIG_IPV6_MULTIPLE_TABLES is not set
+# CONFIG_IPV6_MROUTE is not set
+# CONFIG_IPV6_SEG6_LWTUNNEL is not set
+# CONFIG_IPV6_SEG6_HMAC is not set
+# CONFIG_IPV6_RPL_LWTUNNEL is not set
+# CONFIG_IPV6_IOAM6_LWTUNNEL is not set
+# CONFIG_MPTCP is not set
 CONFIG_NETWORK_SECMARK=y
+CONFIG_NET_PTP_CLASSIFY=y
+# CONFIG_NETWORK_PHY_TIMESTAMPING is not set
 CONFIG_NETFILTER=y
+CONFIG_NETFILTER_ADVANCED=y
+# CONFIG_BRIDGE_NETFILTER is not set
+
+#
+# Core Netfilter Configuration
+#
+CONFIG_NETFILTER_INGRESS=y
+CONFIG_NETFILTER_NETLINK=y
+CONFIG_NETFILTER_FAMILY_BRIDGE=y
+# CONFIG_NETFILTER_NETLINK_ACCT is not set
+# CONFIG_NETFILTER_NETLINK_QUEUE is not set
 CONFIG_NETFILTER_NETLINK_LOG=y
+# CONFIG_NETFILTER_NETLINK_OSF is not set
 CONFIG_NF_CONNTRACK=m
+CONFIG_NF_LOG_SYSLOG=y
+CONFIG_NF_CONNTRACK_MARK=y
+# CONFIG_NF_CONNTRACK_SECMARK is not set
+# CONFIG_NF_CONNTRACK_ZONES is not set
+CONFIG_NF_CONNTRACK_PROCFS=y
+# CONFIG_NF_CONNTRACK_EVENTS is not set
+# CONFIG_NF_CONNTRACK_TIMEOUT is not set
+# CONFIG_NF_CONNTRACK_TIMESTAMP is not set
+# CONFIG_NF_CONNTRACK_LABELS is not set
+CONFIG_NF_CT_PROTO_DCCP=y
+CONFIG_NF_CT_PROTO_SCTP=y
+CONFIG_NF_CT_PROTO_UDPLITE=y
+# CONFIG_NF_CONNTRACK_AMANDA is not set
+# CONFIG_NF_CONNTRACK_FTP is not set
+# CONFIG_NF_CONNTRACK_H323 is not set
+# CONFIG_NF_CONNTRACK_IRC is not set
+# CONFIG_NF_CONNTRACK_NETBIOS_NS is not set
+# CONFIG_NF_CONNTRACK_SNMP is not set
+# CONFIG_NF_CONNTRACK_PPTP is not set
+# CONFIG_NF_CONNTRACK_SANE is not set
+# CONFIG_NF_CONNTRACK_SIP is not set
+# CONFIG_NF_CONNTRACK_TFTP is not set
 CONFIG_NF_CT_NETLINK=m
+# CONFIG_NETFILTER_NETLINK_GLUE_CT is not set
+# CONFIG_NF_NAT is not set
+# CONFIG_NF_TABLES is not set
+CONFIG_NETFILTER_XTABLES=y
+CONFIG_NETFILTER_XTABLES_COMPAT=y
+
+#
+# Xtables combined modules
+#
 CONFIG_NETFILTER_XT_MARK=y
+CONFIG_NETFILTER_XT_CONNMARK=m
+
+#
+# Xtables targets
+#
+# CONFIG_NETFILTER_XT_TARGET_AUDIT is not set
 CONFIG_NETFILTER_XT_TARGET_CHECKSUM=y
+# CONFIG_NETFILTER_XT_TARGET_CLASSIFY is not set
+# CONFIG_NETFILTER_XT_TARGET_CONNMARK is not set
+# CONFIG_NETFILTER_XT_TARGET_DSCP is not set
+# CONFIG_NETFILTER_XT_TARGET_HL is not set
+# CONFIG_NETFILTER_XT_TARGET_HMARK is not set
+# CONFIG_NETFILTER_XT_TARGET_IDLETIMER is not set
+# CONFIG_NETFILTER_XT_TARGET_LED is not set
 CONFIG_NETFILTER_XT_TARGET_LOG=y
+# CONFIG_NETFILTER_XT_TARGET_MARK is not set
+# CONFIG_NETFILTER_XT_TARGET_NFLOG is not set
+# CONFIG_NETFILTER_XT_TARGET_NFQUEUE is not set
+# CONFIG_NETFILTER_XT_TARGET_RATEEST is not set
+# CONFIG_NETFILTER_XT_TARGET_TEE is not set
+# CONFIG_NETFILTER_XT_TARGET_TPROXY is not set
+# CONFIG_NETFILTER_XT_TARGET_SECMARK is not set
+# CONFIG_NETFILTER_XT_TARGET_TCPMSS is not set
+# CONFIG_NETFILTER_XT_TARGET_TCPOPTSTRIP is not set
+
+#
+# Xtables matches
+#
+# CONFIG_NETFILTER_XT_MATCH_ADDRTYPE is not set
+# CONFIG_NETFILTER_XT_MATCH_BPF is not set
+# CONFIG_NETFILTER_XT_MATCH_CGROUP is not set
+# CONFIG_NETFILTER_XT_MATCH_CLUSTER is not set
+# CONFIG_NETFILTER_XT_MATCH_COMMENT is not set
+# CONFIG_NETFILTER_XT_MATCH_CONNBYTES is not set
+# CONFIG_NETFILTER_XT_MATCH_CONNLABEL is not set
+# CONFIG_NETFILTER_XT_MATCH_CONNLIMIT is not set
 CONFIG_NETFILTER_XT_MATCH_CONNMARK=m
 CONFIG_NETFILTER_XT_MATCH_CONNTRACK=m
+# CONFIG_NETFILTER_XT_MATCH_CPU is not set
+# CONFIG_NETFILTER_XT_MATCH_DCCP is not set
+# CONFIG_NETFILTER_XT_MATCH_DEVGROUP is not set
+# CONFIG_NETFILTER_XT_MATCH_DSCP is not set
+# CONFIG_NETFILTER_XT_MATCH_ECN is not set
+# CONFIG_NETFILTER_XT_MATCH_ESP is not set
+# CONFIG_NETFILTER_XT_MATCH_HASHLIMIT is not set
+# CONFIG_NETFILTER_XT_MATCH_HELPER is not set
+# CONFIG_NETFILTER_XT_MATCH_HL is not set
+# CONFIG_NETFILTER_XT_MATCH_IPCOMP is not set
+# CONFIG_NETFILTER_XT_MATCH_IPRANGE is not set
+# CONFIG_NETFILTER_XT_MATCH_L2TP is not set
+# CONFIG_NETFILTER_XT_MATCH_LENGTH is not set
 CONFIG_NETFILTER_XT_MATCH_LIMIT=y
 CONFIG_NETFILTER_XT_MATCH_MAC=y
+# CONFIG_NETFILTER_XT_MATCH_MARK is not set
 CONFIG_NETFILTER_XT_MATCH_MULTIPORT=y
+# CONFIG_NETFILTER_XT_MATCH_NFACCT is not set
+# CONFIG_NETFILTER_XT_MATCH_OSF is not set
+# CONFIG_NETFILTER_XT_MATCH_OWNER is not set
+# CONFIG_NETFILTER_XT_MATCH_POLICY is not set
+# CONFIG_NETFILTER_XT_MATCH_PKTTYPE is not set
+# CONFIG_NETFILTER_XT_MATCH_QUOTA is not set
+# CONFIG_NETFILTER_XT_MATCH_RATEEST is not set
+# CONFIG_NETFILTER_XT_MATCH_REALM is not set
+# CONFIG_NETFILTER_XT_MATCH_RECENT is not set
+# CONFIG_NETFILTER_XT_MATCH_SCTP is not set
+# CONFIG_NETFILTER_XT_MATCH_SOCKET is not set
 CONFIG_NETFILTER_XT_MATCH_STATE=m
+# CONFIG_NETFILTER_XT_MATCH_STATISTIC is not set
+# CONFIG_NETFILTER_XT_MATCH_STRING is not set
+# CONFIG_NETFILTER_XT_MATCH_TCPMSS is not set
+# CONFIG_NETFILTER_XT_MATCH_TIME is not set
+# CONFIG_NETFILTER_XT_MATCH_U32 is not set
+# end of Core Netfilter Configuration
+
+# CONFIG_IP_SET is not set
+# CONFIG_IP_VS is not set
+
+#
+# IP: Netfilter Configuration
+#
+CONFIG_NF_DEFRAG_IPV4=m
+# CONFIG_NF_SOCKET_IPV4 is not set
+# CONFIG_NF_TPROXY_IPV4 is not set
+# CONFIG_NF_DUP_IPV4 is not set
+# CONFIG_NF_LOG_ARP is not set
+# CONFIG_NF_LOG_IPV4 is not set
+CONFIG_NF_REJECT_IPV4=y
 CONFIG_IP_NF_IPTABLES=y
+# CONFIG_IP_NF_MATCH_AH is not set
+# CONFIG_IP_NF_MATCH_ECN is not set
+# CONFIG_IP_NF_MATCH_RPFILTER is not set
+# CONFIG_IP_NF_MATCH_TTL is not set
 CONFIG_IP_NF_FILTER=y
 CONFIG_IP_NF_TARGET_REJECT=y
+# CONFIG_IP_NF_TARGET_SYNPROXY is not set
+# CONFIG_IP_NF_NAT is not set
 CONFIG_IP_NF_MANGLE=y
+# CONFIG_IP_NF_TARGET_CLUSTERIP is not set
+# CONFIG_IP_NF_TARGET_ECN is not set
+# CONFIG_IP_NF_TARGET_TTL is not set
+# CONFIG_IP_NF_RAW is not set
+# CONFIG_IP_NF_ARPTABLES is not set
+# end of IP: Netfilter Configuration
+
+#
+# IPv6: Netfilter Configuration
+#
+# CONFIG_NF_SOCKET_IPV6 is not set
+# CONFIG_NF_TPROXY_IPV6 is not set
+# CONFIG_NF_DUP_IPV6 is not set
+CONFIG_NF_REJECT_IPV6=y
+CONFIG_NF_LOG_IPV6=y
 CONFIG_IP6_NF_IPTABLES=y
+# CONFIG_IP6_NF_MATCH_AH is not set
+# CONFIG_IP6_NF_MATCH_EUI64 is not set
+# CONFIG_IP6_NF_MATCH_FRAG is not set
+# CONFIG_IP6_NF_MATCH_OPTS is not set
+# CONFIG_IP6_NF_MATCH_HL is not set
+# CONFIG_IP6_NF_MATCH_IPV6HEADER is not set
+# CONFIG_IP6_NF_MATCH_MH is not set
+# CONFIG_IP6_NF_MATCH_RPFILTER is not set
+# CONFIG_IP6_NF_MATCH_RT is not set
+# CONFIG_IP6_NF_MATCH_SRH is not set
+# CONFIG_IP6_NF_TARGET_HL is not set
 CONFIG_IP6_NF_FILTER=y
 CONFIG_IP6_NF_TARGET_REJECT=y
+# CONFIG_IP6_NF_TARGET_SYNPROXY is not set
 CONFIG_IP6_NF_MANGLE=y
+# CONFIG_IP6_NF_RAW is not set
+# CONFIG_IP6_NF_NAT is not set
+# end of IPv6: Netfilter Configuration
+
+CONFIG_NF_DEFRAG_IPV6=m
+# CONFIG_NF_CONNTRACK_BRIDGE is not set
 CONFIG_BRIDGE_NF_EBTABLES=y
+# CONFIG_BRIDGE_EBT_BROUTE is not set
 CONFIG_BRIDGE_EBT_T_FILTER=y
 CONFIG_BRIDGE_EBT_T_NAT=y
+# CONFIG_BRIDGE_EBT_802_3 is not set
+# CONFIG_BRIDGE_EBT_AMONG is not set
+# CONFIG_BRIDGE_EBT_ARP is not set
+# CONFIG_BRIDGE_EBT_IP is not set
+# CONFIG_BRIDGE_EBT_IP6 is not set
+# CONFIG_BRIDGE_EBT_LIMIT is not set
+# CONFIG_BRIDGE_EBT_MARK is not set
+# CONFIG_BRIDGE_EBT_PKTTYPE is not set
+# CONFIG_BRIDGE_EBT_STP is not set
+# CONFIG_BRIDGE_EBT_VLAN is not set
+# CONFIG_BRIDGE_EBT_ARPREPLY is not set
+# CONFIG_BRIDGE_EBT_DNAT is not set
 CONFIG_BRIDGE_EBT_MARK_T=y
+# CONFIG_BRIDGE_EBT_REDIRECT is not set
+# CONFIG_BRIDGE_EBT_SNAT is not set
+# CONFIG_BRIDGE_EBT_LOG is not set
+# CONFIG_BRIDGE_EBT_NFLOG is not set
+# CONFIG_BPFILTER is not set
+# CONFIG_IP_DCCP is not set
+# CONFIG_IP_SCTP is not set
+# CONFIG_RDS is not set
+# CONFIG_TIPC is not set
+# CONFIG_ATM is not set
+# CONFIG_L2TP is not set
+CONFIG_STP=y
 CONFIG_BRIDGE=y
+CONFIG_BRIDGE_IGMP_SNOOPING=y
+# CONFIG_BRIDGE_VLAN_FILTERING is not set
+# CONFIG_BRIDGE_MRP is not set
+# CONFIG_BRIDGE_CFM is not set
+# CONFIG_NET_DSA is not set
 CONFIG_VLAN_8021Q=y
+# CONFIG_VLAN_8021Q_GVRP is not set
+# CONFIG_VLAN_8021Q_MVRP is not set
+# CONFIG_DECNET is not set
+CONFIG_LLC=y
+# CONFIG_LLC2 is not set
+# CONFIG_ATALK is not set
+# CONFIG_X25 is not set
+# CONFIG_LAPB is not set
+# CONFIG_PHONET is not set
+# CONFIG_6LOWPAN is not set
+# CONFIG_IEEE802154 is not set
 CONFIG_NET_SCHED=y
+
+#
+# Queueing/Scheduling
+#
+# CONFIG_NET_SCH_CBQ is not set
+# CONFIG_NET_SCH_HTB is not set
+# CONFIG_NET_SCH_HFSC is not set
+# CONFIG_NET_SCH_PRIO is not set
+# CONFIG_NET_SCH_MULTIQ is not set
+# CONFIG_NET_SCH_RED is not set
+# CONFIG_NET_SCH_SFB is not set
+# CONFIG_NET_SCH_SFQ is not set
+# CONFIG_NET_SCH_TEQL is not set
+# CONFIG_NET_SCH_TBF is not set
+# CONFIG_NET_SCH_CBS is not set
+# CONFIG_NET_SCH_ETF is not set
+# CONFIG_NET_SCH_TAPRIO is not set
+# CONFIG_NET_SCH_GRED is not set
+# CONFIG_NET_SCH_DSMARK is not set
+# CONFIG_NET_SCH_NETEM is not set
+# CONFIG_NET_SCH_DRR is not set
 CONFIG_NET_SCH_MQPRIO=y
 CONFIG_NET_SCH_SKBPRIO=y
+# CONFIG_NET_SCH_CHOKE is not set
+# CONFIG_NET_SCH_QFQ is not set
+# CONFIG_NET_SCH_CODEL is not set
+# CONFIG_NET_SCH_FQ_CODEL is not set
+# CONFIG_NET_SCH_CAKE is not set
+# CONFIG_NET_SCH_FQ is not set
+# CONFIG_NET_SCH_HHF is not set
+# CONFIG_NET_SCH_PIE is not set
+# CONFIG_NET_SCH_PLUG is not set
+# CONFIG_NET_SCH_ETS is not set
+# CONFIG_NET_SCH_DEFAULT is not set
+
+#
+# Classification
+#
+# CONFIG_NET_CLS_BASIC is not set
+# CONFIG_NET_CLS_TCINDEX is not set
+# CONFIG_NET_CLS_ROUTE4 is not set
+# CONFIG_NET_CLS_FW is not set
+# CONFIG_NET_CLS_U32 is not set
+# CONFIG_NET_CLS_RSVP is not set
+# CONFIG_NET_CLS_RSVP6 is not set
+# CONFIG_NET_CLS_FLOW is not set
+# CONFIG_NET_CLS_CGROUP is not set
+# CONFIG_NET_CLS_BPF is not set
+# CONFIG_NET_CLS_FLOWER is not set
+# CONFIG_NET_CLS_MATCHALL is not set
+# CONFIG_NET_EMATCH is not set
+# CONFIG_NET_CLS_ACT is not set
+CONFIG_NET_SCH_FIFO=y
+# CONFIG_DCB is not set
+CONFIG_DNS_RESOLVER=y
+# CONFIG_BATMAN_ADV is not set
+# CONFIG_OPENVSWITCH is not set
+# CONFIG_VSOCKETS is not set
+# CONFIG_NETLINK_DIAG is not set
+# CONFIG_MPLS is not set
+# CONFIG_NET_NSH is not set
+# CONFIG_HSR is not set
+CONFIG_NET_SWITCHDEV=y
+# CONFIG_NET_L3_MASTER_DEV is not set
+# CONFIG_QRTR is not set
+# CONFIG_NET_NCSI is not set
+CONFIG_PCPU_DEV_REFCNT=y
+CONFIG_RPS=y
+CONFIG_RFS_ACCEL=y
+CONFIG_SOCK_RX_QUEUE_MAPPING=y
+CONFIG_XPS=y
+# CONFIG_CGROUP_NET_PRIO is not set
+# CONFIG_CGROUP_NET_CLASSID is not set
+CONFIG_NET_RX_BUSY_POLL=y
+CONFIG_BQL=y
+CONFIG_NET_FLOW_LIMIT=y
+
+#
+# Network testing
+#
 CONFIG_NET_PKTGEN=y
+# end of Network testing
+# end of Networking options
+
+# CONFIG_HAMRADIO is not set
 CONFIG_CAN=y
+CONFIG_CAN_RAW=y
+CONFIG_CAN_BCM=y
+CONFIG_CAN_GW=y
+# CONFIG_CAN_J1939 is not set
+# CONFIG_CAN_ISOTP is not set
+
+#
+# CAN Device Drivers
+#
+# CONFIG_CAN_VCAN is not set
+# CONFIG_CAN_VXCAN is not set
+# CONFIG_CAN_SLCAN is not set
+CONFIG_CAN_DEV=y
+CONFIG_CAN_CALC_BITTIMING=y
+# CONFIG_CAN_FLEXCAN is not set
+# CONFIG_CAN_GRCAN is not set
+# CONFIG_CAN_KVASER_PCIEFD is not set
 CONFIG_CAN_XILINXCAN=y
+# CONFIG_CAN_C_CAN is not set
+# CONFIG_CAN_CC770 is not set
+# CONFIG_CAN_IFI_CANFD is not set
+# CONFIG_CAN_M_CAN is not set
+# CONFIG_CAN_PEAK_PCIEFD is not set
+# CONFIG_CAN_SJA1000 is not set
+# CONFIG_CAN_SOFTING is not set
+
+#
+# CAN SPI interfaces
+#
+# CONFIG_CAN_HI311X is not set
+# CONFIG_CAN_MCP251X is not set
+# CONFIG_CAN_MCP251XFD is not set
+# end of CAN SPI interfaces
+
+#
+# CAN USB interfaces
+#
+# CONFIG_CAN_8DEV_USB is not set
+# CONFIG_CAN_EMS_USB is not set
+# CONFIG_CAN_ESD_USB2 is not set
+# CONFIG_CAN_ETAS_ES58X is not set
+# CONFIG_CAN_GS_USB is not set
+# CONFIG_CAN_KVASER_USB is not set
+# CONFIG_CAN_MCBA_USB is not set
+# CONFIG_CAN_PEAK_USB is not set
+# CONFIG_CAN_UCAN is not set
+# end of CAN USB interfaces
+
+# CONFIG_CAN_DEBUG_DEVICES is not set
+# end of CAN Device Drivers
+
 CONFIG_BT=y
+CONFIG_BT_BREDR=y
 CONFIG_BT_RFCOMM=y
 CONFIG_BT_RFCOMM_TTY=y
 CONFIG_BT_BNEP=y
 CONFIG_BT_BNEP_MC_FILTER=y
 CONFIG_BT_BNEP_PROTO_FILTER=y
 CONFIG_BT_HIDP=y
+# CONFIG_BT_HS is not set
+CONFIG_BT_LE=y
 CONFIG_BT_LEDS=y
+# CONFIG_BT_MSFTEXT is not set
+# CONFIG_BT_AOSPEXT is not set
+CONFIG_BT_DEBUGFS=y
+# CONFIG_BT_SELFTEST is not set
+# CONFIG_BT_FEATURE_DEBUG is not set
+
+#
+# Bluetooth device drivers
+#
+CONFIG_BT_INTEL=y
+CONFIG_BT_BCM=y
+CONFIG_BT_RTL=y
+CONFIG_BT_QCA=y
 CONFIG_BT_HCIBTUSB=y
+# CONFIG_BT_HCIBTUSB_AUTOSUSPEND is not set
+CONFIG_BT_HCIBTUSB_BCM=y
+# CONFIG_BT_HCIBTUSB_MTK is not set
+CONFIG_BT_HCIBTUSB_RTL=y
 CONFIG_BT_HCIBTSDIO=y
 CONFIG_BT_HCIUART=y
+CONFIG_BT_HCIUART_SERDEV=y
+CONFIG_BT_HCIUART_H4=y
+# CONFIG_BT_HCIUART_NOKIA is not set
 CONFIG_BT_HCIUART_BCSP=y
 CONFIG_BT_HCIUART_ATH3K=y
 CONFIG_BT_HCIUART_LL=y
 CONFIG_BT_HCIUART_3WIRE=y
 CONFIG_BT_HCIUART_INTEL=y
+# CONFIG_BT_HCIUART_BCM is not set
+# CONFIG_BT_HCIUART_RTL is not set
 CONFIG_BT_HCIUART_QCA=y
+# CONFIG_BT_HCIUART_AG6XX is not set
+# CONFIG_BT_HCIUART_MRVL is not set
 CONFIG_BT_HCIBCM203X=y
 CONFIG_BT_HCIBPA10X=y
 CONFIG_BT_HCIBFUSB=y
@@ -103,141 +1311,2191 @@ CONFIG_BT_HCIVHCI=y
 CONFIG_BT_MRVL=y
 CONFIG_BT_MRVL_SDIO=y
 CONFIG_BT_ATH3K=y
+# CONFIG_BT_MTKSDIO is not set
+# CONFIG_BT_MTKUART is not set
+# CONFIG_BT_VIRTIO is not set
+# end of Bluetooth device drivers
+
+# CONFIG_AF_RXRPC is not set
+# CONFIG_AF_KCM is not set
+# CONFIG_MCTP is not set
+CONFIG_WIRELESS=y
+CONFIG_WEXT_CORE=y
+CONFIG_WEXT_PROC=y
 CONFIG_CFG80211=y
 CONFIG_NL80211_TESTMODE=y
+# CONFIG_CFG80211_DEVELOPER_WARNINGS is not set
 CONFIG_CFG80211_CERTIFICATION_ONUS=y
+CONFIG_CFG80211_REQUIRE_SIGNED_REGDB=y
+CONFIG_CFG80211_USE_KERNEL_REGDB_KEYS=y
+CONFIG_CFG80211_EXTRA_REGDB_KEYDIR=""
 CONFIG_CFG80211_REG_CELLULAR_HINTS=y
 CONFIG_CFG80211_REG_RELAX_NO_IR=y
+CONFIG_CFG80211_DEFAULT_PS=y
+# CONFIG_CFG80211_DEBUGFS is not set
+CONFIG_CFG80211_CRDA_SUPPORT=y
 CONFIG_CFG80211_WEXT=y
 CONFIG_MAC80211=y
+CONFIG_MAC80211_HAS_RC=y
+CONFIG_MAC80211_RC_MINSTREL=y
+CONFIG_MAC80211_RC_DEFAULT_MINSTREL=y
+CONFIG_MAC80211_RC_DEFAULT="minstrel_ht"
+# CONFIG_MAC80211_MESH is not set
 CONFIG_MAC80211_LEDS=y
+# CONFIG_MAC80211_DEBUGFS is not set
 CONFIG_MAC80211_MESSAGE_TRACING=y
 CONFIG_MAC80211_DEBUG_MENU=y
+# CONFIG_MAC80211_NOINLINE is not set
+# CONFIG_MAC80211_VERBOSE_DEBUG is not set
+# CONFIG_MAC80211_MLME_DEBUG is not set
+# CONFIG_MAC80211_STA_DEBUG is not set
+# CONFIG_MAC80211_HT_DEBUG is not set
+# CONFIG_MAC80211_OCB_DEBUG is not set
+# CONFIG_MAC80211_IBSS_DEBUG is not set
+# CONFIG_MAC80211_PS_DEBUG is not set
+# CONFIG_MAC80211_TDLS_DEBUG is not set
+CONFIG_MAC80211_STA_HASH_MAX_SIZE=0
 CONFIG_RFKILL=y
+CONFIG_RFKILL_LEDS=y
 CONFIG_RFKILL_INPUT=y
 CONFIG_RFKILL_GPIO=y
 CONFIG_NET_9P=y
+# CONFIG_NET_9P_VIRTIO is not set
+# CONFIG_NET_9P_DEBUG is not set
+# CONFIG_CAIF is not set
+# CONFIG_CEPH_LIB is not set
+# CONFIG_NFC is not set
+# CONFIG_PSAMPLE is not set
+# CONFIG_NET_IFE is not set
+# CONFIG_LWTUNNEL is not set
+CONFIG_DST_CACHE=y
+CONFIG_GRO_CELLS=y
+CONFIG_NET_SELFTESTS=y
+# CONFIG_FAILOVER is not set
+CONFIG_ETHTOOL_NETLINK=y
+
+#
+# Device Drivers
+#
+CONFIG_ARM_AMBA=y
+CONFIG_HAVE_PCI=y
 CONFIG_PCI=y
+CONFIG_PCI_DOMAINS=y
+CONFIG_PCI_DOMAINS_GENERIC=y
+CONFIG_PCI_SYSCALL=y
+# CONFIG_PCIEPORTBUS is not set
+CONFIG_PCIEASPM=y
+CONFIG_PCIEASPM_DEFAULT=y
+# CONFIG_PCIEASPM_POWERSAVE is not set
+# CONFIG_PCIEASPM_POWER_SUPERSAVE is not set
+# CONFIG_PCIEASPM_PERFORMANCE is not set
+# CONFIG_PCIE_PTM is not set
+CONFIG_PCI_MSI=y
+CONFIG_PCI_MSI_IRQ_DOMAIN=y
+CONFIG_PCI_QUIRKS=y
+# CONFIG_PCI_DEBUG is not set
+# CONFIG_PCI_STUB is not set
+# CONFIG_PCI_IOV is not set
+# CONFIG_PCI_PRI is not set
+# CONFIG_PCI_PASID is not set
+# CONFIG_PCIE_BUS_TUNE_OFF is not set
+CONFIG_PCIE_BUS_DEFAULT=y
+# CONFIG_PCIE_BUS_SAFE is not set
+# CONFIG_PCIE_BUS_PERFORMANCE is not set
+# CONFIG_PCIE_BUS_PEER2PEER is not set
+# CONFIG_HOTPLUG_PCI is not set
+
+#
+# PCI controller drivers
+#
 CONFIG_PCIE_XILINX_NWL=y
+# CONFIG_PCI_FTPCI100 is not set
+# CONFIG_PCI_HOST_GENERIC is not set
+# CONFIG_PCIE_XILINX is not set
+# CONFIG_PCIE_XILINX_CPM is not set
+# CONFIG_PCIE_XDMA_PL is not set
+# CONFIG_PCI_XGENE is not set
+# CONFIG_PCIE_ALTERA is not set
+# CONFIG_PCI_HOST_THUNDER_PEM is not set
+# CONFIG_PCI_HOST_THUNDER_ECAM is not set
+# CONFIG_PCIE_MICROCHIP_HOST is not set
+
+#
+# DesignWare PCI Core Support
+#
+# CONFIG_PCIE_DW_PLAT_HOST is not set
+# CONFIG_PCI_HISI is not set
+# CONFIG_PCIE_KIRIN is not set
+# CONFIG_PCI_MESON is not set
+# CONFIG_PCIE_AL is not set
+# end of DesignWare PCI Core Support
+
+#
+# Mobiveil PCIe Core Support
+#
+# CONFIG_PCIE_MOBIVEIL_PLAT is not set
+# end of Mobiveil PCIe Core Support
+
+#
+# Cadence PCIe controllers support
+#
+# CONFIG_PCIE_CADENCE_PLAT_HOST is not set
+# CONFIG_PCI_J721E_HOST is not set
+# end of Cadence PCIe controllers support
+# end of PCI controller drivers
+
+#
+# PCI Endpoint
+#
+# CONFIG_PCI_ENDPOINT is not set
+# end of PCI Endpoint
+
+#
+# PCI switch controller drivers
+#
+# CONFIG_PCI_SW_SWITCHTEC is not set
+# end of PCI switch controller drivers
+
+# CONFIG_CXL_BUS is not set
+# CONFIG_PCCARD is not set
+# CONFIG_RAPIDIO is not set
+
+#
+# Generic Driver Options
+#
+# CONFIG_UEVENT_HELPER is not set
 CONFIG_DEVTMPFS=y
 CONFIG_DEVTMPFS_MOUNT=y
+CONFIG_STANDALONE=y
+CONFIG_PREVENT_FIRMWARE_BUILD=y
+
+#
+# Firmware loader
+#
+CONFIG_FW_LOADER=y
+CONFIG_EXTRA_FIRMWARE=""
+# CONFIG_FW_LOADER_USER_HELPER is not set
+# CONFIG_FW_LOADER_COMPRESS is not set
+CONFIG_FW_CACHE=y
+# end of Firmware loader
+
+CONFIG_WANT_DEV_COREDUMP=y
+CONFIG_ALLOW_DEV_COREDUMP=y
+CONFIG_DEV_COREDUMP=y
+# CONFIG_DEBUG_DRIVER is not set
+# CONFIG_DEBUG_DEVRES is not set
+# CONFIG_DEBUG_TEST_DRIVER_REMOVE is not set
+# CONFIG_TEST_ASYNC_DRIVER_PROBE is not set
+CONFIG_GENERIC_CPU_AUTOPROBE=y
+CONFIG_GENERIC_CPU_VULNERABILITIES=y
+CONFIG_SOC_BUS=y
+CONFIG_REGMAP=y
+CONFIG_REGMAP_I2C=y
+CONFIG_REGMAP_SPI=y
+CONFIG_REGMAP_MMIO=y
+CONFIG_REGMAP_IRQ=y
+CONFIG_DMA_SHARED_BUFFER=y
+# CONFIG_DMA_FENCE_TRACE is not set
+CONFIG_GENERIC_ARCH_TOPOLOGY=y
+# end of Generic Driver Options
+
+#
+# Bus devices
+#
+CONFIG_ARM_CCI=y
+CONFIG_ARM_CCI400_COMMON=y
+# CONFIG_BRCMSTB_GISB_ARB is not set
+# CONFIG_MOXTET is not set
+# CONFIG_VEXPRESS_CONFIG is not set
+# CONFIG_MHI_BUS is not set
+# end of Bus devices
+
 CONFIG_CONNECTOR=y
+CONFIG_PROC_EVENTS=y
+
+#
+# Firmware Drivers
+#
+
+#
+# ARM System Control and Management Interface Protocol
+#
+# CONFIG_ARM_SCMI_PROTOCOL is not set
+# end of ARM System Control and Management Interface Protocol
+
+# CONFIG_ARM_SCPI_PROTOCOL is not set
+# CONFIG_ARM_SDE_INTERFACE is not set
+# CONFIG_FIRMWARE_MEMMAP is not set
+# CONFIG_FW_CFG_SYSFS is not set
+CONFIG_SYSFB=y
+# CONFIG_SYSFB_SIMPLEFB is not set
+# CONFIG_ARM_FFA_TRANSPORT is not set
+# CONFIG_GOOGLE_FIRMWARE is not set
+
+#
+# EFI (Extensible Firmware Interface) Support
+#
+CONFIG_EFI_ESRT=y
+CONFIG_EFI_PARAMS_FROM_FDT=y
+CONFIG_EFI_RUNTIME_WRAPPERS=y
+CONFIG_EFI_GENERIC_STUB=y
+CONFIG_EFI_ARMSTUB_DTB_LOADER=y
+# CONFIG_EFI_GENERIC_STUB_INITRD_CMDLINE_LOADER is not set
+# CONFIG_EFI_BOOTLOADER_CONTROL is not set
+# CONFIG_EFI_CAPSULE_LOADER is not set
+# CONFIG_EFI_TEST is not set
+# CONFIG_RESET_ATTACK_MITIGATION is not set
+# CONFIG_EFI_DISABLE_PCI_DMA is not set
+# end of EFI (Extensible Firmware Interface) Support
+
+CONFIG_EFI_EARLYCON=y
+CONFIG_ARM_PSCI_FW=y
+CONFIG_HAVE_ARM_SMCCC=y
+CONFIG_HAVE_ARM_SMCCC_DISCOVERY=y
+CONFIG_ARM_SMCCC_SOC_ID=y
+
+#
+# Tegra firmware driver
+#
+# end of Tegra firmware driver
+
+#
+# Zynq MPSoC Firmware Drivers
+#
+CONFIG_ZYNQMP_FIRMWARE=y
 CONFIG_ZYNQMP_FIRMWARE_DEBUG=y
 CONFIG_ZYNQMP_FIRMWARE_SECURE=y
+# end of Zynq MPSoC Firmware Drivers
+# end of Firmware Drivers
+
+# CONFIG_GNSS is not set
 CONFIG_MTD=y
 CONFIG_MTD_TESTS=m
+
+#
+# Partition parsers
+#
+# CONFIG_MTD_AR7_PARTS is not set
 CONFIG_MTD_CMDLINE_PARTS=y
+CONFIG_MTD_OF_PARTS=y
+# CONFIG_MTD_AFS_PARTS is not set
+# CONFIG_MTD_REDBOOT_PARTS is not set
+# end of Partition parsers
+
+#
+# User Modules And Translation Layers
+#
+CONFIG_MTD_BLKDEVS=y
 CONFIG_MTD_BLOCK=y
+
+#
+# Note that in some cases UBI block is preferred. See MTD_UBI_BLOCK.
+#
+# CONFIG_FTL is not set
+# CONFIG_NFTL is not set
+# CONFIG_INFTL is not set
+# CONFIG_RFD_FTL is not set
+# CONFIG_SSFDC is not set
+# CONFIG_SM_FTL is not set
 CONFIG_MTD_OOPS=y
+# CONFIG_MTD_SWAP is not set
+# CONFIG_MTD_PARTITIONED_MASTER is not set
+
+#
+# RAM/ROM/Flash chip drivers
+#
 CONFIG_MTD_CFI=y
+# CONFIG_MTD_JEDECPROBE is not set
+CONFIG_MTD_GEN_PROBE=y
+# CONFIG_MTD_CFI_ADV_OPTIONS is not set
+CONFIG_MTD_MAP_BANK_WIDTH_1=y
+CONFIG_MTD_MAP_BANK_WIDTH_2=y
+CONFIG_MTD_MAP_BANK_WIDTH_4=y
+CONFIG_MTD_CFI_I1=y
+CONFIG_MTD_CFI_I2=y
 CONFIG_MTD_CFI_INTELEXT=y
+# CONFIG_MTD_CFI_AMDSTD is not set
+# CONFIG_MTD_CFI_STAA is not set
+CONFIG_MTD_CFI_UTIL=y
+# CONFIG_MTD_RAM is not set
+# CONFIG_MTD_ROM is not set
+# CONFIG_MTD_ABSENT is not set
+# end of RAM/ROM/Flash chip drivers
+
+#
+# Mapping drivers for chip access
+#
+# CONFIG_MTD_COMPLEX_MAPPINGS is not set
+# CONFIG_MTD_PHYSMAP is not set
+# CONFIG_MTD_INTEL_VR_NOR is not set
+# CONFIG_MTD_PLATRAM is not set
+# end of Mapping drivers for chip access
+
+#
+# Self-contained MTD device drivers
+#
+# CONFIG_MTD_PMC551 is not set
 CONFIG_MTD_DATAFLASH=y
+# CONFIG_MTD_DATAFLASH_WRITE_VERIFY is not set
+# CONFIG_MTD_DATAFLASH_OTP is not set
+# CONFIG_MTD_MCHP23K256 is not set
+# CONFIG_MTD_MCHP48L640 is not set
+# CONFIG_MTD_SST25L is not set
+# CONFIG_MTD_SLRAM is not set
+# CONFIG_MTD_PHRAM is not set
+# CONFIG_MTD_MTDRAM is not set
+# CONFIG_MTD_BLOCK2MTD is not set
+
+#
+# Disk-On-Chip Device Drivers
+#
+# CONFIG_MTD_DOCG3 is not set
+# end of Self-contained MTD device drivers
+
+#
+# NAND
+#
+CONFIG_MTD_NAND_CORE=y
+# CONFIG_MTD_ONENAND is not set
 CONFIG_MTD_RAW_NAND=y
+
+#
+# Raw/parallel NAND flash controllers
+#
+# CONFIG_MTD_NAND_DENALI_PCI is not set
+# CONFIG_MTD_NAND_DENALI_DT is not set
+# CONFIG_MTD_NAND_CAFE is not set
+# CONFIG_MTD_NAND_BRCMNAND is not set
+# CONFIG_MTD_NAND_MXIC is not set
+# CONFIG_MTD_NAND_GPIO is not set
+# CONFIG_MTD_NAND_PLATFORM is not set
+# CONFIG_MTD_NAND_CADENCE is not set
 CONFIG_MTD_NAND_ARASAN=y
+# CONFIG_MTD_NAND_INTEL_LGM is not set
+
+#
+# Misc
+#
+# CONFIG_MTD_NAND_NANDSIM is not set
+# CONFIG_MTD_NAND_RICOH is not set
+# CONFIG_MTD_NAND_DISKONCHIP is not set
+# CONFIG_MTD_SPI_NAND is not set
+
+#
+# ECC engine support
+#
+CONFIG_MTD_NAND_ECC=y
+CONFIG_MTD_NAND_ECC_SW_HAMMING=y
+# CONFIG_MTD_NAND_ECC_SW_HAMMING_SMC is not set
 CONFIG_MTD_NAND_ECC_SW_BCH=y
+# end of ECC engine support
+# end of NAND
+
+#
+# LPDDR & LPDDR2 PCM memory drivers
+#
+# CONFIG_MTD_LPDDR is not set
+# end of LPDDR & LPDDR2 PCM memory drivers
+
 CONFIG_MTD_SPI_NOR=y
 # CONFIG_MTD_SPI_NOR_USE_4K_SECTORS is not set
+# CONFIG_MTD_SPI_NOR_SWP_DISABLE is not set
+CONFIG_MTD_SPI_NOR_SWP_DISABLE_ON_VOLATILE=y
+# CONFIG_MTD_SPI_NOR_SWP_KEEP is not set
 CONFIG_MTD_UBI=y
+CONFIG_MTD_UBI_WL_THRESHOLD=4096
+CONFIG_MTD_UBI_BEB_LIMIT=20
+# CONFIG_MTD_UBI_FASTMAP is not set
+# CONFIG_MTD_UBI_GLUEBI is not set
+# CONFIG_MTD_UBI_BLOCK is not set
+# CONFIG_MTD_HYPERBUS is not set
+CONFIG_DTC=y
+CONFIG_OF=y
+# CONFIG_OF_UNITTEST is not set
+CONFIG_OF_FLATTREE=y
+CONFIG_OF_EARLY_FLATTREE=y
+CONFIG_OF_KOBJ=y
+CONFIG_OF_DYNAMIC=y
+CONFIG_OF_ADDRESS=y
+CONFIG_OF_IRQ=y
+CONFIG_OF_NET=y
+CONFIG_OF_RESERVED_MEM=y
+CONFIG_OF_RESOLVE=y
 CONFIG_OF_OVERLAY=y
 CONFIG_OF_CONFIGFS=y
+# CONFIG_PARPORT is not set
+CONFIG_BLK_DEV=y
+# CONFIG_BLK_DEV_NULL_BLK is not set
+# CONFIG_BLK_DEV_PCIESSD_MTIP32XX is not set
 CONFIG_BLK_DEV_LOOP=y
+CONFIG_BLK_DEV_LOOP_MIN_COUNT=8
+# CONFIG_BLK_DEV_CRYPTOLOOP is not set
+# CONFIG_BLK_DEV_DRBD is not set
+# CONFIG_BLK_DEV_NBD is not set
+# CONFIG_BLK_DEV_SX8 is not set
 CONFIG_BLK_DEV_RAM=y
+CONFIG_BLK_DEV_RAM_COUNT=16
 CONFIG_BLK_DEV_RAM_SIZE=65536
+# CONFIG_CDROM_PKTCDVD is not set
+# CONFIG_ATA_OVER_ETH is not set
+# CONFIG_VIRTIO_BLK is not set
+# CONFIG_BLK_DEV_RBD is not set
+# CONFIG_BLK_DEV_RSXX is not set
+
+#
+# NVME Support
+#
+# CONFIG_BLK_DEV_NVME is not set
+# CONFIG_NVME_FC is not set
+# CONFIG_NVME_TCP is not set
+# CONFIG_NVME_TARGET is not set
+# end of NVME Support
+
+#
+# Misc devices
+#
+# CONFIG_AD525X_DPOT is not set
+# CONFIG_DUMMY_IRQ is not set
+# CONFIG_PHANTOM is not set
+# CONFIG_TIFM_CORE is not set
+# CONFIG_ICS932S401 is not set
+# CONFIG_ENCLOSURE_SERVICES is not set
+# CONFIG_HP_ILO is not set
+# CONFIG_APDS9802ALS is not set
+# CONFIG_ISL29003 is not set
+# CONFIG_ISL29020 is not set
+# CONFIG_SENSORS_TSL2550 is not set
+# CONFIG_SENSORS_BH1770 is not set
+# CONFIG_SENSORS_APDS990X is not set
+# CONFIG_HMC6352 is not set
+# CONFIG_DS1682 is not set
+# CONFIG_LATTICE_ECP3_CONFIG is not set
+# CONFIG_SRAM is not set
+# CONFIG_DW_XDATA_PCIE is not set
+# CONFIG_PCI_ENDPOINT_TEST is not set
 CONFIG_XILINX_SDFEC=y
+# CONFIG_XILINX_DPU is not set
+# CONFIG_XILINX_FLEX_PM is not set
+# CONFIG_XILINX_TRAFGEN is not set
+# CONFIG_XILINX_AIE is not set
+# CONFIG_HISI_HIKEY_USB is not set
 CONFIG_XILINX_JESD204B=y
 CONFIG_XILINX_JESD204B_PHY=y
+# CONFIG_C2PORT is not set
+
+#
+# EEPROM support
+#
 CONFIG_EEPROM_AT24=y
 CONFIG_EEPROM_AT25=y
+# CONFIG_EEPROM_LEGACY is not set
+# CONFIG_EEPROM_MAX6875 is not set
+# CONFIG_EEPROM_93CX6 is not set
+# CONFIG_EEPROM_93XX46 is not set
+# CONFIG_EEPROM_IDT_89HPESX is not set
+# CONFIG_EEPROM_EE1004 is not set
+# end of EEPROM support
+
+# CONFIG_CB710_CORE is not set
+
+#
+# Texas Instruments shared transport line discipline
+#
 CONFIG_TI_ST=y
+# end of Texas Instruments shared transport line discipline
+
+# CONFIG_SENSORS_LIS3_SPI is not set
+# CONFIG_SENSORS_LIS3_I2C is not set
+# CONFIG_ALTERA_STAPL is not set
+# CONFIG_GENWQE is not set
+# CONFIG_ECHO is not set
+# CONFIG_BCM_VK is not set
+# CONFIG_MISC_ALCOR_PCI is not set
+# CONFIG_MISC_RTSX_PCI is not set
+# CONFIG_MISC_RTSX_USB is not set
+# CONFIG_HABANA_AI is not set
+# CONFIG_UACCE is not set
+# CONFIG_PVPANIC is not set
+# end of Misc devices
+
+#
+# SCSI device support
+#
+CONFIG_SCSI_MOD=y
+# CONFIG_RAID_ATTRS is not set
+CONFIG_SCSI_COMMON=y
+CONFIG_SCSI=y
+CONFIG_SCSI_DMA=y
+CONFIG_SCSI_PROC_FS=y
+
+#
+# SCSI support type (disk, tape, CD-ROM)
+#
 CONFIG_BLK_DEV_SD=y
+# CONFIG_CHR_DEV_ST is not set
+# CONFIG_BLK_DEV_SR is not set
+# CONFIG_CHR_DEV_SG is not set
+CONFIG_BLK_DEV_BSG=y
+# CONFIG_CHR_DEV_SCH is not set
+# CONFIG_SCSI_CONSTANTS is not set
+# CONFIG_SCSI_LOGGING is not set
+# CONFIG_SCSI_SCAN_ASYNC is not set
+
+#
+# SCSI Transports
+#
+# CONFIG_SCSI_SPI_ATTRS is not set
+# CONFIG_SCSI_FC_ATTRS is not set
+# CONFIG_SCSI_ISCSI_ATTRS is not set
+# CONFIG_SCSI_SAS_ATTRS is not set
+# CONFIG_SCSI_SAS_LIBSAS is not set
+# CONFIG_SCSI_SRP_ATTRS is not set
+# end of SCSI Transports
+
+CONFIG_SCSI_LOWLEVEL=y
+# CONFIG_ISCSI_TCP is not set
+# CONFIG_ISCSI_BOOT_SYSFS is not set
+# CONFIG_SCSI_CXGB3_ISCSI is not set
+# CONFIG_SCSI_CXGB4_ISCSI is not set
+# CONFIG_SCSI_BNX2_ISCSI is not set
+# CONFIG_BE2ISCSI is not set
+# CONFIG_BLK_DEV_3W_XXXX_RAID is not set
+# CONFIG_SCSI_HPSA is not set
+# CONFIG_SCSI_3W_9XXX is not set
+# CONFIG_SCSI_3W_SAS is not set
+# CONFIG_SCSI_ACARD is not set
+# CONFIG_SCSI_AACRAID is not set
+# CONFIG_SCSI_AIC7XXX is not set
+# CONFIG_SCSI_AIC79XX is not set
+# CONFIG_SCSI_AIC94XX is not set
+# CONFIG_SCSI_HISI_SAS is not set
+# CONFIG_SCSI_MVSAS is not set
+# CONFIG_SCSI_MVUMI is not set
+# CONFIG_SCSI_ADVANSYS is not set
+# CONFIG_SCSI_ARCMSR is not set
+# CONFIG_SCSI_ESAS2R is not set
+# CONFIG_MEGARAID_NEWGEN is not set
+# CONFIG_MEGARAID_LEGACY is not set
+# CONFIG_MEGARAID_SAS is not set
+# CONFIG_SCSI_MPT3SAS is not set
+# CONFIG_SCSI_MPT2SAS is not set
+# CONFIG_SCSI_MPI3MR is not set
+# CONFIG_SCSI_SMARTPQI is not set
+# CONFIG_SCSI_UFSHCD is not set
+# CONFIG_SCSI_HPTIOP is not set
+# CONFIG_SCSI_MYRB is not set
+# CONFIG_SCSI_MYRS is not set
+# CONFIG_SCSI_SNIC is not set
+# CONFIG_SCSI_DMX3191D is not set
+# CONFIG_SCSI_FDOMAIN_PCI is not set
+# CONFIG_SCSI_IPS is not set
+# CONFIG_SCSI_INITIO is not set
+# CONFIG_SCSI_INIA100 is not set
+# CONFIG_SCSI_STEX is not set
+# CONFIG_SCSI_SYM53C8XX_2 is not set
+# CONFIG_SCSI_IPR is not set
+# CONFIG_SCSI_QLOGIC_1280 is not set
+# CONFIG_SCSI_QLA_ISCSI is not set
+# CONFIG_SCSI_DC395x is not set
+# CONFIG_SCSI_AM53C974 is not set
+# CONFIG_SCSI_WD719X is not set
+# CONFIG_SCSI_DEBUG is not set
+# CONFIG_SCSI_PMCRAID is not set
+# CONFIG_SCSI_PM8001 is not set
+# CONFIG_SCSI_VIRTIO is not set
+# CONFIG_SCSI_DH is not set
+# end of SCSI device support
+
+CONFIG_HAVE_PATA_PLATFORM=y
 CONFIG_ATA=y
+CONFIG_SATA_HOST=y
+CONFIG_ATA_VERBOSE_ERROR=y
+CONFIG_ATA_FORCE=y
+CONFIG_SATA_PMP=y
+
+#
+# Controllers with non-SFF native interface
+#
+# CONFIG_SATA_AHCI is not set
 CONFIG_SATA_AHCI_PLATFORM=y
 CONFIG_AHCI_CEVA=y
+# CONFIG_AHCI_QORIQ is not set
+# CONFIG_SATA_INIC162X is not set
+# CONFIG_SATA_ACARD_AHCI is not set
+# CONFIG_SATA_SIL24 is not set
 # CONFIG_ATA_SFF is not set
+# CONFIG_MD is not set
+# CONFIG_TARGET_CORE is not set
+# CONFIG_FUSION is not set
+
+#
+# IEEE 1394 (FireWire) support
+#
+# CONFIG_FIREWIRE is not set
+# CONFIG_FIREWIRE_NOSY is not set
+# end of IEEE 1394 (FireWire) support
+
 CONFIG_NETDEVICES=y
+CONFIG_MII=y
+CONFIG_NET_CORE=y
+# CONFIG_BONDING is not set
+# CONFIG_DUMMY is not set
+# CONFIG_WIREGUARD is not set
+# CONFIG_EQUALIZER is not set
+# CONFIG_NET_FC is not set
+# CONFIG_NET_TEAM is not set
+# CONFIG_MACVLAN is not set
+# CONFIG_IPVLAN is not set
+# CONFIG_VXLAN is not set
+# CONFIG_GENEVE is not set
+# CONFIG_BAREUDP is not set
+# CONFIG_GTP is not set
+# CONFIG_MACSEC is not set
+# CONFIG_NETCONSOLE is not set
 CONFIG_TUN=y
+# CONFIG_TUN_VNET_CROSS_LE is not set
+# CONFIG_VETH is not set
+# CONFIG_VIRTIO_NET is not set
+# CONFIG_NLMON is not set
+# CONFIG_ARCNET is not set
+CONFIG_ETHERNET=y
+CONFIG_NET_VENDOR_3COM=y
+# CONFIG_VORTEX is not set
+# CONFIG_TYPHOON is not set
+CONFIG_NET_VENDOR_ADAPTEC=y
+# CONFIG_ADAPTEC_STARFIRE is not set
+CONFIG_NET_VENDOR_AGERE=y
+# CONFIG_ET131X is not set
+CONFIG_NET_VENDOR_ALACRITECH=y
+# CONFIG_SLICOSS is not set
+CONFIG_NET_VENDOR_ALTEON=y
+# CONFIG_ACENIC is not set
+# CONFIG_ALTERA_TSE is not set
+CONFIG_NET_VENDOR_AMAZON=y
+# CONFIG_ENA_ETHERNET is not set
+CONFIG_NET_VENDOR_AMD=y
+# CONFIG_AMD8111_ETH is not set
+# CONFIG_PCNET32 is not set
+# CONFIG_AMD_XGBE is not set
+CONFIG_NET_VENDOR_AQUANTIA=y
+# CONFIG_AQTION is not set
+CONFIG_NET_VENDOR_ARC=y
+CONFIG_NET_VENDOR_ATHEROS=y
+# CONFIG_ATL2 is not set
+# CONFIG_ATL1 is not set
+# CONFIG_ATL1E is not set
+# CONFIG_ATL1C is not set
+# CONFIG_ALX is not set
+CONFIG_NET_VENDOR_BROADCOM=y
+# CONFIG_B44 is not set
+# CONFIG_BCMGENET is not set
+# CONFIG_BNX2 is not set
+# CONFIG_CNIC is not set
+# CONFIG_TIGON3 is not set
+# CONFIG_BNX2X is not set
+# CONFIG_SYSTEMPORT is not set
+# CONFIG_BNXT is not set
+CONFIG_NET_VENDOR_BROCADE=y
+# CONFIG_BNA is not set
+CONFIG_NET_VENDOR_CADENCE=y
 CONFIG_MACB=y
+CONFIG_MACB_USE_HWSTAMP=y
+# CONFIG_MACB_PCI is not set
+CONFIG_NET_VENDOR_CAVIUM=y
+# CONFIG_THUNDER_NIC_PF is not set
+# CONFIG_THUNDER_NIC_VF is not set
+# CONFIG_THUNDER_NIC_BGX is not set
+# CONFIG_THUNDER_NIC_RGX is not set
+# CONFIG_CAVIUM_PTP is not set
+# CONFIG_LIQUIDIO is not set
+# CONFIG_LIQUIDIO_VF is not set
+CONFIG_NET_VENDOR_CHELSIO=y
+# CONFIG_CHELSIO_T1 is not set
+# CONFIG_CHELSIO_T3 is not set
+# CONFIG_CHELSIO_T4 is not set
+# CONFIG_CHELSIO_T4VF is not set
+CONFIG_NET_VENDOR_CISCO=y
+# CONFIG_ENIC is not set
+CONFIG_NET_VENDOR_CORTINA=y
+# CONFIG_GEMINI_ETHERNET is not set
+# CONFIG_DNET is not set
+CONFIG_NET_VENDOR_DEC=y
+# CONFIG_NET_TULIP is not set
+CONFIG_NET_VENDOR_DLINK=y
+# CONFIG_DL2K is not set
+# CONFIG_SUNDANCE is not set
+CONFIG_NET_VENDOR_EMULEX=y
+# CONFIG_BE2NET is not set
+CONFIG_NET_VENDOR_EZCHIP=y
+# CONFIG_EZCHIP_NPS_MANAGEMENT_ENET is not set
+CONFIG_NET_VENDOR_GOOGLE=y
+# CONFIG_GVE is not set
+CONFIG_NET_VENDOR_HISILICON=y
+# CONFIG_HIX5HD2_GMAC is not set
+# CONFIG_HISI_FEMAC is not set
+# CONFIG_HIP04_ETH is not set
+# CONFIG_HNS_DSAF is not set
+# CONFIG_HNS_ENET is not set
+# CONFIG_HNS3 is not set
+CONFIG_NET_VENDOR_HUAWEI=y
+# CONFIG_HINIC is not set
+CONFIG_NET_VENDOR_I825XX=y
+CONFIG_NET_VENDOR_INTEL=y
+# CONFIG_E100 is not set
+# CONFIG_E1000 is not set
+# CONFIG_E1000E is not set
+# CONFIG_IGB is not set
+# CONFIG_IGBVF is not set
+# CONFIG_IXGB is not set
+# CONFIG_IXGBE is not set
+# CONFIG_IXGBEVF is not set
+# CONFIG_I40E is not set
+# CONFIG_I40EVF is not set
+# CONFIG_ICE is not set
+# CONFIG_FM10K is not set
+# CONFIG_IGC is not set
+CONFIG_NET_VENDOR_MICROSOFT=y
+# CONFIG_JME is not set
+CONFIG_NET_VENDOR_LITEX=y
+# CONFIG_LITEX_LITEETH is not set
+CONFIG_NET_VENDOR_MARVELL=y
+# CONFIG_MVMDIO is not set
+# CONFIG_SKGE is not set
+# CONFIG_SKY2 is not set
+# CONFIG_OCTEONTX2_AF is not set
+# CONFIG_OCTEONTX2_PF is not set
+# CONFIG_PRESTERA is not set
+CONFIG_NET_VENDOR_MELLANOX=y
+# CONFIG_MLX4_EN is not set
+# CONFIG_MLX5_CORE is not set
+# CONFIG_MLXSW_CORE is not set
+# CONFIG_MLXFW is not set
+CONFIG_NET_VENDOR_MICREL=y
+# CONFIG_KS8842 is not set
+# CONFIG_KS8851 is not set
+# CONFIG_KS8851_MLL is not set
+# CONFIG_KSZ884X_PCI is not set
+CONFIG_NET_VENDOR_MICROCHIP=y
+# CONFIG_ENC28J60 is not set
+# CONFIG_ENCX24J600 is not set
+# CONFIG_LAN743X is not set
+CONFIG_NET_VENDOR_MICROSEMI=y
+# CONFIG_MSCC_OCELOT_SWITCH is not set
+CONFIG_NET_VENDOR_MYRI=y
+# CONFIG_MYRI10GE is not set
+# CONFIG_FEALNX is not set
+CONFIG_NET_VENDOR_NATSEMI=y
+# CONFIG_NATSEMI is not set
+# CONFIG_NS83820 is not set
+CONFIG_NET_VENDOR_NETERION=y
+# CONFIG_S2IO is not set
+# CONFIG_VXGE is not set
+CONFIG_NET_VENDOR_NETRONOME=y
+# CONFIG_NFP is not set
+CONFIG_NET_VENDOR_NI=y
+# CONFIG_NI_XGE_MANAGEMENT_ENET is not set
+CONFIG_NET_VENDOR_8390=y
+# CONFIG_NE2K_PCI is not set
+CONFIG_NET_VENDOR_NVIDIA=y
+# CONFIG_FORCEDETH is not set
+CONFIG_NET_VENDOR_OKI=y
+# CONFIG_ETHOC is not set
+CONFIG_NET_VENDOR_PACKET_ENGINES=y
+# CONFIG_HAMACHI is not set
+# CONFIG_YELLOWFIN is not set
+CONFIG_NET_VENDOR_PENSANDO=y
+# CONFIG_IONIC is not set
+CONFIG_NET_VENDOR_QLOGIC=y
+# CONFIG_QLA3XXX is not set
+# CONFIG_QLCNIC is not set
+# CONFIG_NETXEN_NIC is not set
+# CONFIG_QED is not set
+CONFIG_NET_VENDOR_QUALCOMM=y
+# CONFIG_QCA7000_SPI is not set
+# CONFIG_QCA7000_UART is not set
+# CONFIG_QCOM_EMAC is not set
+# CONFIG_RMNET is not set
+CONFIG_NET_VENDOR_RDC=y
+# CONFIG_R6040 is not set
+CONFIG_NET_VENDOR_REALTEK=y
+# CONFIG_8139CP is not set
+# CONFIG_8139TOO is not set
+# CONFIG_R8169 is not set
+CONFIG_NET_VENDOR_RENESAS=y
+CONFIG_NET_VENDOR_ROCKER=y
+# CONFIG_ROCKER is not set
+CONFIG_NET_VENDOR_SAMSUNG=y
+# CONFIG_SXGBE_ETH is not set
+CONFIG_NET_VENDOR_SEEQ=y
+CONFIG_NET_VENDOR_SOLARFLARE=y
+# CONFIG_SFC is not set
+# CONFIG_SFC_FALCON is not set
+CONFIG_NET_VENDOR_SILAN=y
+# CONFIG_SC92031 is not set
+CONFIG_NET_VENDOR_SIS=y
+# CONFIG_SIS900 is not set
+# CONFIG_SIS190 is not set
+CONFIG_NET_VENDOR_SMSC=y
+# CONFIG_SMC91X is not set
+# CONFIG_EPIC100 is not set
+# CONFIG_SMSC911X is not set
+# CONFIG_SMSC9420 is not set
+CONFIG_NET_VENDOR_SOCIONEXT=y
+CONFIG_NET_VENDOR_STMICRO=y
+# CONFIG_STMMAC_ETH is not set
+CONFIG_NET_VENDOR_SUN=y
+# CONFIG_HAPPYMEAL is not set
+# CONFIG_SUNGEM is not set
+# CONFIG_CASSINI is not set
+# CONFIG_NIU is not set
+CONFIG_NET_VENDOR_SYNOPSYS=y
+# CONFIG_DWC_XLGMAC is not set
+CONFIG_NET_VENDOR_TEHUTI=y
+# CONFIG_TEHUTI is not set
+CONFIG_NET_VENDOR_TI=y
+# CONFIG_TI_CPSW_PHY_SEL is not set
+# CONFIG_TLAN is not set
+CONFIG_NET_VENDOR_VIA=y
+# CONFIG_VIA_RHINE is not set
+# CONFIG_VIA_VELOCITY is not set
+CONFIG_NET_VENDOR_WIZNET=y
+# CONFIG_WIZNET_W5100 is not set
+# CONFIG_WIZNET_W5300 is not set
+CONFIG_NET_VENDOR_XILINX=y
 CONFIG_XILINX_EMACLITE=y
 CONFIG_XILINX_AXI_EMAC=y
+# CONFIG_XILINX_AXI_EMAC_HWTSTAMP is not set
+# CONFIG_AXIENET_HAS_MCDMA is not set
+# CONFIG_XILINX_LL_TEMAC is not set
+# CONFIG_FDDI is not set
+# CONFIG_HIPPI is not set
+CONFIG_PHYLINK=y
+CONFIG_PHYLIB=y
+CONFIG_SWPHY=y
+# CONFIG_LED_TRIGGER_PHY is not set
+CONFIG_FIXED_PHY=y
+# CONFIG_SFP is not set
+
+#
+# MII PHY device drivers
+#
 CONFIG_AMD_PHY=y
+# CONFIG_ADIN_PHY is not set
+# CONFIG_AQUANTIA_PHY is not set
+CONFIG_AX88796B_PHY=y
 CONFIG_BROADCOM_PHY=y
+# CONFIG_BCM54140_PHY is not set
 CONFIG_BCM7XXX_PHY=y
+# CONFIG_BCM84881_PHY is not set
 CONFIG_BCM87XX_PHY=y
+CONFIG_BCM_NET_PHYLIB=y
 CONFIG_CICADA_PHY=y
+# CONFIG_CORTINA_PHY is not set
 CONFIG_DAVICOM_PHY=y
 CONFIG_ICPLUS_PHY=y
 CONFIG_LXT_PHY=y
+# CONFIG_INTEL_XWAY_PHY is not set
 CONFIG_LSI_ET1011C_PHY=y
 CONFIG_MARVELL_PHY=y
+# CONFIG_MARVELL_10G_PHY is not set
+# CONFIG_MARVELL_88X2222_PHY is not set
+# CONFIG_MAXLINEAR_GPHY is not set
+# CONFIG_MEDIATEK_GE_PHY is not set
 CONFIG_MICREL_PHY=y
+# CONFIG_MICROCHIP_PHY is not set
+# CONFIG_MICROCHIP_T1_PHY is not set
+# CONFIG_MICROSEMI_PHY is not set
+# CONFIG_MOTORCOMM_PHY is not set
 CONFIG_NATIONAL_PHY=y
+# CONFIG_NXP_C45_TJA11XX_PHY is not set
+# CONFIG_NXP_TJA11XX_PHY is not set
 CONFIG_AT803X_PHY=y
 CONFIG_QSEMI_PHY=y
 CONFIG_REALTEK_PHY=y
+# CONFIG_RENESAS_PHY is not set
+# CONFIG_ROCKCHIP_PHY is not set
 CONFIG_SMSC_PHY=y
 CONFIG_STE10XP=y
+# CONFIG_TERANETICS_PHY is not set
+# CONFIG_DP83822_PHY is not set
+# CONFIG_DP83TC811_PHY is not set
+# CONFIG_DP83848_PHY is not set
 CONFIG_DP83867_PHY=y
+# CONFIG_DP83869_PHY is not set
 CONFIG_VITESSE_PHY=y
+# CONFIG_XILINX_PHY is not set
 CONFIG_XILINX_GMII2RGMII=y
+# CONFIG_MICREL_KS8995MA is not set
+CONFIG_MDIO_DEVICE=y
+CONFIG_MDIO_BUS=y
+CONFIG_FWNODE_MDIO=y
+CONFIG_OF_MDIO=y
+CONFIG_MDIO_DEVRES=y
+# CONFIG_MDIO_BITBANG is not set
+# CONFIG_MDIO_BCM_UNIMAC is not set
+# CONFIG_MDIO_HISI_FEMAC is not set
+# CONFIG_MDIO_MVUSB is not set
+# CONFIG_MDIO_MSCC_MIIM is not set
+# CONFIG_MDIO_OCTEON is not set
+# CONFIG_MDIO_IPQ4019 is not set
+# CONFIG_MDIO_IPQ8064 is not set
+# CONFIG_MDIO_THUNDER is not set
+
+#
+# MDIO Multiplexers
+#
+# CONFIG_MDIO_BUS_MUX_GPIO is not set
+# CONFIG_MDIO_BUS_MUX_MULTIPLEXER is not set
+# CONFIG_MDIO_BUS_MUX_MMIOREG is not set
+
+#
+# PCS device drivers
+#
+# CONFIG_PCS_XPCS is not set
+# end of PCS device drivers
+
+# CONFIG_PPP is not set
+# CONFIG_SLIP is not set
+CONFIG_USB_NET_DRIVERS=y
+# CONFIG_USB_CATC is not set
+# CONFIG_USB_KAWETH is not set
+# CONFIG_USB_PEGASUS is not set
+# CONFIG_USB_RTL8150 is not set
+# CONFIG_USB_RTL8152 is not set
+# CONFIG_USB_LAN78XX is not set
 CONFIG_USB_USBNET=y
+CONFIG_USB_NET_AX8817X=y
+CONFIG_USB_NET_AX88179_178A=y
+CONFIG_USB_NET_CDCETHER=y
+# CONFIG_USB_NET_CDC_EEM is not set
+CONFIG_USB_NET_CDC_NCM=y
+# CONFIG_USB_NET_HUAWEI_CDC_NCM is not set
+# CONFIG_USB_NET_CDC_MBIM is not set
+# CONFIG_USB_NET_DM9601 is not set
+# CONFIG_USB_NET_SR9700 is not set
+# CONFIG_USB_NET_SR9800 is not set
+# CONFIG_USB_NET_SMSC75XX is not set
+# CONFIG_USB_NET_SMSC95XX is not set
+# CONFIG_USB_NET_GL620A is not set
+CONFIG_USB_NET_NET1080=y
+# CONFIG_USB_NET_PLUSB is not set
+# CONFIG_USB_NET_MCS7830 is not set
+# CONFIG_USB_NET_RNDIS_HOST is not set
+CONFIG_USB_NET_CDC_SUBSET_ENABLE=y
+CONFIG_USB_NET_CDC_SUBSET=y
+# CONFIG_USB_ALI_M5632 is not set
+# CONFIG_USB_AN2720 is not set
+CONFIG_USB_BELKIN=y
+CONFIG_USB_ARMLINUX=y
+# CONFIG_USB_EPSON2888 is not set
+# CONFIG_USB_KC2190 is not set
+CONFIG_USB_NET_ZAURUS=y
+# CONFIG_USB_NET_CX82310_ETH is not set
+# CONFIG_USB_NET_KALMIA is not set
+# CONFIG_USB_NET_QMI_WWAN is not set
+# CONFIG_USB_HSO is not set
+# CONFIG_USB_NET_INT51X1 is not set
+# CONFIG_USB_IPHETH is not set
+# CONFIG_USB_SIERRA_NET is not set
+# CONFIG_USB_VL600 is not set
+# CONFIG_USB_NET_CH9200 is not set
+# CONFIG_USB_NET_AQC111 is not set
+# CONFIG_USB_RTL8153_ECM is not set
+CONFIG_WLAN=y
+CONFIG_WLAN_VENDOR_ADMTEK=y
+# CONFIG_ADM8211 is not set
+CONFIG_WLAN_VENDOR_ATH=y
+# CONFIG_ATH_DEBUG is not set
+# CONFIG_ATH_REG_DYNAMIC_USER_REG_HINTS is not set
+# CONFIG_ATH5K is not set
+# CONFIG_ATH5K_PCI is not set
+# CONFIG_ATH9K is not set
+# CONFIG_ATH9K_HTC is not set
+# CONFIG_CARL9170 is not set
+# CONFIG_ATH6KL is not set
+# CONFIG_AR5523 is not set
+# CONFIG_WIL6210 is not set
+# CONFIG_ATH10K is not set
+# CONFIG_WCN36XX is not set
+CONFIG_WLAN_VENDOR_ATMEL=y
+# CONFIG_ATMEL is not set
+# CONFIG_AT76C50X_USB is not set
+CONFIG_WLAN_VENDOR_BROADCOM=y
+# CONFIG_B43 is not set
+# CONFIG_B43LEGACY is not set
+# CONFIG_BRCMSMAC is not set
+# CONFIG_BRCMFMAC is not set
+CONFIG_WLAN_VENDOR_CISCO=y
+CONFIG_WLAN_VENDOR_INTEL=y
+# CONFIG_IPW2100 is not set
+# CONFIG_IPW2200 is not set
+# CONFIG_IWL4965 is not set
+# CONFIG_IWL3945 is not set
+# CONFIG_IWLWIFI is not set
+CONFIG_WLAN_VENDOR_INTERSIL=y
+# CONFIG_HOSTAP is not set
+# CONFIG_HERMES is not set
+# CONFIG_P54_COMMON is not set
+CONFIG_WLAN_VENDOR_MARVELL=y
+# CONFIG_LIBERTAS is not set
+# CONFIG_LIBERTAS_THINFIRM is not set
+# CONFIG_MWIFIEX is not set
+# CONFIG_MWL8K is not set
+CONFIG_WLAN_VENDOR_MEDIATEK=y
+# CONFIG_MT7601U is not set
+# CONFIG_MT76x0U is not set
+# CONFIG_MT76x0E is not set
+# CONFIG_MT76x2E is not set
+# CONFIG_MT76x2U is not set
+# CONFIG_MT7603E is not set
+# CONFIG_MT7615E is not set
+# CONFIG_MT7663U is not set
+# CONFIG_MT7663S is not set
+# CONFIG_MT7915E is not set
+# CONFIG_MT7921E is not set
+CONFIG_WLAN_VENDOR_MICROCHIP=y
+# CONFIG_WILC1000_SDIO is not set
+# CONFIG_WILC1000_SPI is not set
+CONFIG_WLAN_VENDOR_RALINK=y
+# CONFIG_RT2X00 is not set
+CONFIG_WLAN_VENDOR_REALTEK=y
+# CONFIG_RTL8180 is not set
+# CONFIG_RTL8187 is not set
+CONFIG_RTL_CARDS=y
+# CONFIG_RTL8192CE is not set
+# CONFIG_RTL8192SE is not set
+# CONFIG_RTL8192DE is not set
+# CONFIG_RTL8723AE is not set
+# CONFIG_RTL8723BE is not set
+# CONFIG_RTL8188EE is not set
+# CONFIG_RTL8192EE is not set
+# CONFIG_RTL8821AE is not set
+# CONFIG_RTL8192CU is not set
+# CONFIG_RTL8XXXU is not set
+# CONFIG_RTW88 is not set
+CONFIG_WLAN_VENDOR_RSI=y
+# CONFIG_RSI_91X is not set
+CONFIG_WLAN_VENDOR_ST=y
+# CONFIG_CW1200 is not set
+CONFIG_WLAN_VENDOR_TI=y
+# CONFIG_WL1251 is not set
+# CONFIG_WL12XX is not set
 CONFIG_WL18XX=y
+CONFIG_WLCORE=y
 CONFIG_WLCORE_SPI=y
 CONFIG_WLCORE_SDIO=y
+CONFIG_WILINK_PLATFORM_DATA=y
+CONFIG_WLAN_VENDOR_ZYDAS=y
+# CONFIG_USB_ZD1201 is not set
+# CONFIG_ZD1211RW is not set
+CONFIG_WLAN_VENDOR_QUANTENNA=y
+# CONFIG_QTNFMAC_PCIE is not set
+# CONFIG_MAC80211_HWSIM is not set
+# CONFIG_USB_NET_RNDIS_WLAN is not set
+# CONFIG_VIRT_WIFI is not set
+# CONFIG_WAN is not set
+
+#
+# Wireless WAN
+#
+# CONFIG_WWAN is not set
+# end of Wireless WAN
+
+# CONFIG_VMXNET3 is not set
+# CONFIG_NETDEVSIM is not set
+# CONFIG_NET_FAILOVER is not set
+# CONFIG_ISDN is not set
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+CONFIG_INPUT_LEDS=y
+# CONFIG_INPUT_FF_MEMLESS is not set
+# CONFIG_INPUT_SPARSEKMAP is not set
+# CONFIG_INPUT_MATRIXKMAP is not set
+
+#
+# Userland interfaces
+#
+# CONFIG_INPUT_MOUSEDEV is not set
+# CONFIG_INPUT_JOYDEV is not set
 CONFIG_INPUT_EVDEV=y
+# CONFIG_INPUT_EVBUG is not set
+
+#
+# Input Device Drivers
+#
+CONFIG_INPUT_KEYBOARD=y
+# CONFIG_KEYBOARD_ADC is not set
+# CONFIG_KEYBOARD_ADP5588 is not set
+# CONFIG_KEYBOARD_ADP5589 is not set
+CONFIG_KEYBOARD_ATKBD=y
+# CONFIG_KEYBOARD_QT1050 is not set
+# CONFIG_KEYBOARD_QT1070 is not set
+# CONFIG_KEYBOARD_QT2160 is not set
+# CONFIG_KEYBOARD_DLINK_DIR685 is not set
+# CONFIG_KEYBOARD_LKKBD is not set
 CONFIG_KEYBOARD_GPIO=y
 CONFIG_KEYBOARD_GPIO_POLLED=y
+# CONFIG_KEYBOARD_TCA6416 is not set
+# CONFIG_KEYBOARD_TCA8418 is not set
+# CONFIG_KEYBOARD_MATRIX is not set
+# CONFIG_KEYBOARD_LM8323 is not set
+# CONFIG_KEYBOARD_LM8333 is not set
+# CONFIG_KEYBOARD_MAX7359 is not set
+# CONFIG_KEYBOARD_MCS is not set
+# CONFIG_KEYBOARD_MPR121 is not set
+# CONFIG_KEYBOARD_NEWTON is not set
+# CONFIG_KEYBOARD_OPENCORES is not set
+# CONFIG_KEYBOARD_SAMSUNG is not set
+# CONFIG_KEYBOARD_STOWAWAY is not set
+# CONFIG_KEYBOARD_SUNKBD is not set
+# CONFIG_KEYBOARD_OMAP4 is not set
+# CONFIG_KEYBOARD_TM2_TOUCHKEY is not set
+# CONFIG_KEYBOARD_XTKBD is not set
+# CONFIG_KEYBOARD_CAP11XX is not set
+# CONFIG_KEYBOARD_BCM is not set
+CONFIG_INPUT_MOUSE=y
+CONFIG_MOUSE_PS2=y
+CONFIG_MOUSE_PS2_ALPS=y
+CONFIG_MOUSE_PS2_BYD=y
+CONFIG_MOUSE_PS2_LOGIPS2PP=y
+CONFIG_MOUSE_PS2_SYNAPTICS=y
+CONFIG_MOUSE_PS2_SYNAPTICS_SMBUS=y
+CONFIG_MOUSE_PS2_CYPRESS=y
+CONFIG_MOUSE_PS2_TRACKPOINT=y
+# CONFIG_MOUSE_PS2_ELANTECH is not set
+# CONFIG_MOUSE_PS2_SENTELIC is not set
+# CONFIG_MOUSE_PS2_TOUCHKIT is not set
+CONFIG_MOUSE_PS2_FOCALTECH=y
+CONFIG_MOUSE_PS2_SMBUS=y
+# CONFIG_MOUSE_SERIAL is not set
+# CONFIG_MOUSE_APPLETOUCH is not set
+# CONFIG_MOUSE_BCM5974 is not set
+# CONFIG_MOUSE_CYAPA is not set
+# CONFIG_MOUSE_ELAN_I2C is not set
+# CONFIG_MOUSE_VSXXXAA is not set
+# CONFIG_MOUSE_GPIO is not set
+# CONFIG_MOUSE_SYNAPTICS_I2C is not set
+# CONFIG_MOUSE_SYNAPTICS_USB is not set
+# CONFIG_INPUT_JOYSTICK is not set
+# CONFIG_INPUT_TABLET is not set
+# CONFIG_INPUT_TOUCHSCREEN is not set
+# CONFIG_INPUT_MISC is not set
+# CONFIG_RMI4_CORE is not set
+
+#
+# Hardware I/O ports
+#
+CONFIG_SERIO=y
+CONFIG_SERIO_SERPORT=y
+# CONFIG_SERIO_AMBAKMI is not set
+# CONFIG_SERIO_PCIPS2 is not set
+CONFIG_SERIO_LIBPS2=y
+# CONFIG_SERIO_RAW is not set
+# CONFIG_SERIO_ALTERA_PS2 is not set
+# CONFIG_SERIO_PS2MULT is not set
+# CONFIG_SERIO_ARC_PS2 is not set
+# CONFIG_SERIO_APBPS2 is not set
+# CONFIG_SERIO_GPIO_PS2 is not set
+# CONFIG_USERIO is not set
+# CONFIG_GAMEPORT is not set
+# end of Hardware I/O ports
+# end of Input device support
+
+#
+# Character devices
+#
+CONFIG_TTY=y
+CONFIG_VT=y
+CONFIG_CONSOLE_TRANSLATIONS=y
+CONFIG_VT_CONSOLE=y
+CONFIG_VT_CONSOLE_SLEEP=y
+CONFIG_HW_CONSOLE=y
+CONFIG_VT_HW_CONSOLE_BINDING=y
+CONFIG_UNIX98_PTYS=y
+CONFIG_LEGACY_PTYS=y
+CONFIG_LEGACY_PTY_COUNT=256
+CONFIG_LDISC_AUTOLOAD=y
+
+#
+# Serial drivers
+#
+CONFIG_SERIAL_EARLYCON=y
 CONFIG_SERIAL_8250=y
+CONFIG_SERIAL_8250_DEPRECATED_OPTIONS=y
+CONFIG_SERIAL_8250_16550A_VARIANTS=y
+# CONFIG_SERIAL_8250_FINTEK is not set
 CONFIG_SERIAL_8250_CONSOLE=y
+CONFIG_SERIAL_8250_DMA=y
+CONFIG_SERIAL_8250_PCI=y
+CONFIG_SERIAL_8250_EXAR=y
+CONFIG_SERIAL_8250_NR_UARTS=4
+CONFIG_SERIAL_8250_RUNTIME_UARTS=4
+# CONFIG_SERIAL_8250_EXTENDED is not set
+# CONFIG_SERIAL_8250_ASPEED_VUART is not set
+CONFIG_SERIAL_8250_FSL=y
+# CONFIG_SERIAL_8250_DW is not set
+# CONFIG_SERIAL_8250_RT288X is not set
 CONFIG_SERIAL_OF_PLATFORM=y
+
+#
+# Non-8250 serial port support
+#
+# CONFIG_SERIAL_AMBA_PL010 is not set
+# CONFIG_SERIAL_AMBA_PL011 is not set
+# CONFIG_SERIAL_EARLYCON_ARM_SEMIHOST is not set
+# CONFIG_SERIAL_MAX3100 is not set
 CONFIG_SERIAL_MAX310X=y
 CONFIG_SERIAL_UARTLITE=y
 CONFIG_SERIAL_UARTLITE_CONSOLE=y
+CONFIG_SERIAL_UARTLITE_NR_UARTS=16
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_CORE_CONSOLE=y
+# CONFIG_SERIAL_JSM is not set
+# CONFIG_SERIAL_SIFIVE is not set
+# CONFIG_SERIAL_SCCNXP is not set
+# CONFIG_SERIAL_SC16IS7XX is not set
+# CONFIG_SERIAL_BCM63XX is not set
+# CONFIG_SERIAL_ALTERA_JTAGUART is not set
+# CONFIG_SERIAL_ALTERA_UART is not set
 CONFIG_SERIAL_XILINX_PS_UART=y
 CONFIG_SERIAL_XILINX_PS_UART_CONSOLE=y
+# CONFIG_SERIAL_ARC is not set
+# CONFIG_SERIAL_RP2 is not set
+# CONFIG_SERIAL_FSL_LPUART is not set
+# CONFIG_SERIAL_FSL_LINFLEXUART is not set
+# CONFIG_SERIAL_CONEXANT_DIGICOLOR is not set
+# CONFIG_SERIAL_SPRD is not set
+# end of Serial drivers
+
+CONFIG_SERIAL_MCTRL_GPIO=y
+# CONFIG_SERIAL_NONSTANDARD is not set
+# CONFIG_N_GSM is not set
+# CONFIG_NOZOMI is not set
+# CONFIG_NULL_TTY is not set
+# CONFIG_HVC_DCC is not set
 CONFIG_SERIAL_DEV_BUS=y
+CONFIG_SERIAL_DEV_CTRL_TTYPORT=y
+# CONFIG_TTY_PRINTK is not set
+# CONFIG_VIRTIO_CONSOLE is not set
+# CONFIG_IPMI_HANDLER is not set
+# CONFIG_IPMB_DEVICE_INTERFACE is not set
 # CONFIG_HW_RANDOM is not set
+# CONFIG_APPLICOM is not set
+CONFIG_DEVMEM=y
+CONFIG_DEVPORT=y
 CONFIG_TCG_TPM=y
+CONFIG_TCG_TIS_CORE=y
+# CONFIG_TCG_TIS is not set
 CONFIG_TCG_TIS_SPI=y
+# CONFIG_TCG_TIS_SPI_CR50 is not set
+# CONFIG_TCG_TIS_I2C_CR50 is not set
+# CONFIG_TCG_TIS_I2C_ATMEL is not set
+# CONFIG_TCG_TIS_I2C_INFINEON is not set
+# CONFIG_TCG_TIS_I2C_NUVOTON is not set
+# CONFIG_TCG_ATMEL is not set
+# CONFIG_TCG_VTPM_PROXY is not set
+# CONFIG_TCG_TIS_ST33ZP24_I2C is not set
+# CONFIG_TCG_TIS_ST33ZP24_SPI is not set
+# CONFIG_XILLYBUS is not set
+# CONFIG_XILLYUSB is not set
+# CONFIG_RANDOM_TRUST_CPU is not set
+# CONFIG_RANDOM_TRUST_BOOTLOADER is not set
+# end of Character devices
+
+#
+# I2C support
+#
+CONFIG_I2C=y
+CONFIG_I2C_BOARDINFO=y
+CONFIG_I2C_COMPAT=y
 CONFIG_I2C_CHARDEV=y
 CONFIG_I2C_MUX=y
+
+#
+# Multiplexer I2C Chip support
+#
+# CONFIG_I2C_ARB_GPIO_CHALLENGE is not set
+# CONFIG_I2C_MUX_GPIO is not set
+# CONFIG_I2C_MUX_GPMUX is not set
+# CONFIG_I2C_MUX_LTC4306 is not set
+# CONFIG_I2C_MUX_PCA9541 is not set
 CONFIG_I2C_MUX_PCA954x=y
+# CONFIG_I2C_MUX_PINCTRL is not set
+# CONFIG_I2C_MUX_REG is not set
+# CONFIG_I2C_DEMUX_PINCTRL is not set
+# CONFIG_I2C_MUX_MLXCPLD is not set
+# end of Multiplexer I2C Chip support
+
+CONFIG_I2C_HELPER_AUTO=y
+CONFIG_I2C_ALGOBIT=y
+
+#
+# I2C Hardware Bus support
+#
+
+#
+# PC SMBus host controller drivers
+#
+# CONFIG_I2C_ALI1535 is not set
+# CONFIG_I2C_ALI1563 is not set
+# CONFIG_I2C_ALI15X3 is not set
+# CONFIG_I2C_AMD756 is not set
+# CONFIG_I2C_AMD8111 is not set
+# CONFIG_I2C_I801 is not set
+# CONFIG_I2C_ISCH is not set
+# CONFIG_I2C_PIIX4 is not set
+# CONFIG_I2C_NFORCE2 is not set
+# CONFIG_I2C_NVIDIA_GPU is not set
+# CONFIG_I2C_SIS5595 is not set
+# CONFIG_I2C_SIS630 is not set
+# CONFIG_I2C_SIS96X is not set
+# CONFIG_I2C_VIA is not set
+# CONFIG_I2C_VIAPRO is not set
+
+#
+# I2C system bus drivers (mostly embedded / system-on-chip)
+#
 CONFIG_I2C_CADENCE=y
+# CONFIG_I2C_CBUS_GPIO is not set
+# CONFIG_I2C_DESIGNWARE_PLATFORM is not set
+# CONFIG_I2C_DESIGNWARE_PCI is not set
+# CONFIG_I2C_EMEV2 is not set
+# CONFIG_I2C_GPIO is not set
+# CONFIG_I2C_NOMADIK is not set
+# CONFIG_I2C_OCORES is not set
+# CONFIG_I2C_PCA_PLATFORM is not set
+# CONFIG_I2C_RK3X is not set
+# CONFIG_I2C_SIMTEC is not set
+# CONFIG_I2C_THUNDERX is not set
 CONFIG_I2C_XILINX=y
+
+#
+# External I2C/SMBus adapter drivers
+#
+# CONFIG_I2C_DIOLAN_U2C is not set
+# CONFIG_I2C_CP2615 is not set
+# CONFIG_I2C_ROBOTFUZZ_OSIF is not set
+# CONFIG_I2C_TAOS_EVM is not set
+# CONFIG_I2C_TINY_USB is not set
+
+#
+# Other I2C/SMBus bus drivers
+#
+# CONFIG_I2C_VIRTIO is not set
+# end of I2C Hardware Bus support
+
+# CONFIG_I2C_STUB is not set
 CONFIG_I2C_SLAVE=y
 CONFIG_I2C_SLAVE_EEPROM=y
+# CONFIG_I2C_SLAVE_TESTUNIT is not set
+# CONFIG_I2C_DEBUG_CORE is not set
+# CONFIG_I2C_DEBUG_ALGO is not set
+# CONFIG_I2C_DEBUG_BUS is not set
+# end of I2C support
+
+# CONFIG_I3C is not set
 CONFIG_SPI=y
+# CONFIG_SPI_DEBUG is not set
+CONFIG_SPI_MASTER=y
+CONFIG_SPI_MEM=y
+
+#
+# SPI Master Controller Drivers
+#
+# CONFIG_SPI_ALTERA is not set
+# CONFIG_SPI_AXI_SPI_ENGINE is not set
+CONFIG_SPI_BITBANG=y
 CONFIG_SPI_CADENCE=y
+# CONFIG_SPI_CADENCE_QUADSPI is not set
+# CONFIG_SPI_DESIGNWARE is not set
+# CONFIG_SPI_NXP_FLEXSPI is not set
+# CONFIG_SPI_GPIO is not set
+# CONFIG_SPI_FSL_SPI is not set
+# CONFIG_SPI_OC_TINY is not set
+# CONFIG_SPI_PL022 is not set
+# CONFIG_SPI_PXA2XX is not set
+# CONFIG_SPI_ROCKCHIP is not set
+# CONFIG_SPI_SC18IS602 is not set
+# CONFIG_SPI_SIFIVE is not set
+# CONFIG_SPI_MXIC is not set
+# CONFIG_SPI_THUNDERX is not set
+# CONFIG_SPI_XCOMM is not set
 CONFIG_SPI_XILINX=y
 CONFIG_SPI_ZYNQMP_GQSPI=y
+# CONFIG_SPI_AMD is not set
+
+#
+# SPI Multiplexer support
+#
+# CONFIG_SPI_MUX is not set
+
+#
+# SPI Protocol Masters
+#
+# CONFIG_SPI_SPIDEV is not set
+# CONFIG_SPI_LOOPBACK_TEST is not set
+# CONFIG_SPI_TLE62X0 is not set
+# CONFIG_SPI_SLAVE is not set
+CONFIG_SPI_DYNAMIC=y
+# CONFIG_SPMI is not set
+# CONFIG_HSI is not set
+CONFIG_PPS=y
+# CONFIG_PPS_DEBUG is not set
+
+#
+# PPS clients support
+#
+# CONFIG_PPS_CLIENT_KTIMER is not set
+# CONFIG_PPS_CLIENT_LDISC is not set
+# CONFIG_PPS_CLIENT_GPIO is not set
+
+#
+# PPS generators support
+#
+
+#
+# PTP clock support
+#
+CONFIG_PTP_1588_CLOCK=y
+CONFIG_PTP_1588_CLOCK_OPTIONAL=y
+
+#
+# Enable PHYLIB and NETWORK_PHY_TIMESTAMPING to see the additional clocks.
+#
+CONFIG_PTP_1588_CLOCK_KVM=y
+# CONFIG_PTP_1588_CLOCK_IDT82P33 is not set
+# CONFIG_PTP_1588_CLOCK_IDTCM is not set
+# CONFIG_PTP_1588_CLOCK_XILINX is not set
+# CONFIG_PTP_1588_CLOCK_OCP is not set
+# end of PTP clock support
+
 CONFIG_PINCTRL=y
+CONFIG_PINMUX=y
+CONFIG_PINCONF=y
+CONFIG_GENERIC_PINCONF=y
+# CONFIG_DEBUG_PINCTRL is not set
+# CONFIG_PINCTRL_MCP23S08 is not set
+# CONFIG_PINCTRL_SINGLE is not set
+# CONFIG_PINCTRL_SX150X is not set
+# CONFIG_PINCTRL_STMFX is not set
+CONFIG_PINCTRL_ZYNQMP=y
+# CONFIG_PINCTRL_OCELOT is not set
+# CONFIG_PINCTRL_MICROCHIP_SGPIO is not set
+
+#
+# Renesas pinctrl drivers
+#
+# end of Renesas pinctrl drivers
+
 CONFIG_GPIOLIB=y
+CONFIG_GPIOLIB_FASTPATH_LIMIT=512
+CONFIG_OF_GPIO=y
+CONFIG_GPIOLIB_IRQCHIP=y
+# CONFIG_DEBUG_GPIO is not set
 CONFIG_GPIO_SYSFS=y
+CONFIG_GPIO_CDEV=y
+CONFIG_GPIO_CDEV_V1=y
+
+#
+# Memory mapped GPIO drivers
+#
+# CONFIG_GPIO_74XX_MMIO is not set
+# CONFIG_GPIO_ALTERA is not set
+# CONFIG_GPIO_CADENCE is not set
+# CONFIG_GPIO_DWAPB is not set
+# CONFIG_GPIO_EXAR is not set
+# CONFIG_GPIO_FTGPIO010 is not set
+# CONFIG_GPIO_GENERIC_PLATFORM is not set
+# CONFIG_GPIO_GRGPIO is not set
+# CONFIG_GPIO_HLWD is not set
+# CONFIG_GPIO_LOGICVC is not set
+# CONFIG_GPIO_MB86S7X is not set
+# CONFIG_GPIO_PL061 is not set
+# CONFIG_GPIO_SAMA5D2_PIOBU is not set
+# CONFIG_GPIO_SIFIVE is not set
+# CONFIG_GPIO_SYSCON is not set
+# CONFIG_GPIO_XGENE is not set
 CONFIG_GPIO_XILINX=y
 CONFIG_GPIO_ZYNQ=y
+CONFIG_GPIO_ZYNQMP_MODEPIN=y
+# CONFIG_GPIO_AMD_FCH is not set
+# end of Memory mapped GPIO drivers
+
+#
+# I2C GPIO expanders
+#
+# CONFIG_GPIO_ADP5588 is not set
+# CONFIG_GPIO_ADNP is not set
+# CONFIG_GPIO_GW_PLD is not set
+# CONFIG_GPIO_MAX7300 is not set
+# CONFIG_GPIO_MAX732X is not set
 CONFIG_GPIO_PCA953X=y
+# CONFIG_GPIO_PCA953X_IRQ is not set
+# CONFIG_GPIO_PCA9570 is not set
+# CONFIG_GPIO_PCF857X is not set
 CONFIG_GPIO_SLG7XL45106=y
+# CONFIG_GPIO_TPIC2810 is not set
+# end of I2C GPIO expanders
+
+#
+# MFD GPIO expanders
+#
 CONFIG_GPIO_TPS65086=y
+# end of MFD GPIO expanders
+
+#
+# PCI GPIO expanders
+#
+# CONFIG_GPIO_BT8XX is not set
+# CONFIG_GPIO_PCI_IDIO_16 is not set
+# CONFIG_GPIO_PCIE_IDIO_24 is not set
+# CONFIG_GPIO_RDC321X is not set
+# end of PCI GPIO expanders
+
+#
+# SPI GPIO expanders
+#
+# CONFIG_GPIO_74X164 is not set
+# CONFIG_GPIO_MAX3191X is not set
+# CONFIG_GPIO_MAX7301 is not set
+# CONFIG_GPIO_MC33880 is not set
+# CONFIG_GPIO_PISOSR is not set
+# CONFIG_GPIO_XRA1403 is not set
+# end of SPI GPIO expanders
+
+#
+# USB GPIO expanders
+#
+# end of USB GPIO expanders
+
+#
+# Virtual GPIO drivers
+#
+# CONFIG_GPIO_AGGREGATOR is not set
+# CONFIG_GPIO_MOCKUP is not set
+# CONFIG_GPIO_VIRTIO is not set
+# end of Virtual GPIO drivers
+
+# CONFIG_W1 is not set
+CONFIG_POWER_RESET=y
+# CONFIG_POWER_RESET_BRCMSTB is not set
+# CONFIG_POWER_RESET_GPIO is not set
+# CONFIG_POWER_RESET_GPIO_RESTART is not set
 CONFIG_POWER_RESET_LTC2952=y
+# CONFIG_POWER_RESET_REGULATOR is not set
+# CONFIG_POWER_RESET_RESTART is not set
+# CONFIG_POWER_RESET_TPS65086 is not set
+# CONFIG_POWER_RESET_XGENE is not set
+# CONFIG_POWER_RESET_SYSCON is not set
+# CONFIG_POWER_RESET_SYSCON_POWEROFF is not set
+# CONFIG_SYSCON_REBOOT_MODE is not set
+# CONFIG_NVMEM_REBOOT_MODE is not set
+CONFIG_POWER_SUPPLY=y
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+CONFIG_POWER_SUPPLY_HWMON=y
+# CONFIG_PDA_POWER is not set
+# CONFIG_GENERIC_ADC_BATTERY is not set
+# CONFIG_TEST_POWER is not set
+# CONFIG_CHARGER_ADP5061 is not set
+# CONFIG_BATTERY_CW2015 is not set
+# CONFIG_BATTERY_DS2780 is not set
+# CONFIG_BATTERY_DS2781 is not set
+# CONFIG_BATTERY_DS2782 is not set
+# CONFIG_BATTERY_SBS is not set
+# CONFIG_CHARGER_SBS is not set
+# CONFIG_MANAGER_SBS is not set
+# CONFIG_BATTERY_BQ27XXX is not set
+# CONFIG_BATTERY_MAX17040 is not set
+# CONFIG_BATTERY_MAX17042 is not set
+# CONFIG_CHARGER_ISP1704 is not set
+# CONFIG_CHARGER_MAX8903 is not set
+# CONFIG_CHARGER_LP8727 is not set
+# CONFIG_CHARGER_GPIO is not set
+# CONFIG_CHARGER_MANAGER is not set
+# CONFIG_CHARGER_LT3651 is not set
+# CONFIG_CHARGER_LTC4162L is not set
+# CONFIG_CHARGER_DETECTOR_MAX14656 is not set
+# CONFIG_CHARGER_BQ2415X is not set
+# CONFIG_CHARGER_BQ24190 is not set
+# CONFIG_CHARGER_BQ24257 is not set
+# CONFIG_CHARGER_BQ24735 is not set
+# CONFIG_CHARGER_BQ2515X is not set
+# CONFIG_CHARGER_BQ25890 is not set
+# CONFIG_CHARGER_BQ25980 is not set
+# CONFIG_CHARGER_BQ256XX is not set
+# CONFIG_CHARGER_SMB347 is not set
+# CONFIG_BATTERY_GAUGE_LTC2941 is not set
+# CONFIG_BATTERY_GOLDFISH is not set
+# CONFIG_BATTERY_RT5033 is not set
+# CONFIG_CHARGER_RT9455 is not set
+# CONFIG_CHARGER_UCS1002 is not set
+# CONFIG_CHARGER_BD99954 is not set
+CONFIG_HWMON=y
+# CONFIG_HWMON_DEBUG_CHIP is not set
+
+#
+# Native drivers
+#
+# CONFIG_SENSORS_AD7314 is not set
+# CONFIG_SENSORS_AD7414 is not set
+# CONFIG_SENSORS_AD7418 is not set
+# CONFIG_SENSORS_ADM1021 is not set
+# CONFIG_SENSORS_ADM1025 is not set
+# CONFIG_SENSORS_ADM1026 is not set
+# CONFIG_SENSORS_ADM1029 is not set
+# CONFIG_SENSORS_ADM1031 is not set
+# CONFIG_SENSORS_ADM1177 is not set
+# CONFIG_SENSORS_ADM9240 is not set
+# CONFIG_SENSORS_ADT7310 is not set
+# CONFIG_SENSORS_ADT7410 is not set
+# CONFIG_SENSORS_ADT7411 is not set
+# CONFIG_SENSORS_ADT7462 is not set
+# CONFIG_SENSORS_ADT7470 is not set
+# CONFIG_SENSORS_ADT7475 is not set
+# CONFIG_SENSORS_AHT10 is not set
+# CONFIG_SENSORS_AQUACOMPUTER_D5NEXT is not set
+# CONFIG_SENSORS_AS370 is not set
+# CONFIG_SENSORS_ASC7621 is not set
+# CONFIG_SENSORS_AXI_FAN_CONTROL is not set
+# CONFIG_SENSORS_ASPEED is not set
+# CONFIG_SENSORS_ATXP1 is not set
+# CONFIG_SENSORS_CORSAIR_CPRO is not set
+# CONFIG_SENSORS_CORSAIR_PSU is not set
+# CONFIG_SENSORS_DRIVETEMP is not set
+# CONFIG_SENSORS_DS620 is not set
+# CONFIG_SENSORS_DS1621 is not set
+# CONFIG_SENSORS_I5K_AMB is not set
+# CONFIG_SENSORS_F71805F is not set
+# CONFIG_SENSORS_F71882FG is not set
+# CONFIG_SENSORS_F75375S is not set
+# CONFIG_SENSORS_FTSTEUTATES is not set
+# CONFIG_SENSORS_GL518SM is not set
+# CONFIG_SENSORS_GL520SM is not set
+# CONFIG_SENSORS_G760A is not set
+# CONFIG_SENSORS_G762 is not set
+# CONFIG_SENSORS_GPIO_FAN is not set
+# CONFIG_SENSORS_HIH6130 is not set
 CONFIG_SENSORS_IIO_HWMON=y
+# CONFIG_SENSORS_IT87 is not set
+# CONFIG_SENSORS_JC42 is not set
+# CONFIG_SENSORS_POWR1220 is not set
+# CONFIG_SENSORS_LINEAGE is not set
+# CONFIG_SENSORS_LTC2945 is not set
+# CONFIG_SENSORS_LTC2947_I2C is not set
+# CONFIG_SENSORS_LTC2947_SPI is not set
+# CONFIG_SENSORS_LTC2990 is not set
+# CONFIG_SENSORS_LTC2992 is not set
+# CONFIG_SENSORS_LTC4151 is not set
+# CONFIG_SENSORS_LTC4215 is not set
+# CONFIG_SENSORS_LTC4222 is not set
+# CONFIG_SENSORS_LTC4245 is not set
+# CONFIG_SENSORS_LTC4260 is not set
+# CONFIG_SENSORS_LTC4261 is not set
+# CONFIG_SENSORS_MAX1111 is not set
+# CONFIG_SENSORS_MAX127 is not set
+# CONFIG_SENSORS_MAX16065 is not set
+# CONFIG_SENSORS_MAX1619 is not set
+# CONFIG_SENSORS_MAX1668 is not set
+# CONFIG_SENSORS_MAX197 is not set
+# CONFIG_SENSORS_MAX31722 is not set
+# CONFIG_SENSORS_MAX31730 is not set
+# CONFIG_SENSORS_MAX6621 is not set
+# CONFIG_SENSORS_MAX6639 is not set
+# CONFIG_SENSORS_MAX6642 is not set
+# CONFIG_SENSORS_MAX6650 is not set
+# CONFIG_SENSORS_MAX6697 is not set
+# CONFIG_SENSORS_MAX31790 is not set
+# CONFIG_SENSORS_MCP3021 is not set
+# CONFIG_SENSORS_TC654 is not set
+# CONFIG_SENSORS_TPS23861 is not set
+# CONFIG_SENSORS_MR75203 is not set
+# CONFIG_SENSORS_ADCXX is not set
 CONFIG_SENSORS_LM63=y
+# CONFIG_SENSORS_LM70 is not set
+# CONFIG_SENSORS_LM73 is not set
+# CONFIG_SENSORS_LM75 is not set
+# CONFIG_SENSORS_LM77 is not set
+# CONFIG_SENSORS_LM78 is not set
+# CONFIG_SENSORS_LM80 is not set
+# CONFIG_SENSORS_LM83 is not set
+# CONFIG_SENSORS_LM85 is not set
+# CONFIG_SENSORS_LM87 is not set
+# CONFIG_SENSORS_LM90 is not set
+# CONFIG_SENSORS_LM92 is not set
+# CONFIG_SENSORS_LM93 is not set
+# CONFIG_SENSORS_LM95234 is not set
+# CONFIG_SENSORS_LM95241 is not set
+# CONFIG_SENSORS_LM95245 is not set
+# CONFIG_SENSORS_PC87360 is not set
+# CONFIG_SENSORS_PC87427 is not set
+# CONFIG_SENSORS_NTC_THERMISTOR is not set
+# CONFIG_SENSORS_NCT6683 is not set
+# CONFIG_SENSORS_NCT6775 is not set
+# CONFIG_SENSORS_NCT7802 is not set
+# CONFIG_SENSORS_NCT7904 is not set
+# CONFIG_SENSORS_NPCM7XX is not set
+# CONFIG_SENSORS_NZXT_KRAKEN2 is not set
+# CONFIG_SENSORS_OCC_P8_I2C is not set
+# CONFIG_SENSORS_PCF8591 is not set
 CONFIG_PMBUS=y
+CONFIG_SENSORS_PMBUS=y
+# CONFIG_SENSORS_ADM1266 is not set
+# CONFIG_SENSORS_ADM1275 is not set
+# CONFIG_SENSORS_BEL_PFE is not set
+# CONFIG_SENSORS_BPA_RS600 is not set
+# CONFIG_SENSORS_FSP_3Y is not set
+# CONFIG_SENSORS_IBM_CFFPS is not set
+# CONFIG_SENSORS_DPS920AB is not set
+# CONFIG_SENSORS_INSPUR_IPSPS is not set
+# CONFIG_SENSORS_IR35221 is not set
+# CONFIG_SENSORS_IR36021 is not set
+# CONFIG_SENSORS_IR38064 is not set
 CONFIG_SENSORS_IRPS5401=y
+# CONFIG_SENSORS_ISL68137 is not set
+# CONFIG_SENSORS_LM25066 is not set
+# CONFIG_SENSORS_LTC2978 is not set
+# CONFIG_SENSORS_LTC3815 is not set
+# CONFIG_SENSORS_MAX15301 is not set
+# CONFIG_SENSORS_MAX16064 is not set
+# CONFIG_SENSORS_MAX16601 is not set
+# CONFIG_SENSORS_MAX20730 is not set
 CONFIG_SENSORS_MAX20751=y
+# CONFIG_SENSORS_MAX31785 is not set
+# CONFIG_SENSORS_MAX34440 is not set
+# CONFIG_SENSORS_MAX8688 is not set
+# CONFIG_SENSORS_MP2888 is not set
+# CONFIG_SENSORS_MP2975 is not set
+# CONFIG_SENSORS_PIM4328 is not set
+# CONFIG_SENSORS_PM6764TR is not set
+# CONFIG_SENSORS_PXE1610 is not set
+# CONFIG_SENSORS_Q54SJ108A2 is not set
+# CONFIG_SENSORS_STPDDC60 is not set
+# CONFIG_SENSORS_TPS40422 is not set
+# CONFIG_SENSORS_TPS53679 is not set
+# CONFIG_SENSORS_TPS544 is not set
+# CONFIG_SENSORS_UCD9000 is not set
+# CONFIG_SENSORS_UCD9200 is not set
+# CONFIG_SENSORS_XDPE122 is not set
+# CONFIG_SENSORS_ZL6100 is not set
 CONFIG_SENSORS_PWM_FAN=y
+# CONFIG_SENSORS_SBTSI is not set
+# CONFIG_SENSORS_SBRMI is not set
+# CONFIG_SENSORS_SHT15 is not set
+# CONFIG_SENSORS_SHT21 is not set
+# CONFIG_SENSORS_SHT3x is not set
+# CONFIG_SENSORS_SHT4x is not set
+# CONFIG_SENSORS_SHTC1 is not set
+# CONFIG_SENSORS_SIS5595 is not set
+# CONFIG_SENSORS_DME1737 is not set
+# CONFIG_SENSORS_EMC1403 is not set
+# CONFIG_SENSORS_EMC2103 is not set
+# CONFIG_SENSORS_EMC6W201 is not set
+# CONFIG_SENSORS_SMSC47M1 is not set
+# CONFIG_SENSORS_SMSC47M192 is not set
+# CONFIG_SENSORS_SMSC47B397 is not set
+# CONFIG_SENSORS_SCH5627 is not set
+# CONFIG_SENSORS_SCH5636 is not set
+# CONFIG_SENSORS_STTS751 is not set
+# CONFIG_SENSORS_SMM665 is not set
+# CONFIG_SENSORS_ADC128D818 is not set
+# CONFIG_SENSORS_ADS7828 is not set
+# CONFIG_SENSORS_ADS7871 is not set
+# CONFIG_SENSORS_AMC6821 is not set
+# CONFIG_SENSORS_INA209 is not set
+# CONFIG_SENSORS_INA2XX is not set
+# CONFIG_SENSORS_INA3221 is not set
+# CONFIG_SENSORS_TC74 is not set
+# CONFIG_SENSORS_THMC50 is not set
+# CONFIG_SENSORS_TMP102 is not set
+# CONFIG_SENSORS_TMP103 is not set
+# CONFIG_SENSORS_TMP108 is not set
+# CONFIG_SENSORS_TMP401 is not set
+# CONFIG_SENSORS_TMP421 is not set
+# CONFIG_SENSORS_TMP513 is not set
+# CONFIG_SENSORS_VIA686A is not set
+# CONFIG_SENSORS_VT1211 is not set
+# CONFIG_SENSORS_VT8231 is not set
+# CONFIG_SENSORS_W83773G is not set
+# CONFIG_SENSORS_W83781D is not set
+# CONFIG_SENSORS_W83791D is not set
+# CONFIG_SENSORS_W83792D is not set
+# CONFIG_SENSORS_W83793 is not set
+# CONFIG_SENSORS_W83795 is not set
+# CONFIG_SENSORS_W83L785TS is not set
+# CONFIG_SENSORS_W83L786NG is not set
+# CONFIG_SENSORS_W83627HF is not set
+# CONFIG_SENSORS_W83627EHF is not set
+# CONFIG_THERMAL is not set
 CONFIG_WATCHDOG=y
+CONFIG_WATCHDOG_CORE=y
+# CONFIG_WATCHDOG_NOWAYOUT is not set
+CONFIG_WATCHDOG_HANDLE_BOOT_ENABLED=y
+CONFIG_WATCHDOG_OPEN_TIMEOUT=0
+# CONFIG_WATCHDOG_SYSFS is not set
+# CONFIG_WATCHDOG_HRTIMER_PRETIMEOUT is not set
+
+#
+# Watchdog Pretimeout Governors
+#
+# CONFIG_WATCHDOG_PRETIMEOUT_GOV is not set
+
+#
+# Watchdog Device Drivers
+#
+# CONFIG_SOFT_WATCHDOG is not set
+# CONFIG_GPIO_WATCHDOG is not set
 CONFIG_XILINX_WATCHDOG=y
+# CONFIG_ZIIRAVE_WATCHDOG is not set
+# CONFIG_ARM_SP805_WATCHDOG is not set
+# CONFIG_ARM_SBSA_WATCHDOG is not set
 CONFIG_CADENCE_WATCHDOG=y
+# CONFIG_DW_WATCHDOG is not set
+# CONFIG_MAX63XX_WATCHDOG is not set
+# CONFIG_ARM_SMC_WATCHDOG is not set
+# CONFIG_ALIM7101_WDT is not set
+# CONFIG_I6300ESB_WDT is not set
+# CONFIG_MEN_A21_WDT is not set
+
+#
+# PCI-based Watchdog Cards
+#
+# CONFIG_PCIPCWATCHDOG is not set
+# CONFIG_WDTPCI is not set
+
+#
+# USB-based Watchdog Cards
+#
+# CONFIG_USBPCWATCHDOG is not set
+CONFIG_SSB_POSSIBLE=y
+# CONFIG_SSB is not set
+CONFIG_BCMA_POSSIBLE=y
+# CONFIG_BCMA is not set
+
+#
+# Multifunction device drivers
+#
+CONFIG_MFD_CORE=y
+# CONFIG_MFD_ACT8945A is not set
+# CONFIG_MFD_AS3711 is not set
+# CONFIG_MFD_AS3722 is not set
+# CONFIG_PMIC_ADP5520 is not set
+# CONFIG_MFD_AAT2870_CORE is not set
+# CONFIG_MFD_ATMEL_FLEXCOM is not set
+# CONFIG_MFD_ATMEL_HLCDC is not set
+# CONFIG_MFD_BCM590XX is not set
+# CONFIG_MFD_BD9571MWV is not set
+# CONFIG_MFD_AXP20X_I2C is not set
+# CONFIG_MFD_MADERA is not set
+# CONFIG_PMIC_DA903X is not set
+# CONFIG_MFD_DA9052_SPI is not set
+# CONFIG_MFD_DA9052_I2C is not set
+# CONFIG_MFD_DA9055 is not set
+# CONFIG_MFD_DA9062 is not set
+# CONFIG_MFD_DA9063 is not set
+# CONFIG_MFD_DA9150 is not set
+# CONFIG_MFD_DLN2 is not set
+# CONFIG_MFD_GATEWORKS_GSC is not set
+# CONFIG_MFD_MC13XXX_SPI is not set
+# CONFIG_MFD_MC13XXX_I2C is not set
+# CONFIG_MFD_MP2629 is not set
+# CONFIG_MFD_HI6421_PMIC is not set
+# CONFIG_HTC_PASIC3 is not set
+# CONFIG_HTC_I2CPLD is not set
+# CONFIG_LPC_ICH is not set
+# CONFIG_LPC_SCH is not set
+# CONFIG_MFD_INTEL_PMT is not set
+# CONFIG_MFD_IQS62X is not set
+# CONFIG_MFD_JANZ_CMODIO is not set
+# CONFIG_MFD_KEMPLD is not set
+# CONFIG_MFD_88PM800 is not set
+# CONFIG_MFD_88PM805 is not set
+# CONFIG_MFD_88PM860X is not set
+# CONFIG_MFD_MAX14577 is not set
+# CONFIG_MFD_MAX77620 is not set
+# CONFIG_MFD_MAX77650 is not set
+# CONFIG_MFD_MAX77686 is not set
+# CONFIG_MFD_MAX77693 is not set
+# CONFIG_MFD_MAX77843 is not set
+# CONFIG_MFD_MAX8907 is not set
+# CONFIG_MFD_MAX8925 is not set
+# CONFIG_MFD_MAX8997 is not set
+# CONFIG_MFD_MAX8998 is not set
+# CONFIG_MFD_MT6360 is not set
+# CONFIG_MFD_MT6397 is not set
+# CONFIG_MFD_MENF21BMC is not set
+# CONFIG_EZX_PCAP is not set
+# CONFIG_MFD_CPCAP is not set
+# CONFIG_MFD_VIPERBOARD is not set
+# CONFIG_MFD_NTXEC is not set
+# CONFIG_MFD_RETU is not set
+# CONFIG_MFD_PCF50633 is not set
+# CONFIG_MFD_RDC321X is not set
+# CONFIG_MFD_RT4831 is not set
+# CONFIG_MFD_RT5033 is not set
+# CONFIG_MFD_RC5T583 is not set
+# CONFIG_MFD_RK808 is not set
+# CONFIG_MFD_RN5T618 is not set
+# CONFIG_MFD_SEC_CORE is not set
+# CONFIG_MFD_SI476X_CORE is not set
+# CONFIG_MFD_SM501 is not set
+# CONFIG_MFD_SKY81452 is not set
+# CONFIG_MFD_STMPE is not set
+CONFIG_MFD_SYSCON=y
+# CONFIG_MFD_TI_AM335X_TSCADC is not set
+# CONFIG_MFD_LP3943 is not set
+# CONFIG_MFD_LP8788 is not set
+# CONFIG_MFD_TI_LMU is not set
+# CONFIG_MFD_PALMAS is not set
+# CONFIG_TPS6105X is not set
+# CONFIG_TPS65010 is not set
+# CONFIG_TPS6507X is not set
 CONFIG_MFD_TPS65086=y
+# CONFIG_MFD_TPS65090 is not set
+# CONFIG_MFD_TPS65217 is not set
+# CONFIG_MFD_TI_LP873X is not set
+# CONFIG_MFD_TI_LP87565 is not set
+# CONFIG_MFD_TPS65218 is not set
+# CONFIG_MFD_TPS6586X is not set
+# CONFIG_MFD_TPS65910 is not set
+# CONFIG_MFD_TPS65912_I2C is not set
+# CONFIG_MFD_TPS65912_SPI is not set
+# CONFIG_MFD_TPS80031 is not set
+# CONFIG_TWL4030_CORE is not set
+# CONFIG_TWL6040_CORE is not set
+# CONFIG_MFD_WL1273_CORE is not set
+# CONFIG_MFD_LM3533 is not set
+# CONFIG_MFD_TC3589X is not set
+# CONFIG_MFD_TQMX86 is not set
+# CONFIG_MFD_VX855 is not set
+# CONFIG_MFD_LOCHNAGAR is not set
+# CONFIG_MFD_ARIZONA_I2C is not set
+# CONFIG_MFD_ARIZONA_SPI is not set
+# CONFIG_MFD_WM8400 is not set
+# CONFIG_MFD_WM831X_I2C is not set
+# CONFIG_MFD_WM831X_SPI is not set
+# CONFIG_MFD_WM8350_I2C is not set
+# CONFIG_MFD_WM8994 is not set
+# CONFIG_MFD_ROHM_BD718XX is not set
+# CONFIG_MFD_ROHM_BD70528 is not set
+# CONFIG_MFD_ROHM_BD71828 is not set
+# CONFIG_MFD_ROHM_BD957XMUF is not set
+# CONFIG_MFD_STPMIC1 is not set
+# CONFIG_MFD_STMFX is not set
+# CONFIG_MFD_ATC260X_I2C is not set
+# CONFIG_MFD_QCOM_PM8008 is not set
+# CONFIG_RAVE_SP_CORE is not set
+# CONFIG_MFD_INTEL_M10_BMC is not set
+# CONFIG_MFD_RSMU_I2C is not set
+# CONFIG_MFD_RSMU_SPI is not set
+# end of Multifunction device drivers
+
 CONFIG_REGULATOR=y
+# CONFIG_REGULATOR_DEBUG is not set
 CONFIG_REGULATOR_FIXED_VOLTAGE=y
+# CONFIG_REGULATOR_VIRTUAL_CONSUMER is not set
+# CONFIG_REGULATOR_USERSPACE_CONSUMER is not set
+# CONFIG_REGULATOR_88PG86X is not set
+# CONFIG_REGULATOR_ACT8865 is not set
+# CONFIG_REGULATOR_AD5398 is not set
+# CONFIG_REGULATOR_DA9121 is not set
+# CONFIG_REGULATOR_DA9210 is not set
+# CONFIG_REGULATOR_DA9211 is not set
+# CONFIG_REGULATOR_FAN53555 is not set
+# CONFIG_REGULATOR_FAN53880 is not set
 CONFIG_REGULATOR_GPIO=y
+# CONFIG_REGULATOR_ISL9305 is not set
+# CONFIG_REGULATOR_ISL6271A is not set
+# CONFIG_REGULATOR_LP3971 is not set
+# CONFIG_REGULATOR_LP3972 is not set
+# CONFIG_REGULATOR_LP872X is not set
+# CONFIG_REGULATOR_LP8755 is not set
+# CONFIG_REGULATOR_LTC3589 is not set
+# CONFIG_REGULATOR_LTC3676 is not set
+# CONFIG_REGULATOR_MAX1586 is not set
+# CONFIG_REGULATOR_MAX8649 is not set
+# CONFIG_REGULATOR_MAX8660 is not set
+# CONFIG_REGULATOR_MAX8893 is not set
+# CONFIG_REGULATOR_MAX8952 is not set
+# CONFIG_REGULATOR_MAX77826 is not set
+# CONFIG_REGULATOR_MCP16502 is not set
+# CONFIG_REGULATOR_MP5416 is not set
+# CONFIG_REGULATOR_MP8859 is not set
+# CONFIG_REGULATOR_MP886X is not set
+# CONFIG_REGULATOR_MPQ7920 is not set
+# CONFIG_REGULATOR_MT6311 is not set
+# CONFIG_REGULATOR_PCA9450 is not set
+# CONFIG_REGULATOR_PF8X00 is not set
+# CONFIG_REGULATOR_PFUZE100 is not set
+# CONFIG_REGULATOR_PV88060 is not set
+# CONFIG_REGULATOR_PV88080 is not set
+# CONFIG_REGULATOR_PV88090 is not set
+# CONFIG_REGULATOR_PWM is not set
+# CONFIG_REGULATOR_RASPBERRYPI_TOUCHSCREEN_ATTINY is not set
+# CONFIG_REGULATOR_RT4801 is not set
+# CONFIG_REGULATOR_RT6160 is not set
+# CONFIG_REGULATOR_RT6245 is not set
+# CONFIG_REGULATOR_RTQ2134 is not set
+# CONFIG_REGULATOR_RTMV20 is not set
+# CONFIG_REGULATOR_RTQ6752 is not set
+# CONFIG_REGULATOR_SLG51000 is not set
+# CONFIG_REGULATOR_SY8106A is not set
+# CONFIG_REGULATOR_SY8824X is not set
+# CONFIG_REGULATOR_SY8827N is not set
+# CONFIG_REGULATOR_TPS51632 is not set
+# CONFIG_REGULATOR_TPS62360 is not set
+# CONFIG_REGULATOR_TPS65023 is not set
+# CONFIG_REGULATOR_TPS6507X is not set
 CONFIG_REGULATOR_TPS65086=y
+# CONFIG_REGULATOR_TPS65132 is not set
+# CONFIG_REGULATOR_TPS6524X is not set
+# CONFIG_REGULATOR_VCTRL is not set
+# CONFIG_RC_CORE is not set
+CONFIG_MEDIA_CEC_SUPPORT=y
+# CONFIG_CEC_CH7322 is not set
+# CONFIG_USB_PULSE8_CEC is not set
+# CONFIG_USB_RAINSHADOW_CEC is not set
 CONFIG_MEDIA_SUPPORT=y
+# CONFIG_MEDIA_SUPPORT_FILTER is not set
+# CONFIG_MEDIA_SUBDRV_AUTOSELECT is not set
+
+#
+# Media device types
+#
+CONFIG_MEDIA_CAMERA_SUPPORT=y
+CONFIG_MEDIA_ANALOG_TV_SUPPORT=y
+CONFIG_MEDIA_DIGITAL_TV_SUPPORT=y
+CONFIG_MEDIA_RADIO_SUPPORT=y
+CONFIG_MEDIA_SDR_SUPPORT=y
+CONFIG_MEDIA_PLATFORM_SUPPORT=y
+CONFIG_MEDIA_TEST_SUPPORT=y
+# end of Media device types
+
+#
+# Media core support
+#
+CONFIG_VIDEO_DEV=y
+CONFIG_MEDIA_CONTROLLER=y
+CONFIG_DVB_CORE=y
+# end of Media core support
+
+#
+# Video4Linux options
+#
+CONFIG_VIDEO_V4L2=y
+CONFIG_VIDEO_V4L2_I2C=y
+CONFIG_VIDEO_V4L2_SUBDEV_API=y
+# CONFIG_VIDEO_ADV_DEBUG is not set
+# CONFIG_VIDEO_FIXED_MINOR_RANGES is not set
+CONFIG_V4L2_MEM2MEM_DEV=y
+CONFIG_V4L2_FWNODE=y
+CONFIG_V4L2_ASYNC=y
+# end of Video4Linux options
+
+#
+# Media controller options
+#
+# CONFIG_MEDIA_CONTROLLER_DVB is not set
+# end of Media controller options
+
+#
+# Digital TV options
+#
+# CONFIG_DVB_MMAP is not set
+CONFIG_DVB_NET=y
+CONFIG_DVB_MAX_ADAPTERS=16
+CONFIG_DVB_DYNAMIC_MINORS=y
+# CONFIG_DVB_DEMUX_SECTION_LOSS_LOG is not set
+# CONFIG_DVB_ULE_DEBUG is not set
+# end of Digital TV options
+
+#
+# Media drivers
+#
 CONFIG_MEDIA_USB_SUPPORT=y
+
+#
+# Webcam devices
+#
 CONFIG_USB_VIDEO_CLASS=y
+CONFIG_USB_VIDEO_CLASS_INPUT_EVDEV=y
+# CONFIG_USB_GSPCA is not set
+# CONFIG_USB_PWC is not set
+# CONFIG_VIDEO_CPIA2 is not set
+# CONFIG_USB_ZR364XX is not set
+# CONFIG_USB_STKWEBCAM is not set
+# CONFIG_USB_S2255 is not set
+# CONFIG_VIDEO_USBTV is not set
+
+#
+# Analog TV USB devices
+#
+# CONFIG_VIDEO_PVRUSB2 is not set
+# CONFIG_VIDEO_HDPVR is not set
+# CONFIG_VIDEO_STK1160_COMMON is not set
+# CONFIG_VIDEO_GO7007 is not set
+
+#
+# Analog/digital TV USB devices
+#
+# CONFIG_VIDEO_AU0828 is not set
+# CONFIG_VIDEO_CX231XX is not set
+
+#
+# Digital TV USB devices
+#
+# CONFIG_DVB_USB_V2 is not set
+# CONFIG_DVB_TTUSB_BUDGET is not set
+# CONFIG_DVB_TTUSB_DEC is not set
+# CONFIG_SMS_USB_DRV is not set
+# CONFIG_DVB_B2C2_FLEXCOP_USB is not set
+# CONFIG_DVB_AS102 is not set
+
+#
+# Webcam, TV (analog/digital) USB devices
+#
+# CONFIG_VIDEO_EM28XX is not set
+
+#
+# Software defined radio USB devices
+#
+# CONFIG_USB_AIRSPY is not set
+# CONFIG_USB_HACKRF is not set
+# CONFIG_USB_MSI2500 is not set
+# CONFIG_MEDIA_PCI_SUPPORT is not set
+CONFIG_RADIO_ADAPTERS=y
+# CONFIG_RADIO_SI470X is not set
+# CONFIG_RADIO_SI4713 is not set
+# CONFIG_USB_MR800 is not set
+# CONFIG_USB_DSBR is not set
+# CONFIG_RADIO_MAXIRADIO is not set
+# CONFIG_RADIO_SHARK is not set
+# CONFIG_RADIO_SHARK2 is not set
+# CONFIG_USB_KEENE is not set
+# CONFIG_USB_RAREMONO is not set
+# CONFIG_USB_MA901 is not set
+# CONFIG_RADIO_TEA5764 is not set
+# CONFIG_RADIO_SAA7706H is not set
+# CONFIG_RADIO_TEF6862 is not set
+# CONFIG_RADIO_WL1273 is not set
+# CONFIG_RADIO_WL128X is not set
+CONFIG_VIDEOBUF2_CORE=y
+CONFIG_VIDEOBUF2_V4L2=y
+CONFIG_VIDEOBUF2_MEMOPS=y
+CONFIG_VIDEOBUF2_DMA_CONTIG=y
+CONFIG_VIDEOBUF2_VMALLOC=y
 CONFIG_V4L_PLATFORM_DRIVERS=y
+# CONFIG_VIDEO_CAFE_CCIC is not set
+# CONFIG_VIDEO_CADENCE is not set
+# CONFIG_VIDEO_ASPEED is not set
+# CONFIG_VIDEO_MUX is not set
 CONFIG_VIDEO_XILINX=y
 CONFIG_VIDEO_XILINX_CSI2RXSS=y
+CONFIG_VIDEO_MIPI_RX_TO_VIDEO=y
+CONFIG_VIDEO_XIL_ISP_LITE=y
+CONFIG_VIDEO_XIL_VIP=y
 CONFIG_VIDEO_XILINX_AXI4S_SWITCH=y
 CONFIG_VIDEO_XILINX_CFA=y
 CONFIG_VIDEO_XILINX_CRESAMPLE=y
@@ -254,175 +3512,3409 @@ CONFIG_VIDEO_XILINX_SWITCH=y
 CONFIG_VIDEO_XILINX_TPG=y
 CONFIG_VIDEO_XILINX_VPSS_CSC=y
 CONFIG_VIDEO_XILINX_VPSS_SCALER=y
+CONFIG_VIDEO_XILINX_VTC=y
+# CONFIG_VIDEO_XILINX_DPRXSS is not set
 CONFIG_VIDEO_XILINX_SCD=y
 CONFIG_VIDEO_XILINX_M2M=y
 CONFIG_VIDEO_XILINX_AXI4S_BROADCASTER=y
 CONFIG_VIDEO_XILINX_AXI4S_SUBSETCONV=y
+# CONFIG_V4L_MEM2MEM_DRIVERS is not set
+# CONFIG_DVB_PLATFORM_DRIVERS is not set
+# CONFIG_SDR_PLATFORM_DRIVERS is not set
+
+#
+# MMC/SDIO DVB adapters
+#
+# CONFIG_SMS_SDIO_DRV is not set
+# CONFIG_V4L_TEST_DRIVERS is not set
+# CONFIG_DVB_TEST_DRIVERS is not set
+# end of Media drivers
+
+#
+# Media ancillary drivers
+#
+CONFIG_MEDIA_ATTACH=y
+
+#
+# Audio decoders, processors and mixers
+#
+# CONFIG_VIDEO_TVAUDIO is not set
+# CONFIG_VIDEO_TDA7432 is not set
+# CONFIG_VIDEO_TDA9840 is not set
+# CONFIG_VIDEO_TDA1997X is not set
+# CONFIG_VIDEO_TEA6415C is not set
+# CONFIG_VIDEO_TEA6420 is not set
+# CONFIG_VIDEO_MSP3400 is not set
+# CONFIG_VIDEO_CS3308 is not set
+# CONFIG_VIDEO_CS5345 is not set
+# CONFIG_VIDEO_CS53L32A is not set
+# CONFIG_VIDEO_TLV320AIC23B is not set
+# CONFIG_VIDEO_UDA1342 is not set
+# CONFIG_VIDEO_WM8775 is not set
+# CONFIG_VIDEO_WM8739 is not set
+# CONFIG_VIDEO_VP27SMPX is not set
+# CONFIG_VIDEO_SONY_BTF_MPX is not set
+# end of Audio decoders, processors and mixers
+
+#
+# RDS decoders
+#
+# CONFIG_VIDEO_SAA6588 is not set
+# end of RDS decoders
+
+#
+# Video decoders
+#
+# CONFIG_VIDEO_ADV7180 is not set
+# CONFIG_VIDEO_ADV7183 is not set
+# CONFIG_VIDEO_ADV748X is not set
+# CONFIG_VIDEO_ADV7604 is not set
+# CONFIG_VIDEO_ADV7842 is not set
+# CONFIG_VIDEO_BT819 is not set
+# CONFIG_VIDEO_BT856 is not set
+# CONFIG_VIDEO_BT866 is not set
+# CONFIG_VIDEO_KS0127 is not set
+# CONFIG_VIDEO_ML86V7667 is not set
+# CONFIG_VIDEO_SAA7110 is not set
+# CONFIG_VIDEO_SAA711X is not set
+# CONFIG_VIDEO_TC358743 is not set
+# CONFIG_VIDEO_TVP514X is not set
+# CONFIG_VIDEO_TVP5150 is not set
+# CONFIG_VIDEO_TVP7002 is not set
+# CONFIG_VIDEO_TW2804 is not set
+# CONFIG_VIDEO_TW9903 is not set
+# CONFIG_VIDEO_TW9906 is not set
+# CONFIG_VIDEO_TW9910 is not set
+# CONFIG_VIDEO_VPX3220 is not set
+# CONFIG_VIDEO_MAX9286 is not set
+
+#
+# Video and audio decoders
+#
+# CONFIG_VIDEO_SAA717X is not set
+# CONFIG_VIDEO_CX25840 is not set
+# end of Video decoders
+
+#
+# Video encoders
+#
+# CONFIG_VIDEO_SAA7127 is not set
+# CONFIG_VIDEO_SAA7185 is not set
+# CONFIG_VIDEO_ADV7170 is not set
+# CONFIG_VIDEO_ADV7175 is not set
+# CONFIG_VIDEO_ADV7343 is not set
+# CONFIG_VIDEO_ADV7393 is not set
+# CONFIG_VIDEO_ADV7511 is not set
+# CONFIG_VIDEO_AD9389B is not set
+# CONFIG_VIDEO_AK881X is not set
+# CONFIG_VIDEO_THS8200 is not set
+# end of Video encoders
+
+#
+# Video improvement chips
+#
+# CONFIG_VIDEO_UPD64031A is not set
+# CONFIG_VIDEO_UPD64083 is not set
+# end of Video improvement chips
+
 CONFIG_VIDEO_AP1302=y
+
+#
+# Audio/Video compression chips
+#
+# CONFIG_VIDEO_SAA6752HS is not set
+# end of Audio/Video compression chips
+
+#
+# SDR tuner chips
+#
+# CONFIG_SDR_MAX2175 is not set
+# end of SDR tuner chips
+
+#
+# Miscellaneous helper chips
+#
+# CONFIG_VIDEO_THS7303 is not set
+# CONFIG_VIDEO_M52790 is not set
+# CONFIG_VIDEO_I2C is not set
+# CONFIG_VIDEO_ST_MIPID02 is not set
+# end of Miscellaneous helper chips
+
+#
+# Camera sensor devices
+#
+# CONFIG_VIDEO_HI556 is not set
+# CONFIG_VIDEO_IMX208 is not set
+# CONFIG_VIDEO_IMX214 is not set
+# CONFIG_VIDEO_IMX219 is not set
+# CONFIG_VIDEO_IMX258 is not set
 CONFIG_VIDEO_IMX274=y
+# CONFIG_VIDEO_IMX290 is not set
+# CONFIG_VIDEO_IMX319 is not set
+# CONFIG_VIDEO_IMX334 is not set
+# CONFIG_VIDEO_IMX335 is not set
+# CONFIG_VIDEO_IMX355 is not set
+# CONFIG_VIDEO_IMX412 is not set
+# CONFIG_VIDEO_OV02A10 is not set
+# CONFIG_VIDEO_OV2640 is not set
+# CONFIG_VIDEO_OV2659 is not set
+# CONFIG_VIDEO_OV2680 is not set
+# CONFIG_VIDEO_OV2685 is not set
+# CONFIG_VIDEO_OV5640 is not set
+# CONFIG_VIDEO_OV5645 is not set
+# CONFIG_VIDEO_OV5647 is not set
+CONFIG_VIDEO_AR1335=y
+# CONFIG_VIDEO_OV5648 is not set
+# CONFIG_VIDEO_OV6650 is not set
+# CONFIG_VIDEO_OV5670 is not set
+# CONFIG_VIDEO_OV5675 is not set
+# CONFIG_VIDEO_OV5695 is not set
+# CONFIG_VIDEO_OV7251 is not set
+# CONFIG_VIDEO_OV772X is not set
+# CONFIG_VIDEO_OV7640 is not set
+# CONFIG_VIDEO_OV7670 is not set
+# CONFIG_VIDEO_OV7740 is not set
+# CONFIG_VIDEO_OV8856 is not set
+# CONFIG_VIDEO_OV8865 is not set
+# CONFIG_VIDEO_OV9282 is not set
+# CONFIG_VIDEO_OV9640 is not set
+# CONFIG_VIDEO_OV9650 is not set
+# CONFIG_VIDEO_OV13858 is not set
+# CONFIG_VIDEO_VS6624 is not set
+# CONFIG_VIDEO_MT9M001 is not set
+# CONFIG_VIDEO_MT9M032 is not set
+# CONFIG_VIDEO_MT9M111 is not set
+# CONFIG_VIDEO_MT9P031 is not set
+# CONFIG_VIDEO_MT9T001 is not set
+# CONFIG_VIDEO_MT9T112 is not set
+# CONFIG_VIDEO_MT9V011 is not set
+# CONFIG_VIDEO_MT9V032 is not set
+# CONFIG_VIDEO_MT9V111 is not set
+# CONFIG_VIDEO_SR030PC30 is not set
+# CONFIG_VIDEO_NOON010PC30 is not set
+# CONFIG_VIDEO_M5MOLS is not set
+# CONFIG_VIDEO_RDACM20 is not set
+# CONFIG_VIDEO_RDACM21 is not set
+# CONFIG_VIDEO_RJ54N1 is not set
+# CONFIG_VIDEO_S5K6AA is not set
+# CONFIG_VIDEO_S5K6A3 is not set
+# CONFIG_VIDEO_S5K4ECGX is not set
+# CONFIG_VIDEO_S5K5BAF is not set
+# CONFIG_VIDEO_CCS is not set
+# CONFIG_VIDEO_ET8EK8 is not set
+# CONFIG_VIDEO_S5C73M3 is not set
+# end of Camera sensor devices
+
+#
+# Lens drivers
+#
+# CONFIG_VIDEO_AD5820 is not set
+# CONFIG_VIDEO_AK7375 is not set
+# CONFIG_VIDEO_DW9714 is not set
+# CONFIG_VIDEO_DW9768 is not set
+# CONFIG_VIDEO_DW9807_VCM is not set
+# end of Lens drivers
+
+#
+# Flash devices
+#
+# CONFIG_VIDEO_ADP1653 is not set
+# CONFIG_VIDEO_LM3560 is not set
+# CONFIG_VIDEO_LM3646 is not set
+# end of Flash devices
+
+#
+# SPI helper chips
+#
+# CONFIG_VIDEO_GS1662 is not set
+# end of SPI helper chips
+
+#
+# Media SPI Adapters
+#
+CONFIG_CXD2880_SPI_DRV=m
+# end of Media SPI Adapters
+
+CONFIG_MEDIA_TUNER=y
+
+#
+# Customize TV tuners
+#
+CONFIG_MEDIA_TUNER_SIMPLE=m
+CONFIG_MEDIA_TUNER_TDA18250=m
+CONFIG_MEDIA_TUNER_TDA8290=m
+CONFIG_MEDIA_TUNER_TDA827X=m
+CONFIG_MEDIA_TUNER_TDA18271=m
+CONFIG_MEDIA_TUNER_TDA9887=m
+CONFIG_MEDIA_TUNER_TEA5761=m
+CONFIG_MEDIA_TUNER_TEA5767=m
+CONFIG_MEDIA_TUNER_MSI001=m
+CONFIG_MEDIA_TUNER_MT20XX=m
+CONFIG_MEDIA_TUNER_MT2060=m
+CONFIG_MEDIA_TUNER_MT2063=m
+CONFIG_MEDIA_TUNER_MT2266=m
+CONFIG_MEDIA_TUNER_MT2131=m
+CONFIG_MEDIA_TUNER_QT1010=m
+CONFIG_MEDIA_TUNER_XC2028=m
+CONFIG_MEDIA_TUNER_XC5000=m
+CONFIG_MEDIA_TUNER_XC4000=m
+CONFIG_MEDIA_TUNER_MXL5005S=m
+CONFIG_MEDIA_TUNER_MXL5007T=m
+CONFIG_MEDIA_TUNER_MC44S803=m
+CONFIG_MEDIA_TUNER_MAX2165=m
+CONFIG_MEDIA_TUNER_TDA18218=m
+CONFIG_MEDIA_TUNER_FC0011=m
+CONFIG_MEDIA_TUNER_FC0012=m
+CONFIG_MEDIA_TUNER_FC0013=m
+CONFIG_MEDIA_TUNER_TDA18212=m
+CONFIG_MEDIA_TUNER_E4000=m
+CONFIG_MEDIA_TUNER_FC2580=m
+CONFIG_MEDIA_TUNER_M88RS6000T=m
+CONFIG_MEDIA_TUNER_TUA9001=m
+CONFIG_MEDIA_TUNER_SI2157=m
+CONFIG_MEDIA_TUNER_IT913X=m
+CONFIG_MEDIA_TUNER_R820T=m
+CONFIG_MEDIA_TUNER_MXL301RF=m
+CONFIG_MEDIA_TUNER_QM1D1C0042=m
+CONFIG_MEDIA_TUNER_QM1D1B0004=m
+# end of Customize TV tuners
+
+#
+# Customise DVB Frontends
+#
+
+#
+# Multistandard (satellite) frontends
+#
+CONFIG_DVB_STB0899=m
+CONFIG_DVB_STB6100=m
+CONFIG_DVB_STV090x=m
+CONFIG_DVB_STV0910=m
+CONFIG_DVB_STV6110x=m
+CONFIG_DVB_STV6111=m
+CONFIG_DVB_MXL5XX=m
+CONFIG_DVB_M88DS3103=m
+
+#
+# Multistandard (cable + terrestrial) frontends
+#
+CONFIG_DVB_DRXK=m
+CONFIG_DVB_TDA18271C2DD=m
+CONFIG_DVB_SI2165=m
+CONFIG_DVB_MN88472=m
+CONFIG_DVB_MN88473=m
+
+#
+# DVB-S (satellite) frontends
+#
+CONFIG_DVB_CX24110=m
+CONFIG_DVB_CX24123=m
+CONFIG_DVB_MT312=m
+CONFIG_DVB_ZL10036=m
+CONFIG_DVB_ZL10039=m
+CONFIG_DVB_S5H1420=m
+CONFIG_DVB_STV0288=m
+CONFIG_DVB_STB6000=m
+CONFIG_DVB_STV0299=m
+CONFIG_DVB_STV6110=m
+CONFIG_DVB_STV0900=m
+CONFIG_DVB_TDA8083=m
+CONFIG_DVB_TDA10086=m
+CONFIG_DVB_TDA8261=m
+CONFIG_DVB_VES1X93=m
+CONFIG_DVB_TUNER_ITD1000=m
+CONFIG_DVB_TUNER_CX24113=m
+CONFIG_DVB_TDA826X=m
+CONFIG_DVB_TUA6100=m
+CONFIG_DVB_CX24116=m
+CONFIG_DVB_CX24117=m
+CONFIG_DVB_CX24120=m
+CONFIG_DVB_SI21XX=m
+CONFIG_DVB_TS2020=m
+CONFIG_DVB_DS3000=m
+CONFIG_DVB_MB86A16=m
+CONFIG_DVB_TDA10071=m
+
+#
+# DVB-T (terrestrial) frontends
+#
+CONFIG_DVB_SP887X=m
+CONFIG_DVB_CX22700=m
+CONFIG_DVB_CX22702=m
+CONFIG_DVB_S5H1432=m
+CONFIG_DVB_DRXD=m
+CONFIG_DVB_L64781=m
+CONFIG_DVB_TDA1004X=m
+CONFIG_DVB_NXT6000=m
+CONFIG_DVB_MT352=m
+CONFIG_DVB_ZL10353=m
+CONFIG_DVB_DIB3000MB=m
+CONFIG_DVB_DIB3000MC=m
+CONFIG_DVB_DIB7000M=m
+CONFIG_DVB_DIB7000P=m
+CONFIG_DVB_DIB9000=m
+CONFIG_DVB_TDA10048=m
+CONFIG_DVB_AF9013=m
+CONFIG_DVB_EC100=m
+CONFIG_DVB_STV0367=m
+CONFIG_DVB_CXD2820R=m
+CONFIG_DVB_CXD2841ER=m
+CONFIG_DVB_RTL2830=m
+CONFIG_DVB_RTL2832=m
+CONFIG_DVB_RTL2832_SDR=m
+CONFIG_DVB_SI2168=m
+CONFIG_DVB_ZD1301_DEMOD=m
+CONFIG_DVB_CXD2880=m
+
+#
+# DVB-C (cable) frontends
+#
+CONFIG_DVB_VES1820=m
+CONFIG_DVB_TDA10021=m
+CONFIG_DVB_TDA10023=m
+CONFIG_DVB_STV0297=m
+
+#
+# ATSC (North American/Korean Terrestrial/Cable DTV) frontends
+#
+CONFIG_DVB_NXT200X=m
+CONFIG_DVB_OR51211=m
+CONFIG_DVB_OR51132=m
+CONFIG_DVB_BCM3510=m
+CONFIG_DVB_LGDT330X=m
+CONFIG_DVB_LGDT3305=m
+CONFIG_DVB_LGDT3306A=m
+CONFIG_DVB_LG2160=m
+CONFIG_DVB_S5H1409=m
+CONFIG_DVB_AU8522=m
+CONFIG_DVB_AU8522_DTV=m
+CONFIG_DVB_AU8522_V4L=m
+CONFIG_DVB_S5H1411=m
+CONFIG_DVB_MXL692=m
+
+#
+# ISDB-T (terrestrial) frontends
+#
+CONFIG_DVB_S921=m
+CONFIG_DVB_DIB8000=m
+CONFIG_DVB_MB86A20S=m
+
+#
+# ISDB-S (satellite) & ISDB-T (terrestrial) frontends
+#
+CONFIG_DVB_TC90522=m
+CONFIG_DVB_MN88443X=m
+
+#
+# Digital terrestrial only tuners/PLL
+#
+CONFIG_DVB_PLL=m
+CONFIG_DVB_TUNER_DIB0070=m
+CONFIG_DVB_TUNER_DIB0090=m
+
+#
+# SEC control devices for DVB-S
+#
+CONFIG_DVB_DRX39XYJ=m
+CONFIG_DVB_LNBH25=m
+CONFIG_DVB_LNBH29=m
+CONFIG_DVB_LNBP21=m
+CONFIG_DVB_LNBP22=m
+CONFIG_DVB_ISL6405=m
+CONFIG_DVB_ISL6421=m
+CONFIG_DVB_ISL6423=m
+CONFIG_DVB_A8293=m
+CONFIG_DVB_LGS8GL5=m
+CONFIG_DVB_LGS8GXX=m
+CONFIG_DVB_ATBM8830=m
+CONFIG_DVB_TDA665x=m
+CONFIG_DVB_IX2505V=m
+CONFIG_DVB_M88RS2000=m
+CONFIG_DVB_AF9033=m
+CONFIG_DVB_HORUS3A=m
+CONFIG_DVB_ASCOT2E=m
+CONFIG_DVB_HELENE=m
+
+#
+# Common Interface (EN50221) controller drivers
+#
+CONFIG_DVB_CXD2099=m
+CONFIG_DVB_SP2=m
+# end of Customise DVB Frontends
+
+#
+# Tools to develop new frontends
+#
+# CONFIG_DVB_DUMMY_FE is not set
+# end of Media ancillary drivers
+
+#
+# Graphics support
+#
 # CONFIG_VGA_ARB is not set
 CONFIG_DRM=y
+CONFIG_DRM_MIPI_DSI=y
+# CONFIG_DRM_DP_AUX_CHARDEV is not set
+# CONFIG_DRM_DEBUG_MM is not set
+# CONFIG_DRM_DEBUG_SELFTEST is not set
+CONFIG_DRM_KMS_HELPER=y
+# CONFIG_DRM_DEBUG_DP_MST_TOPOLOGY_REFS is not set
+CONFIG_DRM_FBDEV_EMULATION=y
+CONFIG_DRM_FBDEV_OVERALLOC=100
 CONFIG_DRM_FBDEV_LEAK_PHYS_SMEM=y
+# CONFIG_DRM_LOAD_EDID_FIRMWARE is not set
+# CONFIG_DRM_DP_CEC is not set
+CONFIG_DRM_GEM_CMA_HELPER=y
+CONFIG_DRM_KMS_CMA_HELPER=y
+
+#
+# I2C encoder or helper chips
+#
+# CONFIG_DRM_I2C_CH7006 is not set
+# CONFIG_DRM_I2C_SIL164 is not set
+# CONFIG_DRM_I2C_NXP_TDA998X is not set
+# CONFIG_DRM_I2C_NXP_TDA9950 is not set
+# end of I2C encoder or helper chips
+
+#
+# ARM devices
+#
+# CONFIG_DRM_HDLCD is not set
+# CONFIG_DRM_MALI_DISPLAY is not set
+# CONFIG_DRM_KOMEDA is not set
+# end of ARM devices
+
+# CONFIG_DRM_RADEON is not set
+# CONFIG_DRM_AMDGPU is not set
+# CONFIG_DRM_NOUVEAU is not set
+# CONFIG_DRM_VGEM is not set
+# CONFIG_DRM_VKMS is not set
+# CONFIG_DRM_VMWGFX is not set
+# CONFIG_DRM_UDL is not set
+# CONFIG_DRM_AST is not set
+# CONFIG_DRM_MGAG200 is not set
+# CONFIG_DRM_RCAR_DW_HDMI is not set
+# CONFIG_DRM_RCAR_LVDS is not set
+# CONFIG_DRM_QXL is not set
+# CONFIG_DRM_VIRTIO_GPU is not set
+CONFIG_DRM_PANEL=y
+
+#
+# Display Panels
+#
+# CONFIG_DRM_PANEL_ABT_Y030XX067A is not set
+# CONFIG_DRM_PANEL_ARM_VERSATILE is not set
+# CONFIG_DRM_PANEL_ASUS_Z00T_TM5P5_NT35596 is not set
+# CONFIG_DRM_PANEL_BOE_HIMAX8279D is not set
+# CONFIG_DRM_PANEL_BOE_TV101WUM_NL6 is not set
+# CONFIG_DRM_PANEL_DSI_CM is not set
+# CONFIG_DRM_PANEL_LVDS is not set
+# CONFIG_DRM_PANEL_SIMPLE is not set
+# CONFIG_DRM_PANEL_ELIDA_KD35T133 is not set
+# CONFIG_DRM_PANEL_FEIXIN_K101_IM2BA02 is not set
+# CONFIG_DRM_PANEL_FEIYANG_FY07024DI26A30D is not set
+# CONFIG_DRM_PANEL_ILITEK_IL9322 is not set
+# CONFIG_DRM_PANEL_ILITEK_ILI9341 is not set
+# CONFIG_DRM_PANEL_ILITEK_ILI9881C is not set
+# CONFIG_DRM_PANEL_INNOLUX_EJ030NA is not set
+# CONFIG_DRM_PANEL_INNOLUX_P079ZCA is not set
+# CONFIG_DRM_PANEL_JDI_LT070ME05000 is not set
+# CONFIG_DRM_PANEL_KHADAS_TS050 is not set
+# CONFIG_DRM_PANEL_KINGDISPLAY_KD097D04 is not set
+# CONFIG_DRM_PANEL_LEADTEK_LTK050H3146W is not set
+# CONFIG_DRM_PANEL_LEADTEK_LTK500HD1829 is not set
+# CONFIG_DRM_PANEL_SAMSUNG_LD9040 is not set
+# CONFIG_DRM_PANEL_LG_LB035Q02 is not set
+# CONFIG_DRM_PANEL_LG_LG4573 is not set
+# CONFIG_DRM_PANEL_NEC_NL8048HL11 is not set
+# CONFIG_DRM_PANEL_NOVATEK_NT35510 is not set
+# CONFIG_DRM_PANEL_NOVATEK_NT36672A is not set
+# CONFIG_DRM_PANEL_NOVATEK_NT39016 is not set
+# CONFIG_DRM_PANEL_MANTIX_MLAF057WE51 is not set
+# CONFIG_DRM_PANEL_OLIMEX_LCD_OLINUXINO is not set
+# CONFIG_DRM_PANEL_ORISETECH_OTM8009A is not set
+# CONFIG_DRM_PANEL_OSD_OSD101T2587_53TS is not set
+# CONFIG_DRM_PANEL_PANASONIC_VVX10F034N00 is not set
+# CONFIG_DRM_PANEL_RASPBERRYPI_TOUCHSCREEN is not set
+# CONFIG_DRM_PANEL_RAYDIUM_RM67191 is not set
+# CONFIG_DRM_PANEL_RAYDIUM_RM68200 is not set
+# CONFIG_DRM_PANEL_RONBO_RB070D30 is not set
+# CONFIG_DRM_PANEL_SAMSUNG_ATNA33XC20 is not set
+# CONFIG_DRM_PANEL_SAMSUNG_DB7430 is not set
+# CONFIG_DRM_PANEL_SAMSUNG_S6D16D0 is not set
+# CONFIG_DRM_PANEL_SAMSUNG_S6E3HA2 is not set
+# CONFIG_DRM_PANEL_SAMSUNG_S6E63J0X03 is not set
+# CONFIG_DRM_PANEL_SAMSUNG_S6E63M0 is not set
+# CONFIG_DRM_PANEL_SAMSUNG_S6E88A0_AMS452EF01 is not set
+# CONFIG_DRM_PANEL_SAMSUNG_S6E8AA0 is not set
+# CONFIG_DRM_PANEL_SAMSUNG_SOFEF00 is not set
+# CONFIG_DRM_PANEL_SEIKO_43WVF1G is not set
+# CONFIG_DRM_PANEL_SHARP_LQ101R1SX01 is not set
+# CONFIG_DRM_PANEL_SHARP_LS037V7DW01 is not set
+# CONFIG_DRM_PANEL_SHARP_LS043T1LE01 is not set
+# CONFIG_DRM_PANEL_SITRONIX_ST7701 is not set
+# CONFIG_DRM_PANEL_SITRONIX_ST7703 is not set
+# CONFIG_DRM_PANEL_SITRONIX_ST7789V is not set
+# CONFIG_DRM_PANEL_SONY_ACX424AKP is not set
+# CONFIG_DRM_PANEL_SONY_ACX565AKM is not set
+# CONFIG_DRM_PANEL_TDO_TL070WSH30 is not set
+# CONFIG_DRM_PANEL_TPO_TD028TTEC1 is not set
+# CONFIG_DRM_PANEL_TPO_TD043MTEA1 is not set
+# CONFIG_DRM_PANEL_TPO_TPG110 is not set
+# CONFIG_DRM_PANEL_TRULY_NT35597_WQXGA is not set
+# CONFIG_DRM_PANEL_VISIONOX_RM69299 is not set
+# CONFIG_DRM_PANEL_WIDECHIPS_WS2401 is not set
+# CONFIG_DRM_PANEL_XINPENG_XPP055C272 is not set
+# end of Display Panels
+
+CONFIG_DRM_BRIDGE=y
+CONFIG_DRM_PANEL_BRIDGE=y
+
+#
+# Display Interface Bridges
+#
+# CONFIG_DRM_CDNS_DSI is not set
+# CONFIG_DRM_CHIPONE_ICN6211 is not set
+# CONFIG_DRM_CHRONTEL_CH7033 is not set
+# CONFIG_DRM_DISPLAY_CONNECTOR is not set
+# CONFIG_DRM_LONTIUM_LT8912B is not set
+# CONFIG_DRM_LONTIUM_LT9611 is not set
+# CONFIG_DRM_LONTIUM_LT9611UXC is not set
+# CONFIG_DRM_ITE_IT66121 is not set
+# CONFIG_DRM_LVDS_CODEC is not set
+# CONFIG_DRM_MEGACHIPS_STDPXXXX_GE_B850V3_FW is not set
+# CONFIG_DRM_NWL_MIPI_DSI is not set
+# CONFIG_DRM_NXP_PTN3460 is not set
+# CONFIG_DRM_PARADE_PS8622 is not set
+# CONFIG_DRM_PARADE_PS8640 is not set
+# CONFIG_DRM_SIL_SII8620 is not set
+# CONFIG_DRM_SII902X is not set
+# CONFIG_DRM_SII9234 is not set
+# CONFIG_DRM_SIMPLE_BRIDGE is not set
+# CONFIG_DRM_THINE_THC63LVD1024 is not set
+# CONFIG_DRM_TOSHIBA_TC358762 is not set
+# CONFIG_DRM_TOSHIBA_TC358764 is not set
+# CONFIG_DRM_TOSHIBA_TC358767 is not set
+# CONFIG_DRM_TOSHIBA_TC358768 is not set
+# CONFIG_DRM_TOSHIBA_TC358775 is not set
+# CONFIG_DRM_TI_TFP410 is not set
+# CONFIG_DRM_TI_SN65DSI83 is not set
+# CONFIG_DRM_TI_SN65DSI86 is not set
+# CONFIG_DRM_TI_TPD12S015 is not set
+# CONFIG_DRM_ANALOGIX_ANX6345 is not set
+# CONFIG_DRM_ANALOGIX_ANX78XX is not set
+# CONFIG_DRM_ANALOGIX_ANX7625 is not set
+# CONFIG_DRM_I2C_ADV7511 is not set
+# CONFIG_DRM_CDNS_MHDP8546 is not set
+# end of Display Interface Bridges
+
+# CONFIG_DRM_ETNAVIV is not set
+# CONFIG_DRM_HISI_HIBMC is not set
+# CONFIG_DRM_HISI_KIRIN is not set
+# CONFIG_DRM_MXSFB is not set
+# CONFIG_DRM_ARCPGU is not set
+# CONFIG_DRM_BOCHS is not set
+# CONFIG_DRM_CIRRUS_QEMU is not set
+# CONFIG_DRM_GM12U320 is not set
+# CONFIG_DRM_SIMPLEDRM is not set
+# CONFIG_TINYDRM_HX8357D is not set
+# CONFIG_TINYDRM_ILI9225 is not set
+# CONFIG_TINYDRM_ILI9341 is not set
+# CONFIG_TINYDRM_ILI9486 is not set
+# CONFIG_TINYDRM_MI0283QT is not set
+# CONFIG_TINYDRM_REPAPER is not set
+# CONFIG_TINYDRM_ST7586 is not set
+# CONFIG_TINYDRM_ST7735R is not set
+# CONFIG_DRM_PL111 is not set
+# CONFIG_DRM_LIMA is not set
+# CONFIG_DRM_PANFROST is not set
+# CONFIG_DRM_TIDSS is not set
 CONFIG_DRM_ZYNQMP_DPSUB=y
 CONFIG_DRM_XLNX=y
 CONFIG_DRM_XLNX_BRIDGE=y
 CONFIG_DRM_XLNX_BRIDGE_DEBUG_FS=y
+# CONFIG_DRM_XLNX_DPTX is not set
 CONFIG_DRM_XLNX_DSI=y
+# CONFIG_DRM_XLNX_HDMITX is not set
 CONFIG_DRM_XLNX_MIXER=y
 CONFIG_DRM_XLNX_PL_DISP=y
 CONFIG_DRM_XLNX_SDI=y
 CONFIG_DRM_XLNX_BRIDGE_CSC=y
 CONFIG_DRM_XLNX_BRIDGE_SCALER=y
 CONFIG_DRM_XLNX_BRIDGE_VTC=y
+# CONFIG_DRM_GUD is not set
+# CONFIG_DRM_LEGACY is not set
+CONFIG_DRM_PANEL_ORIENTATION_QUIRKS=y
+
+#
+# Frame buffer Devices
+#
+CONFIG_FB_CMDLINE=y
+CONFIG_FB_NOTIFY=y
 CONFIG_FB=y
+# CONFIG_FIRMWARE_EDID is not set
+CONFIG_FB_CFB_FILLRECT=y
+CONFIG_FB_CFB_COPYAREA=y
+CONFIG_FB_CFB_IMAGEBLIT=y
+CONFIG_FB_SYS_FILLRECT=y
+CONFIG_FB_SYS_COPYAREA=y
+CONFIG_FB_SYS_IMAGEBLIT=y
+# CONFIG_FB_FOREIGN_ENDIAN is not set
+CONFIG_FB_SYS_FOPS=y
+CONFIG_FB_DEFERRED_IO=y
+# CONFIG_FB_MODE_HELPERS is not set
+# CONFIG_FB_TILEBLITTING is not set
+
+#
+# Frame buffer hardware drivers
+#
+# CONFIG_FB_CIRRUS is not set
+# CONFIG_FB_PM2 is not set
+# CONFIG_FB_ARMCLCD is not set
+# CONFIG_FB_CYBER2000 is not set
+# CONFIG_FB_ASILIANT is not set
+# CONFIG_FB_IMSTT is not set
+# CONFIG_FB_UVESA is not set
+# CONFIG_FB_EFI is not set
+# CONFIG_FB_OPENCORES is not set
+# CONFIG_FB_S1D13XXX is not set
+# CONFIG_FB_NVIDIA is not set
+# CONFIG_FB_RIVA is not set
+# CONFIG_FB_I740 is not set
+# CONFIG_FB_MATROX is not set
+# CONFIG_FB_RADEON is not set
+# CONFIG_FB_ATY128 is not set
+# CONFIG_FB_ATY is not set
+# CONFIG_FB_S3 is not set
+# CONFIG_FB_SAVAGE is not set
+# CONFIG_FB_SIS is not set
+# CONFIG_FB_NEOMAGIC is not set
+# CONFIG_FB_KYRO is not set
+# CONFIG_FB_3DFX is not set
+# CONFIG_FB_VOODOO1 is not set
+# CONFIG_FB_VT8623 is not set
+# CONFIG_FB_TRIDENT is not set
+# CONFIG_FB_ARK is not set
+# CONFIG_FB_PM3 is not set
+# CONFIG_FB_CARMINE is not set
+# CONFIG_FB_SMSCUFX is not set
+# CONFIG_FB_UDL is not set
+# CONFIG_FB_IBM_GXT4500 is not set
+# CONFIG_FB_XILINX is not set
+# CONFIG_FB_VIRTUAL is not set
+# CONFIG_FB_METRONOME is not set
+# CONFIG_FB_MB862XX is not set
+# CONFIG_FB_SIMPLE is not set
+# CONFIG_FB_SSD1307 is not set
+# CONFIG_FB_SM712 is not set
+# end of Frame buffer Devices
+
+#
+# Backlight & LCD device support
+#
+# CONFIG_LCD_CLASS_DEVICE is not set
+CONFIG_BACKLIGHT_CLASS_DEVICE=y
+# CONFIG_BACKLIGHT_KTD253 is not set
+# CONFIG_BACKLIGHT_PWM is not set
+# CONFIG_BACKLIGHT_QCOM_WLED is not set
+# CONFIG_BACKLIGHT_ADP8860 is not set
+# CONFIG_BACKLIGHT_ADP8870 is not set
+# CONFIG_BACKLIGHT_LM3630A is not set
+# CONFIG_BACKLIGHT_LM3639 is not set
+# CONFIG_BACKLIGHT_LP855X is not set
+# CONFIG_BACKLIGHT_GPIO is not set
+# CONFIG_BACKLIGHT_LV5207LP is not set
+# CONFIG_BACKLIGHT_BD6107 is not set
+# CONFIG_BACKLIGHT_ARCXCNN is not set
+# CONFIG_BACKLIGHT_LED is not set
+# end of Backlight & LCD device support
+
+CONFIG_VIDEOMODE_HELPERS=y
+CONFIG_HDMI=y
+
+#
+# Console display driver support
+#
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_DUMMY_CONSOLE_COLUMNS=80
+CONFIG_DUMMY_CONSOLE_ROWS=25
 CONFIG_FRAMEBUFFER_CONSOLE=y
+CONFIG_FRAMEBUFFER_CONSOLE_DETECT_PRIMARY=y
+# CONFIG_FRAMEBUFFER_CONSOLE_ROTATION is not set
+# CONFIG_FRAMEBUFFER_CONSOLE_DEFERRED_TAKEOVER is not set
+# end of Console display driver support
+
+# CONFIG_LOGO is not set
+# end of Graphics support
+
 CONFIG_SOUND=y
 CONFIG_SND=y
+CONFIG_SND_TIMER=y
+CONFIG_SND_PCM=y
+CONFIG_SND_PCM_ELD=y
+CONFIG_SND_DMAENGINE_PCM=y
+CONFIG_SND_HWDEP=y
+CONFIG_SND_RAWMIDI=y
+CONFIG_SND_JACK=y
+CONFIG_SND_JACK_INPUT_DEV=y
+# CONFIG_SND_OSSEMUL is not set
+CONFIG_SND_PCM_TIMER=y
+# CONFIG_SND_HRTIMER is not set
+# CONFIG_SND_DYNAMIC_MINORS is not set
+CONFIG_SND_SUPPORT_OLD_API=y
+CONFIG_SND_PROC_FS=y
+CONFIG_SND_VERBOSE_PROCFS=y
+# CONFIG_SND_VERBOSE_PRINTK is not set
+# CONFIG_SND_DEBUG is not set
+# CONFIG_SND_SEQUENCER is not set
 # CONFIG_SND_DRIVERS is not set
 # CONFIG_SND_PCI is not set
+
+#
+# HD-Audio
+#
+# end of HD-Audio
+
+CONFIG_SND_HDA_PREALLOC_SIZE=64
+CONFIG_SND_SPI=y
+CONFIG_SND_USB=y
 CONFIG_SND_USB_AUDIO=y
+CONFIG_SND_USB_AUDIO_USE_MEDIA_CONTROLLER=y
+# CONFIG_SND_USB_UA101 is not set
+# CONFIG_SND_USB_CAIAQ is not set
+# CONFIG_SND_USB_6FIRE is not set
+# CONFIG_SND_USB_HIFACE is not set
+# CONFIG_SND_BCD2000 is not set
+# CONFIG_SND_USB_POD is not set
+# CONFIG_SND_USB_PODHD is not set
+# CONFIG_SND_USB_TONEPORT is not set
+# CONFIG_SND_USB_VARIAX is not set
 CONFIG_SND_SOC=y
+CONFIG_SND_SOC_GENERIC_DMAENGINE_PCM=y
+# CONFIG_SND_SOC_ADI is not set
+# CONFIG_SND_SOC_AMD_ACP is not set
+# CONFIG_SND_ATMEL_SOC is not set
+# CONFIG_SND_BCM63XX_I2S_WHISTLER is not set
+# CONFIG_SND_DESIGNWARE_I2S is not set
+
+#
+# SoC Audio for Freescale CPUs
+#
+
+#
+# Common SoC Audio options for Freescale CPUs:
+#
+# CONFIG_SND_SOC_FSL_ASRC is not set
+# CONFIG_SND_SOC_FSL_SAI is not set
+# CONFIG_SND_SOC_FSL_AUDMIX is not set
+# CONFIG_SND_SOC_FSL_SSI is not set
+# CONFIG_SND_SOC_FSL_SPDIF is not set
+# CONFIG_SND_SOC_FSL_ESAI is not set
+# CONFIG_SND_SOC_FSL_MICFIL is not set
+# CONFIG_SND_SOC_FSL_XCVR is not set
+# CONFIG_SND_SOC_FSL_RPMSG is not set
+# CONFIG_SND_SOC_IMX_AUDMUX is not set
+# end of SoC Audio for Freescale CPUs
+
+# CONFIG_SND_I2S_HI6210_I2S is not set
+# CONFIG_SND_SOC_IMG is not set
+# CONFIG_SND_SOC_MTK_BTCVSD is not set
+# CONFIG_SND_SOC_SOF_TOPLEVEL is not set
+
+#
+# STMicroelectronics STM32 SOC audio support
+#
+# end of STMicroelectronics STM32 SOC audio support
+
 CONFIG_SND_SOC_XILINX_DP=y
 CONFIG_SND_SOC_XILINX_SDI=y
 CONFIG_SND_SOC_XILINX_I2S=y
 CONFIG_SND_SOC_XILINX_AUDIO_FORMATTER=y
 CONFIG_SND_SOC_XILINX_SPDIF=y
 CONFIG_SND_SOC_XILINX_PL_SND_CARD=y
+# CONFIG_SND_SOC_XTFPGA_I2S is not set
+CONFIG_SND_SOC_I2C_AND_SPI=y
+
+#
+# CODEC drivers
+#
+# CONFIG_SND_SOC_AC97_CODEC is not set
+# CONFIG_SND_SOC_ADAU1372_I2C is not set
+# CONFIG_SND_SOC_ADAU1372_SPI is not set
+# CONFIG_SND_SOC_ADAU1701 is not set
+# CONFIG_SND_SOC_ADAU1761_I2C is not set
+# CONFIG_SND_SOC_ADAU1761_SPI is not set
+# CONFIG_SND_SOC_ADAU7002 is not set
+# CONFIG_SND_SOC_ADAU7118_HW is not set
+# CONFIG_SND_SOC_ADAU7118_I2C is not set
+# CONFIG_SND_SOC_AK4104 is not set
+# CONFIG_SND_SOC_AK4118 is not set
+# CONFIG_SND_SOC_AK4458 is not set
+# CONFIG_SND_SOC_AK4554 is not set
+# CONFIG_SND_SOC_AK4613 is not set
+# CONFIG_SND_SOC_AK4642 is not set
+# CONFIG_SND_SOC_AK5386 is not set
+# CONFIG_SND_SOC_AK5558 is not set
+# CONFIG_SND_SOC_ALC5623 is not set
+# CONFIG_SND_SOC_BD28623 is not set
+# CONFIG_SND_SOC_BT_SCO is not set
+# CONFIG_SND_SOC_CS35L32 is not set
+# CONFIG_SND_SOC_CS35L33 is not set
+# CONFIG_SND_SOC_CS35L34 is not set
+# CONFIG_SND_SOC_CS35L35 is not set
+# CONFIG_SND_SOC_CS35L36 is not set
+# CONFIG_SND_SOC_CS42L42 is not set
+# CONFIG_SND_SOC_CS42L51_I2C is not set
+# CONFIG_SND_SOC_CS42L52 is not set
+# CONFIG_SND_SOC_CS42L56 is not set
+# CONFIG_SND_SOC_CS42L73 is not set
+# CONFIG_SND_SOC_CS4234 is not set
+# CONFIG_SND_SOC_CS4265 is not set
+# CONFIG_SND_SOC_CS4270 is not set
+# CONFIG_SND_SOC_CS4271_I2C is not set
+# CONFIG_SND_SOC_CS4271_SPI is not set
+# CONFIG_SND_SOC_CS42XX8_I2C is not set
+# CONFIG_SND_SOC_CS43130 is not set
+# CONFIG_SND_SOC_CS4341 is not set
+# CONFIG_SND_SOC_CS4349 is not set
+# CONFIG_SND_SOC_CS53L30 is not set
+# CONFIG_SND_SOC_CX2072X is not set
+# CONFIG_SND_SOC_DA7213 is not set
+# CONFIG_SND_SOC_DMIC is not set
+# CONFIG_SND_SOC_ES7134 is not set
+# CONFIG_SND_SOC_ES7241 is not set
+# CONFIG_SND_SOC_ES8316 is not set
+# CONFIG_SND_SOC_ES8328_I2C is not set
+# CONFIG_SND_SOC_ES8328_SPI is not set
+# CONFIG_SND_SOC_GTM601 is not set
+# CONFIG_SND_SOC_ICS43432 is not set
+# CONFIG_SND_SOC_INNO_RK3036 is not set
+# CONFIG_SND_SOC_MAX98088 is not set
+# CONFIG_SND_SOC_MAX98357A is not set
+# CONFIG_SND_SOC_MAX98504 is not set
+# CONFIG_SND_SOC_MAX9867 is not set
+# CONFIG_SND_SOC_MAX98927 is not set
+# CONFIG_SND_SOC_MAX98373_I2C is not set
+# CONFIG_SND_SOC_MAX98390 is not set
+# CONFIG_SND_SOC_MAX9860 is not set
+# CONFIG_SND_SOC_MSM8916_WCD_DIGITAL is not set
+# CONFIG_SND_SOC_PCM1681 is not set
+# CONFIG_SND_SOC_PCM1789_I2C is not set
+# CONFIG_SND_SOC_PCM179X_I2C is not set
+# CONFIG_SND_SOC_PCM179X_SPI is not set
+# CONFIG_SND_SOC_PCM186X_I2C is not set
+# CONFIG_SND_SOC_PCM186X_SPI is not set
+# CONFIG_SND_SOC_PCM3060_I2C is not set
+# CONFIG_SND_SOC_PCM3060_SPI is not set
+# CONFIG_SND_SOC_PCM3168A_I2C is not set
+# CONFIG_SND_SOC_PCM3168A_SPI is not set
+# CONFIG_SND_SOC_PCM5102A is not set
+# CONFIG_SND_SOC_PCM512x_I2C is not set
+# CONFIG_SND_SOC_PCM512x_SPI is not set
+# CONFIG_SND_SOC_RK3328 is not set
+# CONFIG_SND_SOC_RT5616 is not set
+# CONFIG_SND_SOC_RT5631 is not set
+# CONFIG_SND_SOC_RT5640 is not set
+# CONFIG_SND_SOC_RT5659 is not set
+# CONFIG_SND_SOC_SGTL5000 is not set
+# CONFIG_SND_SOC_SIMPLE_AMPLIFIER is not set
+# CONFIG_SND_SOC_SIMPLE_MUX is not set
+# CONFIG_SND_SOC_SPDIF is not set
+# CONFIG_SND_SOC_SSM2305 is not set
+# CONFIG_SND_SOC_SSM2518 is not set
+# CONFIG_SND_SOC_SSM2602_SPI is not set
+# CONFIG_SND_SOC_SSM2602_I2C is not set
+# CONFIG_SND_SOC_SSM4567 is not set
+# CONFIG_SND_SOC_STA32X is not set
+# CONFIG_SND_SOC_STA350 is not set
+# CONFIG_SND_SOC_STI_SAS is not set
+# CONFIG_SND_SOC_TAS2552 is not set
+# CONFIG_SND_SOC_TAS2562 is not set
+# CONFIG_SND_SOC_TAS2764 is not set
+# CONFIG_SND_SOC_TAS2770 is not set
+# CONFIG_SND_SOC_TAS5086 is not set
+# CONFIG_SND_SOC_TAS571X is not set
+# CONFIG_SND_SOC_TAS5720 is not set
+# CONFIG_SND_SOC_TAS6424 is not set
+# CONFIG_SND_SOC_TDA7419 is not set
+# CONFIG_SND_SOC_TFA9879 is not set
+# CONFIG_SND_SOC_TFA989X is not set
+# CONFIG_SND_SOC_TLV320AIC23_I2C is not set
+# CONFIG_SND_SOC_TLV320AIC23_SPI is not set
+# CONFIG_SND_SOC_TLV320AIC31XX is not set
+# CONFIG_SND_SOC_TLV320AIC32X4_I2C is not set
+# CONFIG_SND_SOC_TLV320AIC32X4_SPI is not set
+# CONFIG_SND_SOC_TLV320AIC3X_I2C is not set
+# CONFIG_SND_SOC_TLV320AIC3X_SPI is not set
+# CONFIG_SND_SOC_TLV320ADCX140 is not set
+# CONFIG_SND_SOC_TS3A227E is not set
+# CONFIG_SND_SOC_TSCS42XX is not set
+# CONFIG_SND_SOC_TSCS454 is not set
+# CONFIG_SND_SOC_UDA1334 is not set
+# CONFIG_SND_SOC_WM8510 is not set
+# CONFIG_SND_SOC_WM8523 is not set
+# CONFIG_SND_SOC_WM8524 is not set
+# CONFIG_SND_SOC_WM8580 is not set
+# CONFIG_SND_SOC_WM8711 is not set
+# CONFIG_SND_SOC_WM8728 is not set
+# CONFIG_SND_SOC_WM8731 is not set
+# CONFIG_SND_SOC_WM8737 is not set
+# CONFIG_SND_SOC_WM8741 is not set
+# CONFIG_SND_SOC_WM8750 is not set
+# CONFIG_SND_SOC_WM8753 is not set
+# CONFIG_SND_SOC_WM8770 is not set
+# CONFIG_SND_SOC_WM8776 is not set
+# CONFIG_SND_SOC_WM8782 is not set
+# CONFIG_SND_SOC_WM8804_I2C is not set
+# CONFIG_SND_SOC_WM8804_SPI is not set
+# CONFIG_SND_SOC_WM8903 is not set
+# CONFIG_SND_SOC_WM8904 is not set
+# CONFIG_SND_SOC_WM8960 is not set
+# CONFIG_SND_SOC_WM8962 is not set
+# CONFIG_SND_SOC_WM8974 is not set
+# CONFIG_SND_SOC_WM8978 is not set
+# CONFIG_SND_SOC_WM8985 is not set
+# CONFIG_SND_SOC_ZL38060 is not set
+# CONFIG_SND_SOC_MAX9759 is not set
+# CONFIG_SND_SOC_MT6351 is not set
+# CONFIG_SND_SOC_MT6358 is not set
+# CONFIG_SND_SOC_MT6660 is not set
+# CONFIG_SND_SOC_NAU8315 is not set
+# CONFIG_SND_SOC_NAU8540 is not set
+# CONFIG_SND_SOC_NAU8810 is not set
+# CONFIG_SND_SOC_NAU8822 is not set
+# CONFIG_SND_SOC_NAU8824 is not set
+# CONFIG_SND_SOC_TPA6130A2 is not set
+# CONFIG_SND_SOC_LPASS_WSA_MACRO is not set
+# CONFIG_SND_SOC_LPASS_VA_MACRO is not set
+# CONFIG_SND_SOC_LPASS_RX_MACRO is not set
+# CONFIG_SND_SOC_LPASS_TX_MACRO is not set
+# end of CODEC drivers
+
+# CONFIG_SND_SIMPLE_CARD is not set
+# CONFIG_SND_AUDIO_GRAPH_CARD is not set
+# CONFIG_SND_VIRTIO is not set
+
+#
+# HID support
+#
+CONFIG_HID=y
+# CONFIG_HID_BATTERY_STRENGTH is not set
+# CONFIG_HIDRAW is not set
+# CONFIG_UHID is not set
+CONFIG_HID_GENERIC=y
+
+#
+# Special HID drivers
+#
+# CONFIG_HID_A4TECH is not set
+# CONFIG_HID_ACCUTOUCH is not set
+# CONFIG_HID_ACRUX is not set
+# CONFIG_HID_APPLE is not set
+# CONFIG_HID_APPLEIR is not set
+# CONFIG_HID_ASUS is not set
+# CONFIG_HID_AUREAL is not set
+# CONFIG_HID_BELKIN is not set
+# CONFIG_HID_BETOP_FF is not set
+# CONFIG_HID_BIGBEN_FF is not set
+# CONFIG_HID_CHERRY is not set
+# CONFIG_HID_CHICONY is not set
+# CONFIG_HID_CORSAIR is not set
+# CONFIG_HID_COUGAR is not set
+# CONFIG_HID_MACALLY is not set
+# CONFIG_HID_PRODIKEYS is not set
+# CONFIG_HID_CMEDIA is not set
+# CONFIG_HID_CREATIVE_SB0540 is not set
+# CONFIG_HID_CYPRESS is not set
+# CONFIG_HID_DRAGONRISE is not set
+# CONFIG_HID_EMS_FF is not set
+# CONFIG_HID_ELAN is not set
+# CONFIG_HID_ELECOM is not set
+# CONFIG_HID_ELO is not set
+# CONFIG_HID_EZKEY is not set
+# CONFIG_HID_GEMBIRD is not set
+# CONFIG_HID_GFRM is not set
+# CONFIG_HID_GLORIOUS is not set
+# CONFIG_HID_HOLTEK is not set
+# CONFIG_HID_VIVALDI is not set
+# CONFIG_HID_GT683R is not set
+# CONFIG_HID_KEYTOUCH is not set
+# CONFIG_HID_KYE is not set
+# CONFIG_HID_UCLOGIC is not set
+# CONFIG_HID_WALTOP is not set
+# CONFIG_HID_VIEWSONIC is not set
+# CONFIG_HID_GYRATION is not set
+# CONFIG_HID_ICADE is not set
+# CONFIG_HID_ITE is not set
+# CONFIG_HID_JABRA is not set
+# CONFIG_HID_TWINHAN is not set
+# CONFIG_HID_KENSINGTON is not set
+# CONFIG_HID_LCPOWER is not set
+# CONFIG_HID_LED is not set
+# CONFIG_HID_LENOVO is not set
+# CONFIG_HID_LOGITECH is not set
+# CONFIG_HID_MAGICMOUSE is not set
+# CONFIG_HID_MALTRON is not set
+# CONFIG_HID_MAYFLASH is not set
+# CONFIG_HID_REDRAGON is not set
+# CONFIG_HID_MICROSOFT is not set
+# CONFIG_HID_MONTEREY is not set
+# CONFIG_HID_MULTITOUCH is not set
+# CONFIG_HID_NTI is not set
+# CONFIG_HID_NTRIG is not set
+# CONFIG_HID_ORTEK is not set
+# CONFIG_HID_PANTHERLORD is not set
+# CONFIG_HID_PENMOUNT is not set
+# CONFIG_HID_PETALYNX is not set
+# CONFIG_HID_PICOLCD is not set
+# CONFIG_HID_PLANTRONICS is not set
+# CONFIG_HID_PLAYSTATION is not set
+# CONFIG_HID_PRIMAX is not set
+# CONFIG_HID_RETRODE is not set
+# CONFIG_HID_ROCCAT is not set
+# CONFIG_HID_SAITEK is not set
+# CONFIG_HID_SAMSUNG is not set
+# CONFIG_HID_SEMITEK is not set
+# CONFIG_HID_SONY is not set
+# CONFIG_HID_SPEEDLINK is not set
+# CONFIG_HID_STEAM is not set
+# CONFIG_HID_STEELSERIES is not set
+# CONFIG_HID_SUNPLUS is not set
+# CONFIG_HID_RMI is not set
+# CONFIG_HID_GREENASIA is not set
+# CONFIG_HID_SMARTJOYPLUS is not set
+# CONFIG_HID_TIVO is not set
+# CONFIG_HID_TOPSEED is not set
+# CONFIG_HID_THINGM is not set
+# CONFIG_HID_THRUSTMASTER is not set
+# CONFIG_HID_UDRAW_PS3 is not set
+# CONFIG_HID_WACOM is not set
+# CONFIG_HID_WIIMOTE is not set
+# CONFIG_HID_XINMO is not set
+# CONFIG_HID_ZEROPLUS is not set
+# CONFIG_HID_ZYDACRON is not set
+# CONFIG_HID_SENSOR_HUB is not set
+# CONFIG_HID_ALPS is not set
+# CONFIG_HID_MCP2221 is not set
+# end of Special HID drivers
+
+#
+# USB HID support
+#
+CONFIG_USB_HID=y
+# CONFIG_HID_PID is not set
+# CONFIG_USB_HIDDEV is not set
+# end of USB HID support
+
+#
+# I2C HID support
+#
+# CONFIG_I2C_HID_OF is not set
+# CONFIG_I2C_HID_OF_GOODIX is not set
+# end of I2C HID support
+# end of HID support
+
+CONFIG_USB_OHCI_LITTLE_ENDIAN=y
+CONFIG_USB_SUPPORT=y
+CONFIG_USB_COMMON=y
+# CONFIG_USB_LED_TRIG is not set
+# CONFIG_USB_ULPI_BUS is not set
+# CONFIG_USB_CONN_GPIO is not set
+CONFIG_USB_ARCH_HAS_HCD=y
 CONFIG_USB=y
+CONFIG_USB_PCI=y
 CONFIG_USB_ANNOUNCE_NEW_DEVICES=y
+
+#
+# Miscellaneous USB options
+#
+CONFIG_USB_DEFAULT_PERSIST=y
+# CONFIG_USB_FEW_INIT_RETRIES is not set
+# CONFIG_USB_DYNAMIC_MINORS is not set
 CONFIG_USB_OTG=y
+# CONFIG_USB_OTG_PRODUCTLIST is not set
+# CONFIG_USB_OTG_DISABLE_EXTERNAL_HUB is not set
 CONFIG_USB_OTG_FSM=y
+# CONFIG_USB_LEDS_TRIGGER_USBPORT is not set
+CONFIG_USB_AUTOSUSPEND_DELAY=2
+# CONFIG_USB_MON is not set
+
+#
+# USB Host Controller Drivers
+#
+# CONFIG_USB_C67X00_HCD is not set
 CONFIG_USB_XHCI_HCD=y
+# CONFIG_USB_XHCI_DBGCAP is not set
+CONFIG_USB_XHCI_PCI=y
+# CONFIG_USB_XHCI_PCI_RENESAS is not set
+CONFIG_USB_XHCI_PLATFORM=y
+# CONFIG_USB_EHCI_HCD is not set
+# CONFIG_USB_OXU210HP_HCD is not set
+# CONFIG_USB_ISP116X_HCD is not set
+# CONFIG_USB_FOTG210_HCD is not set
+# CONFIG_USB_MAX3421_HCD is not set
+# CONFIG_USB_OHCI_HCD is not set
+# CONFIG_USB_UHCI_HCD is not set
+# CONFIG_USB_SL811_HCD is not set
+# CONFIG_USB_R8A66597_HCD is not set
+# CONFIG_USB_HCD_TEST_MODE is not set
+
+#
+# USB Device Class drivers
+#
+# CONFIG_USB_ACM is not set
+# CONFIG_USB_PRINTER is not set
+# CONFIG_USB_WDM is not set
+# CONFIG_USB_TMC is not set
+
+#
+# NOTE: USB_STORAGE depends on SCSI but BLK_DEV_SD may
+#
+
+#
+# also be needed; see USB_STORAGE Help for more info
+#
 CONFIG_USB_STORAGE=y
+# CONFIG_USB_STORAGE_DEBUG is not set
+# CONFIG_USB_STORAGE_REALTEK is not set
+# CONFIG_USB_STORAGE_DATAFAB is not set
+# CONFIG_USB_STORAGE_FREECOM is not set
+# CONFIG_USB_STORAGE_ISD200 is not set
+# CONFIG_USB_STORAGE_USBAT is not set
+# CONFIG_USB_STORAGE_SDDR09 is not set
+# CONFIG_USB_STORAGE_SDDR55 is not set
+# CONFIG_USB_STORAGE_JUMPSHOT is not set
+# CONFIG_USB_STORAGE_ALAUDA is not set
+# CONFIG_USB_STORAGE_ONETOUCH is not set
+# CONFIG_USB_STORAGE_KARMA is not set
+# CONFIG_USB_STORAGE_CYPRESS_ATACB is not set
+# CONFIG_USB_STORAGE_ENE_UB6250 is not set
 CONFIG_USB_UAS=y
+
+#
+# USB Imaging devices
+#
+# CONFIG_USB_MDC800 is not set
+# CONFIG_USB_MICROTEK is not set
+# CONFIG_USBIP_CORE is not set
+# CONFIG_USB_CDNS_SUPPORT is not set
+# CONFIG_USB_MUSB_HDRC is not set
 CONFIG_USB_DWC3=y
+# CONFIG_USB_DWC3_HOST is not set
+# CONFIG_USB_DWC3_GADGET is not set
+CONFIG_USB_DWC3_DUAL_ROLE=y
+# CONFIG_USB_DWC3_OTG is not set
+
+#
+# Platform Glue Driver Support
+#
+CONFIG_USB_DWC3_HAPS=y
+CONFIG_USB_DWC3_OF_SIMPLE=y
+CONFIG_USB_DWC3_XILINX=y
+# CONFIG_USB_DWC2 is not set
+# CONFIG_USB_CHIPIDEA is not set
+# CONFIG_USB_ISP1760 is not set
+
+#
+# USB port drivers
+#
+# CONFIG_USB_SERIAL is not set
+
+#
+# USB Miscellaneous drivers
+#
+# CONFIG_USB_EMI62 is not set
+# CONFIG_USB_EMI26 is not set
+# CONFIG_USB_ADUTUX is not set
+# CONFIG_USB_SEVSEG is not set
+# CONFIG_USB_LEGOTOWER is not set
+# CONFIG_USB_LCD is not set
+# CONFIG_USB_CYPRESS_CY7C63 is not set
+# CONFIG_USB_CYTHERM is not set
+# CONFIG_USB_IDMOUSE is not set
+# CONFIG_USB_FTDI_ELAN is not set
+# CONFIG_USB_APPLEDISPLAY is not set
+# CONFIG_APPLE_MFI_FASTCHARGE is not set
+# CONFIG_USB_LD is not set
+# CONFIG_USB_TRANCEVIBRATOR is not set
+# CONFIG_USB_IOWARRIOR is not set
+# CONFIG_USB_TEST is not set
+# CONFIG_USB_EHSET_TEST_FIXTURE is not set
+# CONFIG_USB_ISIGHTFW is not set
+# CONFIG_USB_YUREX is not set
+# CONFIG_USB_EZUSB_FX2 is not set
+# CONFIG_USB_HUB_USB251XB is not set
 CONFIG_USB_USB2244=m
 CONFIG_USB_USB5744=m
+# CONFIG_USB_HSIC_USB3503 is not set
+# CONFIG_USB_HSIC_USB4604 is not set
+# CONFIG_USB_LINK_LAYER_TEST is not set
+
+#
+# USB Physical Layer drivers
+#
+CONFIG_USB_PHY=y
+# CONFIG_NOP_USB_XCEIV is not set
+# CONFIG_USB_GPIO_VBUS is not set
+# CONFIG_USB_ISP1301 is not set
+# CONFIG_USB_ULPI is not set
+# end of USB Physical Layer drivers
+
 CONFIG_USB_GADGET=y
+# CONFIG_USB_GADGET_DEBUG is not set
+# CONFIG_USB_GADGET_DEBUG_FILES is not set
+# CONFIG_USB_GADGET_DEBUG_FS is not set
+CONFIG_USB_GADGET_VBUS_DRAW=2
+CONFIG_USB_GADGET_STORAGE_NUM_BUFFERS=2
+# CONFIG_U_SERIAL_CONSOLE is not set
+
+#
+# USB Peripheral Controller
+#
+# CONFIG_USB_FOTG210_UDC is not set
+# CONFIG_USB_GR_UDC is not set
+# CONFIG_USB_R8A66597 is not set
+# CONFIG_USB_PXA27X is not set
+# CONFIG_USB_MV_UDC is not set
+# CONFIG_USB_MV_U3D is not set
+# CONFIG_USB_SNP_UDC_PLAT is not set
+# CONFIG_USB_M66592 is not set
+# CONFIG_USB_BDC_UDC is not set
+# CONFIG_USB_AMD5536UDC is not set
+# CONFIG_USB_NET2272 is not set
+# CONFIG_USB_NET2280 is not set
+# CONFIG_USB_GOKU is not set
+# CONFIG_USB_EG20T is not set
 CONFIG_USB_GADGET_XILINX=y
+# CONFIG_USB_MAX3420_UDC is not set
+# CONFIG_USB_DUMMY_HCD is not set
+# end of USB Peripheral Controller
+
+CONFIG_USB_LIBCOMPOSITE=y
+CONFIG_USB_F_ACM=y
+CONFIG_USB_U_SERIAL=y
+CONFIG_USB_U_ETHER=y
+CONFIG_USB_F_SERIAL=m
+CONFIG_USB_F_OBEX=m
+CONFIG_USB_F_ECM=y
+CONFIG_USB_F_EEM=y
+CONFIG_USB_F_SUBSET=y
+CONFIG_USB_F_RNDIS=y
+CONFIG_USB_F_MASS_STORAGE=y
 CONFIG_USB_CONFIGFS=y
+# CONFIG_USB_CONFIGFS_SERIAL is not set
 CONFIG_USB_CONFIGFS_ACM=y
+# CONFIG_USB_CONFIGFS_OBEX is not set
+# CONFIG_USB_CONFIGFS_NCM is not set
 CONFIG_USB_CONFIGFS_ECM=y
 CONFIG_USB_CONFIGFS_ECM_SUBSET=y
 CONFIG_USB_CONFIGFS_RNDIS=y
 CONFIG_USB_CONFIGFS_EEM=y
 CONFIG_USB_CONFIGFS_MASS_STORAGE=y
+# CONFIG_USB_CONFIGFS_F_LB_SS is not set
+# CONFIG_USB_CONFIGFS_F_FS is not set
+# CONFIG_USB_CONFIGFS_F_UAC1 is not set
+# CONFIG_USB_CONFIGFS_F_UAC1_LEGACY is not set
+# CONFIG_USB_CONFIGFS_F_UAC2 is not set
+# CONFIG_USB_CONFIGFS_F_MIDI is not set
+# CONFIG_USB_CONFIGFS_F_HID is not set
+# CONFIG_USB_CONFIGFS_F_UVC is not set
+# CONFIG_USB_CONFIGFS_F_PRINTER is not set
+
+#
+# USB Gadget precomposed configurations
+#
+# CONFIG_USB_ZERO is not set
+# CONFIG_USB_AUDIO is not set
 CONFIG_USB_ETH=m
+CONFIG_USB_ETH_RNDIS=y
 CONFIG_USB_ETH_EEM=y
+# CONFIG_USB_G_NCM is not set
+# CONFIG_USB_GADGETFS is not set
+# CONFIG_USB_FUNCTIONFS is not set
 CONFIG_USB_MASS_STORAGE=m
 CONFIG_USB_G_SERIAL=m
+# CONFIG_USB_MIDI_GADGET is not set
+# CONFIG_USB_G_PRINTER is not set
+# CONFIG_USB_CDC_COMPOSITE is not set
+# CONFIG_USB_G_ACM_MS is not set
+# CONFIG_USB_G_MULTI is not set
+# CONFIG_USB_G_HID is not set
+# CONFIG_USB_G_DBGP is not set
+# CONFIG_USB_G_WEBCAM is not set
+# CONFIG_USB_RAW_GADGET is not set
+# end of USB Gadget precomposed configurations
+
+# CONFIG_TYPEC is not set
+CONFIG_USB_ROLE_SWITCH=y
 CONFIG_MMC=y
+CONFIG_PWRSEQ_EMMC=y
+# CONFIG_PWRSEQ_SD8787 is not set
+CONFIG_PWRSEQ_SIMPLE=y
+CONFIG_MMC_BLOCK=y
+CONFIG_MMC_BLOCK_MINORS=8
+# CONFIG_SDIO_UART is not set
+# CONFIG_MMC_TEST is not set
+
+#
+# MMC/SD/SDIO Host Controller Drivers
+#
+# CONFIG_MMC_DEBUG is not set
+# CONFIG_MMC_ARMMMCI is not set
 CONFIG_MMC_SDHCI=y
+# CONFIG_MMC_SDHCI_PCI is not set
 CONFIG_MMC_SDHCI_PLTFM=y
 CONFIG_MMC_SDHCI_OF_ARASAN=y
+# CONFIG_MMC_SDHCI_OF_ASPEED is not set
+# CONFIG_MMC_SDHCI_OF_AT91 is not set
+# CONFIG_MMC_SDHCI_OF_DWCMSHC is not set
+# CONFIG_MMC_SDHCI_CADENCE is not set
+# CONFIG_MMC_SDHCI_F_SDH30 is not set
+# CONFIG_MMC_SDHCI_MILBEAUT is not set
+# CONFIG_MMC_TIFM_SD is not set
+# CONFIG_MMC_SPI is not set
+# CONFIG_MMC_CB710 is not set
+# CONFIG_MMC_VIA_SDMMC is not set
+# CONFIG_MMC_DW is not set
+# CONFIG_MMC_VUB300 is not set
+# CONFIG_MMC_USHC is not set
+# CONFIG_MMC_USDHI6ROL0 is not set
+CONFIG_MMC_CQHCI=y
+# CONFIG_MMC_HSQ is not set
+# CONFIG_MMC_TOSHIBA_PCI is not set
+# CONFIG_MMC_MTK is not set
+# CONFIG_MMC_SDHCI_XENON is not set
+# CONFIG_MMC_SDHCI_OMAP is not set
+# CONFIG_MMC_SDHCI_AM654 is not set
+# CONFIG_MEMSTICK is not set
 CONFIG_NEW_LEDS=y
 CONFIG_LEDS_CLASS=y
+# CONFIG_LEDS_CLASS_FLASH is not set
+# CONFIG_LEDS_CLASS_MULTICOLOR is not set
+# CONFIG_LEDS_BRIGHTNESS_HW_CHANGED is not set
+
+#
+# LED drivers
+#
+# CONFIG_LEDS_AN30259A is not set
+# CONFIG_LEDS_AW2013 is not set
+# CONFIG_LEDS_BCM6328 is not set
+# CONFIG_LEDS_BCM6358 is not set
+# CONFIG_LEDS_CR0014114 is not set
+# CONFIG_LEDS_EL15203000 is not set
+# CONFIG_LEDS_LM3530 is not set
+# CONFIG_LEDS_LM3532 is not set
+# CONFIG_LEDS_LM3642 is not set
+# CONFIG_LEDS_LM3692X is not set
+# CONFIG_LEDS_PCA9532 is not set
 CONFIG_LEDS_GPIO=y
+# CONFIG_LEDS_LP3944 is not set
+# CONFIG_LEDS_LP3952 is not set
+# CONFIG_LEDS_LP50XX is not set
+# CONFIG_LEDS_LP55XX_COMMON is not set
+# CONFIG_LEDS_LP8860 is not set
+# CONFIG_LEDS_PCA955X is not set
+# CONFIG_LEDS_PCA963X is not set
+# CONFIG_LEDS_DAC124S085 is not set
+# CONFIG_LEDS_PWM is not set
+# CONFIG_LEDS_REGULATOR is not set
+# CONFIG_LEDS_BD2802 is not set
+# CONFIG_LEDS_LT3593 is not set
+# CONFIG_LEDS_TCA6507 is not set
+# CONFIG_LEDS_TLC591XX is not set
+# CONFIG_LEDS_LM355x is not set
+# CONFIG_LEDS_IS31FL319X is not set
+# CONFIG_LEDS_IS31FL32XX is not set
+
+#
+# LED driver for blink(1) USB RGB LED is under Special HID drivers (HID_THINGM)
+#
+# CONFIG_LEDS_BLINKM is not set
+# CONFIG_LEDS_SYSCON is not set
+# CONFIG_LEDS_MLXREG is not set
+# CONFIG_LEDS_USER is not set
+# CONFIG_LEDS_SPI_BYTE is not set
+# CONFIG_LEDS_TI_LMU_COMMON is not set
+
+#
+# Flash and Torch LED drivers
+#
+
+#
+# LED Triggers
+#
+CONFIG_LEDS_TRIGGERS=y
 CONFIG_LEDS_TRIGGER_TIMER=y
 CONFIG_LEDS_TRIGGER_ONESHOT=y
+# CONFIG_LEDS_TRIGGER_DISK is not set
+# CONFIG_LEDS_TRIGGER_MTD is not set
 CONFIG_LEDS_TRIGGER_HEARTBEAT=y
 CONFIG_LEDS_TRIGGER_BACKLIGHT=y
 CONFIG_LEDS_TRIGGER_CPU=y
+# CONFIG_LEDS_TRIGGER_ACTIVITY is not set
 CONFIG_LEDS_TRIGGER_GPIO=y
 CONFIG_LEDS_TRIGGER_DEFAULT_ON=y
+
+#
+# iptables trigger is under Netfilter config (LED target)
+#
 CONFIG_LEDS_TRIGGER_TRANSIENT=y
 CONFIG_LEDS_TRIGGER_CAMERA=y
+# CONFIG_LEDS_TRIGGER_PANIC is not set
+# CONFIG_LEDS_TRIGGER_NETDEV is not set
+# CONFIG_LEDS_TRIGGER_PATTERN is not set
+# CONFIG_LEDS_TRIGGER_AUDIO is not set
+# CONFIG_LEDS_TRIGGER_TTY is not set
+# CONFIG_ACCESSIBILITY is not set
+# CONFIG_INFINIBAND is not set
+CONFIG_EDAC_SUPPORT=y
 CONFIG_EDAC=y
+CONFIG_EDAC_LEGACY_SYSFS=y
+# CONFIG_EDAC_DEBUG is not set
+# CONFIG_EDAC_THUNDERX is not set
 CONFIG_EDAC_SYNOPSYS=y
 CONFIG_EDAC_ZYNQMP_OCM=y
+# CONFIG_EDAC_XGENE is not set
+CONFIG_EDAC_CORTEX_ARM64=y
+# CONFIG_EDAC_DMC520 is not set
+# CONFIG_EDAC_XILINX_DDR is not set
+CONFIG_RTC_LIB=y
 CONFIG_RTC_CLASS=y
+CONFIG_RTC_HCTOSYS=y
+CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
+CONFIG_RTC_SYSTOHC=y
+CONFIG_RTC_SYSTOHC_DEVICE="rtc0"
+# CONFIG_RTC_DEBUG is not set
+CONFIG_RTC_NVMEM=y
+
+#
+# RTC interfaces
+#
+CONFIG_RTC_INTF_SYSFS=y
+CONFIG_RTC_INTF_PROC=y
+CONFIG_RTC_INTF_DEV=y
+# CONFIG_RTC_INTF_DEV_UIE_EMUL is not set
+# CONFIG_RTC_DRV_TEST is not set
+
+#
+# I2C RTC drivers
+#
+# CONFIG_RTC_DRV_ABB5ZES3 is not set
+# CONFIG_RTC_DRV_ABEOZ9 is not set
+# CONFIG_RTC_DRV_ABX80X is not set
+# CONFIG_RTC_DRV_DS1307 is not set
+# CONFIG_RTC_DRV_DS1374 is not set
+# CONFIG_RTC_DRV_DS1672 is not set
+# CONFIG_RTC_DRV_HYM8563 is not set
+# CONFIG_RTC_DRV_MAX6900 is not set
+# CONFIG_RTC_DRV_RS5C372 is not set
+# CONFIG_RTC_DRV_ISL1208 is not set
+# CONFIG_RTC_DRV_ISL12022 is not set
+# CONFIG_RTC_DRV_ISL12026 is not set
+# CONFIG_RTC_DRV_X1205 is not set
+# CONFIG_RTC_DRV_PCF8523 is not set
+# CONFIG_RTC_DRV_PCF85063 is not set
+# CONFIG_RTC_DRV_PCF85363 is not set
+# CONFIG_RTC_DRV_PCF8563 is not set
+# CONFIG_RTC_DRV_PCF8583 is not set
+# CONFIG_RTC_DRV_M41T80 is not set
+# CONFIG_RTC_DRV_BQ32K is not set
+# CONFIG_RTC_DRV_S35390A is not set
+# CONFIG_RTC_DRV_FM3130 is not set
+# CONFIG_RTC_DRV_RX8010 is not set
+# CONFIG_RTC_DRV_RX8581 is not set
+# CONFIG_RTC_DRV_RX8025 is not set
+# CONFIG_RTC_DRV_EM3027 is not set
+# CONFIG_RTC_DRV_RV3028 is not set
+# CONFIG_RTC_DRV_RV3032 is not set
+# CONFIG_RTC_DRV_RV8803 is not set
+# CONFIG_RTC_DRV_SD3078 is not set
+
+#
+# SPI RTC drivers
+#
+# CONFIG_RTC_DRV_M41T93 is not set
+# CONFIG_RTC_DRV_M41T94 is not set
+# CONFIG_RTC_DRV_DS1302 is not set
+# CONFIG_RTC_DRV_DS1305 is not set
+# CONFIG_RTC_DRV_DS1343 is not set
+# CONFIG_RTC_DRV_DS1347 is not set
+# CONFIG_RTC_DRV_DS1390 is not set
+# CONFIG_RTC_DRV_MAX6916 is not set
+# CONFIG_RTC_DRV_R9701 is not set
+# CONFIG_RTC_DRV_RX4581 is not set
+# CONFIG_RTC_DRV_RS5C348 is not set
+# CONFIG_RTC_DRV_MAX6902 is not set
+# CONFIG_RTC_DRV_PCF2123 is not set
+# CONFIG_RTC_DRV_MCP795 is not set
+CONFIG_RTC_I2C_AND_SPI=y
+
+#
+# SPI and I2C RTC drivers
+#
+# CONFIG_RTC_DRV_DS3232 is not set
+# CONFIG_RTC_DRV_PCF2127 is not set
+# CONFIG_RTC_DRV_RV3029C2 is not set
+# CONFIG_RTC_DRV_RX6110 is not set
+
+#
+# Platform RTC drivers
+#
+# CONFIG_RTC_DRV_DS1286 is not set
+# CONFIG_RTC_DRV_DS1511 is not set
+# CONFIG_RTC_DRV_DS1553 is not set
+# CONFIG_RTC_DRV_DS1685_FAMILY is not set
+# CONFIG_RTC_DRV_DS1742 is not set
+# CONFIG_RTC_DRV_DS2404 is not set
+# CONFIG_RTC_DRV_EFI is not set
+# CONFIG_RTC_DRV_STK17TA8 is not set
+# CONFIG_RTC_DRV_M48T86 is not set
+# CONFIG_RTC_DRV_M48T35 is not set
+# CONFIG_RTC_DRV_M48T59 is not set
+# CONFIG_RTC_DRV_MSM6242 is not set
+# CONFIG_RTC_DRV_BQ4802 is not set
+# CONFIG_RTC_DRV_RP5C01 is not set
+# CONFIG_RTC_DRV_V3020 is not set
 CONFIG_RTC_DRV_ZYNQMP=y
+
+#
+# on-CPU RTC drivers
+#
+# CONFIG_RTC_DRV_PL030 is not set
+# CONFIG_RTC_DRV_PL031 is not set
+# CONFIG_RTC_DRV_CADENCE is not set
+# CONFIG_RTC_DRV_FTRTC010 is not set
+# CONFIG_RTC_DRV_R7301 is not set
+
+#
+# HID Sensor RTC drivers
+#
+# CONFIG_RTC_DRV_GOLDFISH is not set
 CONFIG_DMADEVICES=y
+# CONFIG_DMADEVICES_DEBUG is not set
+
+#
+# DMA Devices
+#
+CONFIG_DMA_ENGINE=y
+CONFIG_DMA_VIRTUAL_CHANNELS=y
+CONFIG_DMA_OF=y
+# CONFIG_ALTERA_MSGDMA is not set
+# CONFIG_AMBA_PL08X is not set
+# CONFIG_AXI_DMAC is not set
+# CONFIG_BCM_SBA_RAID is not set
+# CONFIG_DW_AXI_DMAC is not set
+# CONFIG_FSL_EDMA is not set
+# CONFIG_FSL_QDMA is not set
+# CONFIG_HISI_DMA is not set
+# CONFIG_INTEL_IDMA64 is not set
+# CONFIG_MV_XOR_V2 is not set
+# CONFIG_PL330_DMA is not set
+# CONFIG_PLX_DMA is not set
 CONFIG_XILINX_DMA=y
 CONFIG_XILINX_ZYNQMP_DMA=y
+CONFIG_XILINX_ZYNQMP_DPDMA=y
+CONFIG_XILINX_FRMBUF=y
+# CONFIG_XILINX_PS_PCIE_DMA is not set
+# CONFIG_QCOM_HIDMA_MGMT is not set
+# CONFIG_QCOM_HIDMA is not set
+# CONFIG_DW_DMAC is not set
+# CONFIG_DW_DMAC_PCI is not set
+# CONFIG_DW_EDMA is not set
+# CONFIG_DW_EDMA_PCIE is not set
+# CONFIG_SF_PDMA is not set
+
+#
+# DMA Clients
+#
+# CONFIG_ASYNC_TX_DMA is not set
 CONFIG_DMATEST=y
+CONFIG_DMA_ENGINE_RAID=y
+# CONFIG_XILINX_DMATEST is not set
+# CONFIG_XILINX_VDMATEST is not set
+
+#
+# DMABUF options
+#
+CONFIG_SYNC_FILE=y
+# CONFIG_SW_SYNC is not set
+# CONFIG_UDMABUF is not set
+# CONFIG_DMABUF_MOVE_NOTIFY is not set
+# CONFIG_DMABUF_DEBUG is not set
+# CONFIG_DMABUF_SELFTESTS is not set
 CONFIG_DMABUF_HEAPS=y
+# CONFIG_DMABUF_SYSFS_STATS is not set
 CONFIG_DMABUF_HEAPS_SYSTEM=y
 CONFIG_DMABUF_HEAPS_CMA=y
+# end of DMABUF options
+
+# CONFIG_AUXDISPLAY is not set
 CONFIG_UIO=y
+# CONFIG_UIO_CIF is not set
 CONFIG_UIO_PDRV_GENIRQ=m
 CONFIG_UIO_DMEM_GENIRQ=m
+# CONFIG_UIO_AEC is not set
+# CONFIG_UIO_SERCOS3 is not set
+# CONFIG_UIO_PCI_GENERIC is not set
+# CONFIG_UIO_NETX is not set
+# CONFIG_UIO_PRUSS is not set
+# CONFIG_UIO_MF624 is not set
 CONFIG_UIO_XILINX_APM=y
+# CONFIG_UIO_XILINX_AI_ENGINE is not set
+# CONFIG_VFIO is not set
+# CONFIG_VIRT_DRIVERS is not set
+CONFIG_VIRTIO=y
+CONFIG_VIRTIO_MENU=y
+# CONFIG_VIRTIO_PCI is not set
+# CONFIG_VIRTIO_BALLOON is not set
+# CONFIG_VIRTIO_INPUT is not set
+# CONFIG_VIRTIO_MMIO is not set
+# CONFIG_VDPA is not set
+CONFIG_VHOST_MENU=y
+# CONFIG_VHOST_NET is not set
+# CONFIG_VHOST_CROSS_ENDIAN_LEGACY is not set
+
+#
+# Microsoft Hyper-V guest support
+#
+# end of Microsoft Hyper-V guest support
+
+# CONFIG_GREYBUS is not set
+# CONFIG_COMEDI is not set
 CONFIG_STAGING=y
+# CONFIG_PRISM2_USB is not set
+# CONFIG_RTL8192U is not set
+# CONFIG_RTLLIB is not set
+# CONFIG_RTL8723BS is not set
+# CONFIG_R8712U is not set
+# CONFIG_R8188EU is not set
+# CONFIG_RTS5208 is not set
+# CONFIG_VT6655 is not set
+# CONFIG_VT6656 is not set
+
+#
+# IIO staging drivers
+#
+
+#
+# Accelerometers
+#
+# CONFIG_ADIS16203 is not set
+# CONFIG_ADIS16240 is not set
+# end of Accelerometers
+
+#
+# Analog to digital converters
+#
+# CONFIG_AD7816 is not set
+# CONFIG_AD7280 is not set
+# end of Analog to digital converters
+
+#
+# Analog digital bi-direction converters
+#
+# CONFIG_ADT7316 is not set
+# end of Analog digital bi-direction converters
+
+#
+# Capacitance to digital converters
+#
+# CONFIG_AD7746 is not set
+# end of Capacitance to digital converters
+
+#
+# Direct Digital Synthesis
+#
+# CONFIG_AD9832 is not set
+# CONFIG_AD9834 is not set
+# end of Direct Digital Synthesis
+
+#
+# Network Analyzer, Impedance Converters
+#
+# CONFIG_AD5933 is not set
+# end of Network Analyzer, Impedance Converters
+
+#
+# Active energy metering IC
+#
+# CONFIG_ADE7854 is not set
+# end of Active energy metering IC
+
+#
+# Resolver to digital converters
+#
+# CONFIG_AD2S1210 is not set
+# end of Resolver to digital converters
+# end of IIO staging drivers
+
+# CONFIG_FB_SM750 is not set
+# CONFIG_STAGING_MEDIA is not set
+
+#
+# Android
+#
+# CONFIG_ASHMEM is not set
+# end of Android
+
+# CONFIG_STAGING_BOARD is not set
+# CONFIG_LTE_GDM724X is not set
+# CONFIG_GS_FPGABOOT is not set
+# CONFIG_UNISYSSPAR is not set
+# CONFIG_XILINX_APF is not set
+# CONFIG_FB_TFT is not set
+# CONFIG_KS7010 is not set
+# CONFIG_PI433 is not set
+# CONFIG_XIL_AXIS_FIFO is not set
+# CONFIG_FIELDBUS_DEV is not set
+# CONFIG_QLGE is not set
+# CONFIG_WFX is not set
 CONFIG_XILINX_FCLK=y
 CONFIG_XLNX_SYNC=y
+# CONFIG_XLNX_TSMUX is not set
+# CONFIG_XROE_FRAMER is not set
+# CONFIG_XROE_TRAFFIC_GEN is not set
 CONFIG_SERIAL_UARTLITE_RS485=y
 CONFIG_AXIENET_HAS_TADMA=y
 CONFIG_XILINX_TSN=y
+CONFIG_XILINX_TSN_PTP=y
+CONFIG_XILINX_TSN_QBV=y
+CONFIG_XILINX_TSN_SWITCH=y
+CONFIG_XILINX_TSN_QCI=y
+CONFIG_XILINX_TSN_CB=y
+CONFIG_XILINX_TSN_QBR=y
+# CONFIG_GOLDFISH is not set
+# CONFIG_CHROME_PLATFORMS is not set
+# CONFIG_MELLANOX_PLATFORM is not set
+CONFIG_HAVE_CLK=y
+CONFIG_HAVE_CLK_PREPARE=y
+CONFIG_COMMON_CLK=y
+
+#
+# Clock driver for ARM Reference designs
+#
+# CONFIG_ICST is not set
+# CONFIG_CLK_SP810 is not set
+# end of Clock driver for ARM Reference designs
+
+# CONFIG_LMK04832 is not set
+# CONFIG_COMMON_CLK_MAX9485 is not set
 CONFIG_COMMON_CLK_SI5341=y
+# CONFIG_COMMON_CLK_SI5351 is not set
+# CONFIG_COMMON_CLK_SI514 is not set
+# CONFIG_COMMON_CLK_SI544 is not set
 CONFIG_COMMON_CLK_SI570=y
 CONFIG_COMMON_CLK_SI5324=y
 CONFIG_COMMON_CLK_IDT8T49N24X=y
+# CONFIG_COMMON_CLK_CDCE706 is not set
+# CONFIG_COMMON_CLK_CDCE925 is not set
+# CONFIG_COMMON_CLK_CS2000_CP is not set
+# CONFIG_COMMON_CLK_AXI_CLKGEN is not set
+# CONFIG_COMMON_CLK_XGENE is not set
+# CONFIG_COMMON_CLK_PWM is not set
+# CONFIG_COMMON_CLK_VC5 is not set
+# CONFIG_COMMON_CLK_FIXED_MMIO is not set
 CONFIG_COMMON_CLK_XLNX_CLKWZRD=y
+# CONFIG_COMMON_CLK_XLNX_CLKWZRD_V is not set
 CONFIG_XILINX_VCU=m
+CONFIG_COMMON_CLK_ZYNQMP=y
+# CONFIG_HWSPINLOCK is not set
+
+#
+# Clock Source drivers
+#
+CONFIG_TIMER_OF=y
+CONFIG_TIMER_PROBE=y
+CONFIG_ARM_ARCH_TIMER=y
+CONFIG_ARM_ARCH_TIMER_EVTSTREAM=y
+CONFIG_ARM_ARCH_TIMER_OOL_WORKAROUND=y
+CONFIG_FSL_ERRATUM_A008585=y
+CONFIG_HISILICON_ERRATUM_161010101=y
+CONFIG_ARM64_ERRATUM_858921=y
+# CONFIG_MICROCHIP_PIT64B is not set
+# end of Clock Source drivers
+
+CONFIG_MAILBOX=y
+# CONFIG_ARM_MHU is not set
+# CONFIG_ARM_MHU_V2 is not set
+# CONFIG_PLATFORM_MHU is not set
+# CONFIG_PL320_MBOX is not set
+# CONFIG_ALTERA_MBOX is not set
+# CONFIG_MAILBOX_TEST is not set
+CONFIG_ZYNQMP_IPI_MBOX=y
+CONFIG_IOMMU_IOVA=y
+CONFIG_IOMMU_API=y
+CONFIG_IOMMU_SUPPORT=y
+
+#
+# Generic IOMMU Pagetable Support
+#
+# CONFIG_IOMMU_IO_PGTABLE_LPAE is not set
+# CONFIG_IOMMU_IO_PGTABLE_ARMV7S is not set
+# end of Generic IOMMU Pagetable Support
+
+# CONFIG_IOMMU_DEBUGFS is not set
+CONFIG_IOMMU_DEFAULT_DMA_STRICT=y
+# CONFIG_IOMMU_DEFAULT_DMA_LAZY is not set
+# CONFIG_IOMMU_DEFAULT_PASSTHROUGH is not set
+CONFIG_OF_IOMMU=y
+CONFIG_IOMMU_DMA=y
+# CONFIG_ARM_SMMU is not set
+# CONFIG_ARM_SMMU_V3 is not set
+# CONFIG_VIRTIO_IOMMU is not set
+
+#
+# Remoteproc drivers
+#
 CONFIG_REMOTEPROC=y
+# CONFIG_REMOTEPROC_CDEV is not set
 CONFIG_ZYNQMP_R5_REMOTEPROC=m
+# end of Remoteproc drivers
+
+#
+# Rpmsg drivers
+#
+CONFIG_RPMSG=m
 CONFIG_RPMSG_CHAR=m
+CONFIG_RPMSG_NS=m
+# CONFIG_RPMSG_QCOM_GLINK_RPM is not set
+CONFIG_RPMSG_VIRTIO=m
+# end of Rpmsg drivers
+
+# CONFIG_SOUNDWIRE is not set
+
+#
+# SOC (System On Chip) specific Drivers
+#
+
+#
+# Amlogic SoC drivers
+#
+# end of Amlogic SoC drivers
+
+#
+# Broadcom SoC drivers
+#
+# CONFIG_SOC_BRCMSTB is not set
+# end of Broadcom SoC drivers
+
+#
+# NXP/Freescale QorIQ SoC drivers
+#
+# CONFIG_QUICC_ENGINE is not set
+# CONFIG_FSL_RCPM is not set
+# end of NXP/Freescale QorIQ SoC drivers
+
+#
+# i.MX SoC drivers
+#
+# end of i.MX SoC drivers
+
+#
+# Enable LiteX SoC Builder specific drivers
+#
+# CONFIG_LITEX_SOC_CONTROLLER is not set
+# end of Enable LiteX SoC Builder specific drivers
+
+#
+# Qualcomm SoC drivers
+#
+# end of Qualcomm SoC drivers
+
+# CONFIG_SOC_TI is not set
+
+#
+# Xilinx SoC drivers
+#
+CONFIG_ZYNQMP_POWER=y
+CONFIG_ZYNQMP_PM_DOMAINS=y
+CONFIG_XLNX_EVENT_MANAGER=y
+# end of Xilinx SoC drivers
+# end of SOC (System On Chip) specific Drivers
+
+# CONFIG_PM_DEVFREQ is not set
+CONFIG_EXTCON=y
+
+#
+# Extcon Device Drivers
+#
+# CONFIG_EXTCON_ADC_JACK is not set
+# CONFIG_EXTCON_FSA9480 is not set
+# CONFIG_EXTCON_GPIO is not set
+# CONFIG_EXTCON_MAX3355 is not set
+# CONFIG_EXTCON_PTN5150 is not set
+# CONFIG_EXTCON_RT8973A is not set
+# CONFIG_EXTCON_SM5502 is not set
+# CONFIG_EXTCON_USB_GPIO is not set
+# CONFIG_EXTCON_USBC_TUSB320 is not set
+# CONFIG_MEMORY is not set
 CONFIG_IIO=y
+CONFIG_IIO_BUFFER=y
+# CONFIG_IIO_BUFFER_CB is not set
+# CONFIG_IIO_BUFFER_DMA is not set
+# CONFIG_IIO_BUFFER_DMAENGINE is not set
+# CONFIG_IIO_BUFFER_HW_CONSUMER is not set
+CONFIG_IIO_KFIFO_BUF=y
+CONFIG_IIO_TRIGGERED_BUFFER=y
+# CONFIG_IIO_CONFIGFS is not set
+CONFIG_IIO_TRIGGER=y
+CONFIG_IIO_CONSUMERS_PER_TRIGGER=2
+# CONFIG_IIO_SW_DEVICE is not set
+# CONFIG_IIO_SW_TRIGGER is not set
+# CONFIG_IIO_TRIGGERED_EVENT is not set
+
+#
+# Accelerometers
+#
+# CONFIG_ADIS16201 is not set
+# CONFIG_ADIS16209 is not set
+# CONFIG_ADXL345_I2C is not set
+# CONFIG_ADXL345_SPI is not set
+# CONFIG_ADXL372_SPI is not set
+# CONFIG_ADXL372_I2C is not set
+# CONFIG_BMA180 is not set
+# CONFIG_BMA220 is not set
+# CONFIG_BMA400 is not set
+# CONFIG_BMC150_ACCEL is not set
+# CONFIG_BMI088_ACCEL is not set
+# CONFIG_DA280 is not set
+# CONFIG_DA311 is not set
+# CONFIG_DMARD06 is not set
+# CONFIG_DMARD09 is not set
+# CONFIG_DMARD10 is not set
+# CONFIG_FXLS8962AF_I2C is not set
+# CONFIG_FXLS8962AF_SPI is not set
+# CONFIG_IIO_ST_ACCEL_3AXIS is not set
+# CONFIG_KXSD9 is not set
+# CONFIG_KXCJK1013 is not set
+# CONFIG_MC3230 is not set
+# CONFIG_MMA7455_I2C is not set
+# CONFIG_MMA7455_SPI is not set
+# CONFIG_MMA7660 is not set
+# CONFIG_MMA8452 is not set
+# CONFIG_MMA9551 is not set
+# CONFIG_MMA9553 is not set
+# CONFIG_MXC4005 is not set
+# CONFIG_MXC6255 is not set
+# CONFIG_SCA3000 is not set
+# CONFIG_SCA3300 is not set
+# CONFIG_STK8312 is not set
+# CONFIG_STK8BA50 is not set
+# end of Accelerometers
+
+#
+# Analog to digital converters
+#
+# CONFIG_AD7091R5 is not set
+# CONFIG_AD7124 is not set
+# CONFIG_AD7192 is not set
+# CONFIG_AD7266 is not set
+# CONFIG_AD7291 is not set
+# CONFIG_AD7292 is not set
+# CONFIG_AD7298 is not set
+# CONFIG_AD7476 is not set
+# CONFIG_AD7606_IFACE_PARALLEL is not set
+# CONFIG_AD7606_IFACE_SPI is not set
+# CONFIG_AD7766 is not set
+# CONFIG_AD7768_1 is not set
+# CONFIG_AD7780 is not set
+# CONFIG_AD7791 is not set
+# CONFIG_AD7793 is not set
+# CONFIG_AD7887 is not set
+# CONFIG_AD7923 is not set
+# CONFIG_AD7949 is not set
+# CONFIG_AD799X is not set
+# CONFIG_ADI_AXI_ADC is not set
+# CONFIG_CC10001_ADC is not set
+# CONFIG_ENVELOPE_DETECTOR is not set
+# CONFIG_HI8435 is not set
+# CONFIG_HX711 is not set
 CONFIG_INA2XX_ADC=y
 CONFIG_INA260_ADC=y
+# CONFIG_LTC2471 is not set
+# CONFIG_LTC2485 is not set
+# CONFIG_LTC2496 is not set
+# CONFIG_LTC2497 is not set
+# CONFIG_MAX1027 is not set
+# CONFIG_MAX11100 is not set
+# CONFIG_MAX1118 is not set
+# CONFIG_MAX1241 is not set
+# CONFIG_MAX1363 is not set
+# CONFIG_MAX9611 is not set
+# CONFIG_MCP320X is not set
+# CONFIG_MCP3422 is not set
+# CONFIG_MCP3911 is not set
+# CONFIG_NAU7802 is not set
+# CONFIG_SD_ADC_MODULATOR is not set
+# CONFIG_TI_ADC081C is not set
+# CONFIG_TI_ADC0832 is not set
+# CONFIG_TI_ADC084S021 is not set
+# CONFIG_TI_ADC12138 is not set
+# CONFIG_TI_ADC108S102 is not set
+# CONFIG_TI_ADC128S052 is not set
+# CONFIG_TI_ADC161S626 is not set
+# CONFIG_TI_ADS1015 is not set
+# CONFIG_TI_ADS7950 is not set
+# CONFIG_TI_ADS8344 is not set
+# CONFIG_TI_ADS8688 is not set
+# CONFIG_TI_ADS124S08 is not set
+# CONFIG_TI_ADS131E08 is not set
+# CONFIG_TI_TLC4541 is not set
+# CONFIG_TI_TSC2046 is not set
+# CONFIG_VF610_ADC is not set
 CONFIG_XILINX_XADC=y
 CONFIG_XILINX_AMS=y
+# CONFIG_VERSAL_SYSMON is not set
+# end of Analog to digital converters
+
+#
+# Analog Front Ends
+#
+# CONFIG_IIO_RESCALE is not set
+# end of Analog Front Ends
+
+#
+# Amplifiers
+#
+# CONFIG_AD8366 is not set
+# CONFIG_HMC425 is not set
+# end of Amplifiers
+
+#
+# Capacitance to digital converters
+#
+# CONFIG_AD7150 is not set
+# end of Capacitance to digital converters
+
+#
+# Chemical Sensors
+#
+# CONFIG_ATLAS_PH_SENSOR is not set
+# CONFIG_ATLAS_EZO_SENSOR is not set
 CONFIG_BME680=y
+CONFIG_BME680_I2C=y
+CONFIG_BME680_SPI=y
+# CONFIG_CCS811 is not set
+# CONFIG_IAQCORE is not set
+# CONFIG_PMS7003 is not set
+# CONFIG_SCD30_CORE is not set
+# CONFIG_SENSIRION_SGP30 is not set
+# CONFIG_SENSIRION_SGP40 is not set
+# CONFIG_SPS30_I2C is not set
+# CONFIG_SPS30_SERIAL is not set
+# CONFIG_VZ89X is not set
+# end of Chemical Sensors
+
+#
+# Hid Sensor IIO Common
+#
+# end of Hid Sensor IIO Common
+
+#
+# IIO SCMI Sensors
+#
+# end of IIO SCMI Sensors
+
+#
+# SSP Sensor Common
+#
+# CONFIG_IIO_SSP_SENSORHUB is not set
+# end of SSP Sensor Common
+
+#
+# Digital to analog converters
+#
+# CONFIG_AD5064 is not set
+# CONFIG_AD5360 is not set
+# CONFIG_AD5380 is not set
+# CONFIG_AD5421 is not set
+# CONFIG_AD5446 is not set
+# CONFIG_AD5449 is not set
+# CONFIG_AD5592R is not set
+# CONFIG_AD5593R is not set
+# CONFIG_AD5504 is not set
+# CONFIG_AD5624R_SPI is not set
+# CONFIG_AD5686_SPI is not set
+# CONFIG_AD5696_I2C is not set
+# CONFIG_AD5755 is not set
+# CONFIG_AD5758 is not set
+# CONFIG_AD5761 is not set
+# CONFIG_AD5764 is not set
+# CONFIG_AD5766 is not set
+# CONFIG_AD5770R is not set
+# CONFIG_AD5791 is not set
+# CONFIG_AD7303 is not set
+# CONFIG_AD8801 is not set
+# CONFIG_DPOT_DAC is not set
+# CONFIG_DS4424 is not set
+# CONFIG_LTC1660 is not set
+# CONFIG_LTC2632 is not set
+# CONFIG_M62332 is not set
+# CONFIG_MAX517 is not set
+# CONFIG_MAX5821 is not set
+# CONFIG_MCP4725 is not set
+# CONFIG_MCP4922 is not set
+# CONFIG_TI_DAC082S085 is not set
+# CONFIG_TI_DAC5571 is not set
+# CONFIG_TI_DAC7311 is not set
+# CONFIG_TI_DAC7612 is not set
+# CONFIG_VF610_DAC is not set
+# end of Digital to analog converters
+
+#
+# IIO dummy driver
+#
+# end of IIO dummy driver
+
+#
+# Frequency Synthesizers DDS/PLL
+#
+
+#
+# Clock Generator/Distribution
+#
+# CONFIG_AD9523 is not set
+# end of Clock Generator/Distribution
+
+#
+# Phase-Locked Loop (PLL) frequency synthesizers
+#
+# CONFIG_ADF4350 is not set
+# CONFIG_ADF4371 is not set
+# end of Phase-Locked Loop (PLL) frequency synthesizers
+# end of Frequency Synthesizers DDS/PLL
+
+#
+# Digital gyroscope sensors
+#
+# CONFIG_ADIS16080 is not set
+# CONFIG_ADIS16130 is not set
+# CONFIG_ADIS16136 is not set
+# CONFIG_ADIS16260 is not set
+# CONFIG_ADXRS290 is not set
+# CONFIG_ADXRS450 is not set
 CONFIG_BMG160=y
+CONFIG_BMG160_I2C=y
+CONFIG_BMG160_SPI=y
+# CONFIG_FXAS21002C is not set
+# CONFIG_MPU3050_I2C is not set
+# CONFIG_IIO_ST_GYRO_3AXIS is not set
+# CONFIG_ITG3200 is not set
+# end of Digital gyroscope sensors
+
+#
+# Health Sensors
+#
+
+#
+# Heart Rate Monitors
+#
+# CONFIG_AFE4403 is not set
+# CONFIG_AFE4404 is not set
+# CONFIG_MAX30100 is not set
+# CONFIG_MAX30102 is not set
+# end of Heart Rate Monitors
+# end of Health Sensors
+
+#
+# Humidity sensors
+#
+# CONFIG_AM2315 is not set
+# CONFIG_DHT11 is not set
+# CONFIG_HDC100X is not set
+# CONFIG_HDC2010 is not set
+# CONFIG_HTS221 is not set
+# CONFIG_HTU21 is not set
+# CONFIG_SI7005 is not set
+# CONFIG_SI7020 is not set
+# end of Humidity sensors
+
+#
+# Inertial measurement units
+#
+# CONFIG_ADIS16400 is not set
+# CONFIG_ADIS16460 is not set
+# CONFIG_ADIS16475 is not set
+# CONFIG_ADIS16480 is not set
+# CONFIG_BMI160_I2C is not set
+# CONFIG_BMI160_SPI is not set
+# CONFIG_FXOS8700_I2C is not set
+# CONFIG_FXOS8700_SPI is not set
+# CONFIG_KMX61 is not set
+# CONFIG_INV_ICM42600_I2C is not set
+# CONFIG_INV_ICM42600_SPI is not set
+# CONFIG_INV_MPU6050_I2C is not set
+# CONFIG_INV_MPU6050_SPI is not set
+# CONFIG_IIO_ST_LSM6DSX is not set
+# CONFIG_IIO_ST_LSM9DS0 is not set
+# end of Inertial measurement units
+
+#
+# Light sensors
+#
+# CONFIG_ADJD_S311 is not set
+# CONFIG_ADUX1020 is not set
+# CONFIG_AL3010 is not set
+# CONFIG_AL3320A is not set
+# CONFIG_APDS9300 is not set
+# CONFIG_APDS9960 is not set
+# CONFIG_AS73211 is not set
+# CONFIG_BH1750 is not set
+# CONFIG_BH1780 is not set
+# CONFIG_CM32181 is not set
+# CONFIG_CM3232 is not set
+# CONFIG_CM3323 is not set
+# CONFIG_CM3605 is not set
+# CONFIG_CM36651 is not set
+# CONFIG_GP2AP002 is not set
+# CONFIG_GP2AP020A00F is not set
+# CONFIG_SENSORS_ISL29018 is not set
+# CONFIG_SENSORS_ISL29028 is not set
+# CONFIG_ISL29125 is not set
+# CONFIG_JSA1212 is not set
+# CONFIG_RPR0521 is not set
+# CONFIG_LTR501 is not set
+# CONFIG_LV0104CS is not set
+# CONFIG_MAX44000 is not set
+# CONFIG_MAX44009 is not set
+# CONFIG_NOA1305 is not set
+# CONFIG_OPT3001 is not set
+# CONFIG_PA12203001 is not set
+# CONFIG_SI1133 is not set
+# CONFIG_SI1145 is not set
+# CONFIG_STK3310 is not set
+# CONFIG_ST_UVIS25 is not set
+# CONFIG_TCS3414 is not set
+# CONFIG_TCS3472 is not set
+# CONFIG_SENSORS_TSL2563 is not set
+# CONFIG_TSL2583 is not set
+# CONFIG_TSL2591 is not set
+# CONFIG_TSL2772 is not set
+# CONFIG_TSL4531 is not set
+# CONFIG_US5182D is not set
+# CONFIG_VCNL4000 is not set
+# CONFIG_VCNL4035 is not set
+# CONFIG_VEML6030 is not set
+# CONFIG_VEML6070 is not set
+# CONFIG_VL6180 is not set
+# CONFIG_ZOPT2201 is not set
+# end of Light sensors
+
+#
+# Magnetometer sensors
+#
+# CONFIG_AK8974 is not set
+# CONFIG_AK8975 is not set
+# CONFIG_AK09911 is not set
+CONFIG_BMC150_MAGN=y
+# CONFIG_BMC150_MAGN_I2C is not set
 CONFIG_BMC150_MAGN_SPI=y
+# CONFIG_MAG3110 is not set
+# CONFIG_MMC35240 is not set
+# CONFIG_IIO_ST_MAGN_3AXIS is not set
+# CONFIG_SENSORS_HMC5843_I2C is not set
+# CONFIG_SENSORS_HMC5843_SPI is not set
+# CONFIG_SENSORS_RM3100_I2C is not set
+# CONFIG_SENSORS_RM3100_SPI is not set
+# CONFIG_YAMAHA_YAS530 is not set
+# end of Magnetometer sensors
+
+#
+# Multiplexers
+#
+# CONFIG_IIO_MUX is not set
+# end of Multiplexers
+
+#
+# Inclinometer sensors
+#
+# end of Inclinometer sensors
+
+#
+# Triggers - standalone
+#
+# CONFIG_IIO_INTERRUPT_TRIGGER is not set
+# CONFIG_IIO_SYSFS_TRIGGER is not set
+# end of Triggers - standalone
+
+#
+# Linear and angular position sensors
+#
+# end of Linear and angular position sensors
+
+#
+# Digital potentiometers
+#
+# CONFIG_AD5110 is not set
+# CONFIG_AD5272 is not set
+# CONFIG_DS1803 is not set
+# CONFIG_MAX5432 is not set
+# CONFIG_MAX5481 is not set
+# CONFIG_MAX5487 is not set
+# CONFIG_MCP4018 is not set
+# CONFIG_MCP4131 is not set
+# CONFIG_MCP4531 is not set
+# CONFIG_MCP41010 is not set
+# CONFIG_TPL0102 is not set
+# end of Digital potentiometers
+
+#
+# Digital potentiostats
+#
+# CONFIG_LMP91000 is not set
+# end of Digital potentiostats
+
+#
+# Pressure sensors
+#
+# CONFIG_ABP060MG is not set
+# CONFIG_BMP280 is not set
+# CONFIG_DLHL60D is not set
+# CONFIG_DPS310 is not set
+# CONFIG_HP03 is not set
+# CONFIG_ICP10100 is not set
+# CONFIG_MPL115_I2C is not set
+# CONFIG_MPL115_SPI is not set
+# CONFIG_MPL3115 is not set
+# CONFIG_MS5611 is not set
+# CONFIG_MS5637 is not set
+# CONFIG_IIO_ST_PRESS is not set
+# CONFIG_T5403 is not set
+# CONFIG_HP206C is not set
+# CONFIG_ZPA2326 is not set
+# end of Pressure sensors
+
+#
+# Lightning sensors
+#
+# CONFIG_AS3935 is not set
+# end of Lightning sensors
+
+#
+# Proximity and distance sensors
+#
+# CONFIG_ISL29501 is not set
+# CONFIG_LIDAR_LITE_V2 is not set
+# CONFIG_MB1232 is not set
+# CONFIG_PING is not set
+# CONFIG_RFD77402 is not set
+# CONFIG_SRF04 is not set
+# CONFIG_SX9310 is not set
+# CONFIG_SX9500 is not set
+# CONFIG_SRF08 is not set
+# CONFIG_VCNL3020 is not set
+# CONFIG_VL53L0X_I2C is not set
+# end of Proximity and distance sensors
+
+#
+# Resolver to digital converters
+#
+# CONFIG_AD2S90 is not set
+# CONFIG_AD2S1200 is not set
+# end of Resolver to digital converters
+
+#
+# Temperature sensors
+#
+# CONFIG_LTC2983 is not set
+# CONFIG_MAXIM_THERMOCOUPLE is not set
+# CONFIG_MLX90614 is not set
+# CONFIG_MLX90632 is not set
+# CONFIG_TMP006 is not set
+# CONFIG_TMP007 is not set
+# CONFIG_TMP117 is not set
+# CONFIG_TSYS01 is not set
+# CONFIG_TSYS02D is not set
+# CONFIG_MAX31856 is not set
+# end of Temperature sensors
+
+# CONFIG_NTB is not set
+# CONFIG_VME_BUS is not set
 CONFIG_PWM=y
+CONFIG_PWM_SYSFS=y
+# CONFIG_PWM_DEBUG is not set
+# CONFIG_PWM_ATMEL_TCB is not set
+# CONFIG_PWM_DWC is not set
+# CONFIG_PWM_FSL_FTM is not set
+# CONFIG_PWM_PCA9685 is not set
 CONFIG_PWM_CADENCE=y
+
+#
+# IRQ chip support
+#
+CONFIG_IRQCHIP=y
+CONFIG_ARM_GIC=y
+CONFIG_ARM_GIC_MAX_NR=1
+CONFIG_ARM_GIC_V2M=y
+CONFIG_ARM_GIC_V3=y
+CONFIG_ARM_GIC_V3_ITS=y
+CONFIG_ARM_GIC_V3_ITS_PCI=y
+# CONFIG_AL_FIC is not set
 CONFIG_XILINX_INTC=y
+CONFIG_IRQCHIP_XILINX_INTC_MODULE_SUPPORT_EXPERIMENTAL=y
+CONFIG_PARTITION_PERCPU=y
+# end of IRQ chip support
+
+# CONFIG_IPACK_BUS is not set
 CONFIG_RESET_CONTROLLER=y
+# CONFIG_RESET_TI_SYSCON is not set
+
+#
+# PHY Subsystem
+#
+CONFIG_GENERIC_PHY=y
+# CONFIG_PHY_XGENE is not set
+# CONFIG_PHY_CAN_TRANSCEIVER is not set
+# CONFIG_BCM_KONA_USB2_PHY is not set
+# CONFIG_PHY_CADENCE_TORRENT is not set
+# CONFIG_PHY_CADENCE_DPHY is not set
+# CONFIG_PHY_CADENCE_SIERRA is not set
+# CONFIG_PHY_CADENCE_SALVO is not set
+# CONFIG_PHY_FSL_IMX8MQ_USB is not set
+# CONFIG_PHY_MIXEL_MIPI_DPHY is not set
+# CONFIG_PHY_PXA_28NM_HSIC is not set
+# CONFIG_PHY_PXA_28NM_USB2 is not set
+# CONFIG_PHY_CPCAP_USB is not set
+# CONFIG_PHY_MAPPHONE_MDM6600 is not set
+# CONFIG_PHY_OCELOT_SERDES is not set
+CONFIG_PHY_XILINX_ZYNQMP=y
+# CONFIG_PHY_XILINX_HDMIPHY is not set
+# end of PHY Subsystem
+
+# CONFIG_POWERCAP is not set
+# CONFIG_MCB is not set
+
+#
+# Performance monitor support
+#
 CONFIG_ARM_CCI_PMU=y
+CONFIG_ARM_CCI400_PMU=y
+CONFIG_ARM_CCI5xx_PMU=y
+# CONFIG_ARM_CCN is not set
+# CONFIG_ARM_CMN is not set
+CONFIG_ARM_PMU=y
+# CONFIG_ARM_DSU_PMU is not set
+# CONFIG_ARM_SPE_PMU is not set
+# end of Performance monitor support
+
 CONFIG_RAS=y
+# CONFIG_USB4 is not set
+
+#
+# Android
+#
 CONFIG_ANDROID=y
+# CONFIG_ANDROID_BINDER_IPC is not set
+# end of Android
+
+# CONFIG_LIBNVDIMM is not set
+# CONFIG_DAX is not set
+CONFIG_NVMEM=y
+CONFIG_NVMEM_SYSFS=y
 CONFIG_NVMEM_ZYNQMP=y
+# CONFIG_XLNX_SEC_CFG is not set
+# CONFIG_NVMEM_RMEM is not set
+
+#
+# HW tracing support
+#
+# CONFIG_STM is not set
+# CONFIG_INTEL_TH is not set
+# end of HW tracing support
+
 CONFIG_FPGA=y
+# CONFIG_FPGA_MGR_DEBUG_FS is not set
+# CONFIG_ALTERA_PR_IP_CORE is not set
+# CONFIG_FPGA_MGR_ALTERA_PS_SPI is not set
+# CONFIG_FPGA_MGR_ALTERA_CVP is not set
+# CONFIG_FPGA_MGR_XILINX_SPI is not set
+# CONFIG_FPGA_MGR_ICE40_SPI is not set
+# CONFIG_FPGA_MGR_MACHXO2_SPI is not set
 CONFIG_XILINX_AFI_FPGA=y
+CONFIG_FPGA_BRIDGE=y
+# CONFIG_ALTERA_FREEZE_BRIDGE is not set
 CONFIG_XILINX_PR_DECOUPLER=y
 CONFIG_FPGA_REGION=y
 CONFIG_OF_FPGA_REGION=y
+# CONFIG_FPGA_DFL is not set
 CONFIG_FPGA_MGR_ZYNQMP_FPGA=y
+# CONFIG_FPGA_MGR_VERSAL_FPGA is not set
+# CONFIG_FSI is not set
+# CONFIG_TEE is not set
+CONFIG_PM_OPP=y
+# CONFIG_SIOX is not set
+# CONFIG_SLIMBUS is not set
+# CONFIG_INTERCONNECT is not set
+# CONFIG_COUNTER is not set
+# CONFIG_MOST is not set
+# end of Device Drivers
+
+#
+# File systems
+#
+CONFIG_DCACHE_WORD_ACCESS=y
+# CONFIG_VALIDATE_FS_PARSER is not set
+CONFIG_FS_IOMAP=y
+# CONFIG_EXT2_FS is not set
 CONFIG_EXT3_FS=y
+# CONFIG_EXT3_FS_POSIX_ACL is not set
+# CONFIG_EXT3_FS_SECURITY is not set
+CONFIG_EXT4_FS=y
+CONFIG_EXT4_USE_FOR_EXT2=y
 CONFIG_EXT4_FS_POSIX_ACL=y
 CONFIG_EXT4_FS_SECURITY=y
+# CONFIG_EXT4_DEBUG is not set
+CONFIG_JBD2=y
+# CONFIG_JBD2_DEBUG is not set
+CONFIG_FS_MBCACHE=y
+# CONFIG_REISERFS_FS is not set
+# CONFIG_JFS_FS is not set
+# CONFIG_XFS_FS is not set
+# CONFIG_GFS2_FS is not set
+# CONFIG_OCFS2_FS is not set
 CONFIG_BTRFS_FS=y
+# CONFIG_BTRFS_FS_POSIX_ACL is not set
+# CONFIG_BTRFS_FS_CHECK_INTEGRITY is not set
+# CONFIG_BTRFS_FS_RUN_SANITY_TESTS is not set
+# CONFIG_BTRFS_DEBUG is not set
+# CONFIG_BTRFS_ASSERT is not set
+# CONFIG_BTRFS_FS_REF_VERIFY is not set
+# CONFIG_NILFS2_FS is not set
+# CONFIG_F2FS_FS is not set
+# CONFIG_FS_DAX is not set
+CONFIG_FS_POSIX_ACL=y
+CONFIG_EXPORTFS=y
+# CONFIG_EXPORTFS_BLOCK_OPS is not set
+CONFIG_FILE_LOCKING=y
+# CONFIG_FS_ENCRYPTION is not set
+# CONFIG_FS_VERITY is not set
+CONFIG_FSNOTIFY=y
+CONFIG_DNOTIFY=y
+CONFIG_INOTIFY_USER=y
+# CONFIG_FANOTIFY is not set
 CONFIG_QUOTA=y
+# CONFIG_QUOTA_NETLINK_INTERFACE is not set
+CONFIG_PRINT_QUOTA_WARNING=y
+# CONFIG_QUOTA_DEBUG is not set
+CONFIG_QUOTA_TREE=y
+# CONFIG_QFMT_V1 is not set
 CONFIG_QFMT_V2=y
+CONFIG_QUOTACTL=y
 CONFIG_AUTOFS4_FS=y
+CONFIG_AUTOFS_FS=y
+# CONFIG_FUSE_FS is not set
+# CONFIG_OVERLAY_FS is not set
+
+#
+# Caches
+#
+# CONFIG_FSCACHE is not set
+# end of Caches
+
+#
+# CD-ROM/DVD Filesystems
+#
 CONFIG_ISO9660_FS=y
 CONFIG_JOLIET=y
 CONFIG_ZISOFS=y
+# CONFIG_UDF_FS is not set
+# end of CD-ROM/DVD Filesystems
+
+#
+# DOS/FAT/EXFAT/NT Filesystems
+#
+CONFIG_FAT_FS=y
 CONFIG_MSDOS_FS=y
 CONFIG_VFAT_FS=y
+CONFIG_FAT_DEFAULT_CODEPAGE=437
+CONFIG_FAT_DEFAULT_IOCHARSET="iso8859-1"
+# CONFIG_FAT_DEFAULT_UTF8 is not set
+# CONFIG_EXFAT_FS is not set
+# CONFIG_NTFS_FS is not set
+# CONFIG_NTFS3_FS is not set
+# end of DOS/FAT/EXFAT/NT Filesystems
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+# CONFIG_PROC_KCORE is not set
+CONFIG_PROC_SYSCTL=y
+CONFIG_PROC_PAGE_MONITOR=y
+# CONFIG_PROC_CHILDREN is not set
+CONFIG_KERNFS=y
+CONFIG_SYSFS=y
 CONFIG_TMPFS=y
 CONFIG_TMPFS_POSIX_ACL=y
+CONFIG_TMPFS_XATTR=y
+# CONFIG_TMPFS_INODE64 is not set
+CONFIG_ARCH_SUPPORTS_HUGETLBFS=y
 CONFIG_HUGETLBFS=y
+CONFIG_HUGETLB_PAGE=y
+CONFIG_MEMFD_CREATE=y
+CONFIG_ARCH_HAS_GIGANTIC_PAGE=y
+CONFIG_CONFIGFS_FS=y
+CONFIG_EFIVAR_FS=m
+# end of Pseudo filesystems
+
+CONFIG_MISC_FILESYSTEMS=y
+# CONFIG_ORANGEFS_FS is not set
+# CONFIG_ADFS_FS is not set
+# CONFIG_AFFS_FS is not set
 CONFIG_ECRYPT_FS=y
+# CONFIG_ECRYPT_FS_MESSAGING is not set
+# CONFIG_HFS_FS is not set
+# CONFIG_HFSPLUS_FS is not set
+# CONFIG_BEFS_FS is not set
+# CONFIG_BFS_FS is not set
+# CONFIG_EFS_FS is not set
 CONFIG_JFFS2_FS=y
+CONFIG_JFFS2_FS_DEBUG=0
+CONFIG_JFFS2_FS_WRITEBUFFER=y
+# CONFIG_JFFS2_FS_WBUF_VERIFY is not set
+# CONFIG_JFFS2_SUMMARY is not set
 CONFIG_JFFS2_FS_XATTR=y
+CONFIG_JFFS2_FS_POSIX_ACL=y
+CONFIG_JFFS2_FS_SECURITY=y
 CONFIG_JFFS2_COMPRESSION_OPTIONS=y
+CONFIG_JFFS2_ZLIB=y
 CONFIG_JFFS2_LZO=y
+CONFIG_JFFS2_RTIME=y
 CONFIG_JFFS2_RUBIN=y
+# CONFIG_JFFS2_CMODE_NONE is not set
+CONFIG_JFFS2_CMODE_PRIORITY=y
+# CONFIG_JFFS2_CMODE_SIZE is not set
+# CONFIG_JFFS2_CMODE_FAVOURLZO is not set
 CONFIG_UBIFS_FS=y
+# CONFIG_UBIFS_FS_ADVANCED_COMPR is not set
+CONFIG_UBIFS_FS_LZO=y
+CONFIG_UBIFS_FS_ZLIB=y
+CONFIG_UBIFS_FS_ZSTD=y
+# CONFIG_UBIFS_ATIME_SUPPORT is not set
+CONFIG_UBIFS_FS_XATTR=y
+CONFIG_UBIFS_FS_SECURITY=y
+# CONFIG_UBIFS_FS_AUTHENTICATION is not set
 CONFIG_CRAMFS=y
+CONFIG_CRAMFS_BLOCKDEV=y
+# CONFIG_CRAMFS_MTD is not set
+# CONFIG_SQUASHFS is not set
+# CONFIG_VXFS_FS is not set
+# CONFIG_MINIX_FS is not set
+# CONFIG_OMFS_FS is not set
+# CONFIG_HPFS_FS is not set
+# CONFIG_QNX4FS_FS is not set
+# CONFIG_QNX6FS_FS is not set
+# CONFIG_ROMFS_FS is not set
+# CONFIG_PSTORE is not set
+# CONFIG_SYSV_FS is not set
+# CONFIG_UFS_FS is not set
+# CONFIG_EROFS_FS is not set
+CONFIG_NETWORK_FILESYSTEMS=y
 CONFIG_NFS_FS=y
+CONFIG_NFS_V2=y
+CONFIG_NFS_V3=y
 CONFIG_NFS_V3_ACL=y
 CONFIG_NFS_V4=y
+# CONFIG_NFS_SWAP is not set
 CONFIG_NFS_V4_1=y
 CONFIG_NFS_V4_2=y
+CONFIG_PNFS_FILE_LAYOUT=y
+CONFIG_PNFS_FLEXFILE_LAYOUT=y
+CONFIG_NFS_V4_1_IMPLEMENTATION_ID_DOMAIN="kernel.org"
+# CONFIG_NFS_V4_1_MIGRATION is not set
 CONFIG_ROOT_NFS=y
+# CONFIG_NFS_USE_LEGACY_DNS is not set
+CONFIG_NFS_USE_KERNEL_DNS=y
+CONFIG_NFS_DISABLE_UDP_SUPPORT=y
+# CONFIG_NFS_V4_2_READ_PLUS is not set
+# CONFIG_NFSD is not set
+CONFIG_GRACE_PERIOD=y
+CONFIG_LOCKD=y
+CONFIG_LOCKD_V4=y
+CONFIG_NFS_ACL_SUPPORT=y
+CONFIG_NFS_COMMON=y
+CONFIG_NFS_V4_2_SSC_HELPER=y
+CONFIG_SUNRPC=y
+CONFIG_SUNRPC_GSS=y
+CONFIG_SUNRPC_BACKCHANNEL=y
+# CONFIG_SUNRPC_DEBUG is not set
+# CONFIG_CEPH_FS is not set
+# CONFIG_CIFS is not set
+# CONFIG_SMB_SERVER is not set
+# CONFIG_CODA_FS is not set
+# CONFIG_AFS_FS is not set
+# CONFIG_9P_FS is not set
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="iso8859-1"
 CONFIG_NLS_CODEPAGE_437=y
+# CONFIG_NLS_CODEPAGE_737 is not set
+# CONFIG_NLS_CODEPAGE_775 is not set
+# CONFIG_NLS_CODEPAGE_850 is not set
+# CONFIG_NLS_CODEPAGE_852 is not set
+# CONFIG_NLS_CODEPAGE_855 is not set
+# CONFIG_NLS_CODEPAGE_857 is not set
+# CONFIG_NLS_CODEPAGE_860 is not set
+# CONFIG_NLS_CODEPAGE_861 is not set
+# CONFIG_NLS_CODEPAGE_862 is not set
+# CONFIG_NLS_CODEPAGE_863 is not set
+# CONFIG_NLS_CODEPAGE_864 is not set
+# CONFIG_NLS_CODEPAGE_865 is not set
+# CONFIG_NLS_CODEPAGE_866 is not set
+# CONFIG_NLS_CODEPAGE_869 is not set
+# CONFIG_NLS_CODEPAGE_936 is not set
+# CONFIG_NLS_CODEPAGE_950 is not set
+# CONFIG_NLS_CODEPAGE_932 is not set
+# CONFIG_NLS_CODEPAGE_949 is not set
+# CONFIG_NLS_CODEPAGE_874 is not set
+# CONFIG_NLS_ISO8859_8 is not set
+# CONFIG_NLS_CODEPAGE_1250 is not set
+# CONFIG_NLS_CODEPAGE_1251 is not set
+# CONFIG_NLS_ASCII is not set
 CONFIG_NLS_ISO8859_1=y
+# CONFIG_NLS_ISO8859_2 is not set
+# CONFIG_NLS_ISO8859_3 is not set
+# CONFIG_NLS_ISO8859_4 is not set
+# CONFIG_NLS_ISO8859_5 is not set
+# CONFIG_NLS_ISO8859_6 is not set
+# CONFIG_NLS_ISO8859_7 is not set
+# CONFIG_NLS_ISO8859_9 is not set
+# CONFIG_NLS_ISO8859_13 is not set
+# CONFIG_NLS_ISO8859_14 is not set
+# CONFIG_NLS_ISO8859_15 is not set
+# CONFIG_NLS_KOI8_R is not set
+# CONFIG_NLS_KOI8_U is not set
+# CONFIG_NLS_MAC_ROMAN is not set
+# CONFIG_NLS_MAC_CELTIC is not set
+# CONFIG_NLS_MAC_CENTEURO is not set
+# CONFIG_NLS_MAC_CROATIAN is not set
+# CONFIG_NLS_MAC_CYRILLIC is not set
+# CONFIG_NLS_MAC_GAELIC is not set
+# CONFIG_NLS_MAC_GREEK is not set
+# CONFIG_NLS_MAC_ICELAND is not set
+# CONFIG_NLS_MAC_INUIT is not set
+# CONFIG_NLS_MAC_ROMANIAN is not set
+# CONFIG_NLS_MAC_TURKISH is not set
+# CONFIG_NLS_UTF8 is not set
+# CONFIG_DLM is not set
+# CONFIG_UNICODE is not set
+CONFIG_IO_WQ=y
+# end of File systems
+
+#
+# Security options
+#
+CONFIG_KEYS=y
+# CONFIG_KEYS_REQUEST_CACHE is not set
+# CONFIG_PERSISTENT_KEYRINGS is not set
+# CONFIG_TRUSTED_KEYS is not set
+# CONFIG_ENCRYPTED_KEYS is not set
+# CONFIG_KEY_DH_OPERATIONS is not set
+# CONFIG_SECURITY_DMESG_RESTRICT is not set
+# CONFIG_SECURITY is not set
+CONFIG_SECURITYFS=y
+CONFIG_HAVE_HARDENED_USERCOPY_ALLOCATOR=y
+# CONFIG_HARDENED_USERCOPY is not set
+# CONFIG_FORTIFY_SOURCE is not set
+# CONFIG_STATIC_USERMODEHELPER is not set
+# CONFIG_IMA_SECURE_AND_OR_TRUSTED_BOOT is not set
+CONFIG_DEFAULT_SECURITY_DAC=y
+CONFIG_LSM="landlock,lockdown,yama,loadpin,safesetid,integrity,bpf"
+
+#
+# Kernel hardening options
+#
+
+#
+# Memory initialization
+#
+CONFIG_INIT_STACK_NONE=y
+# CONFIG_GCC_PLUGIN_STRUCTLEAK_USER is not set
+# CONFIG_GCC_PLUGIN_STRUCTLEAK_BYREF is not set
+# CONFIG_GCC_PLUGIN_STRUCTLEAK_BYREF_ALL is not set
+# CONFIG_GCC_PLUGIN_STACKLEAK is not set
+# CONFIG_INIT_ON_ALLOC_DEFAULT_ON is not set
+# CONFIG_INIT_ON_FREE_DEFAULT_ON is not set
+CONFIG_CC_HAS_ZERO_CALL_USED_REGS=y
+# CONFIG_ZERO_CALL_USED_REGS is not set
+# end of Memory initialization
+# end of Kernel hardening options
+# end of Security options
+
+CONFIG_XOR_BLOCKS=y
+CONFIG_CRYPTO=y
+
+#
+# Crypto core or helper
+#
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ALGAPI2=y
+CONFIG_CRYPTO_AEAD=y
+CONFIG_CRYPTO_AEAD2=y
+CONFIG_CRYPTO_SKCIPHER=y
+CONFIG_CRYPTO_SKCIPHER2=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_HASH2=y
+CONFIG_CRYPTO_RNG=y
+CONFIG_CRYPTO_RNG2=y
+CONFIG_CRYPTO_RNG_DEFAULT=y
+CONFIG_CRYPTO_AKCIPHER2=y
+CONFIG_CRYPTO_AKCIPHER=y
+CONFIG_CRYPTO_KPP2=y
+CONFIG_CRYPTO_KPP=y
+CONFIG_CRYPTO_ACOMP2=y
+CONFIG_CRYPTO_MANAGER=y
+CONFIG_CRYPTO_MANAGER2=y
+# CONFIG_CRYPTO_USER is not set
 # CONFIG_CRYPTO_MANAGER_DISABLE_TESTS is not set
+# CONFIG_CRYPTO_MANAGER_EXTRA_TESTS is not set
+CONFIG_CRYPTO_GF128MUL=y
+CONFIG_CRYPTO_NULL=y
+CONFIG_CRYPTO_NULL2=y
+# CONFIG_CRYPTO_PCRYPT is not set
+# CONFIG_CRYPTO_CRYPTD is not set
+# CONFIG_CRYPTO_AUTHENC is not set
+# CONFIG_CRYPTO_TEST is not set
+
+#
+# Public-key cryptography
+#
+CONFIG_CRYPTO_RSA=y
+# CONFIG_CRYPTO_DH is not set
+CONFIG_CRYPTO_ECC=y
+CONFIG_CRYPTO_ECDH=y
+# CONFIG_CRYPTO_ECDSA is not set
+# CONFIG_CRYPTO_ECRDSA is not set
+# CONFIG_CRYPTO_SM2 is not set
+# CONFIG_CRYPTO_CURVE25519 is not set
+
+#
+# Authenticated Encryption with Associated Data
+#
+CONFIG_CRYPTO_CCM=y
+CONFIG_CRYPTO_GCM=y
+# CONFIG_CRYPTO_CHACHA20POLY1305 is not set
+# CONFIG_CRYPTO_AEGIS128 is not set
+# CONFIG_CRYPTO_SEQIV is not set
+# CONFIG_CRYPTO_ECHAINIV is not set
+
+#
+# Block modes
+#
+CONFIG_CRYPTO_CBC=y
+# CONFIG_CRYPTO_CFB is not set
+CONFIG_CRYPTO_CTR=y
+# CONFIG_CRYPTO_CTS is not set
+CONFIG_CRYPTO_ECB=y
+# CONFIG_CRYPTO_LRW is not set
+# CONFIG_CRYPTO_OFB is not set
+# CONFIG_CRYPTO_PCBC is not set
+# CONFIG_CRYPTO_XTS is not set
+# CONFIG_CRYPTO_KEYWRAP is not set
+# CONFIG_CRYPTO_ADIANTUM is not set
+# CONFIG_CRYPTO_ESSIV is not set
+
+#
+# Hash modes
+#
+CONFIG_CRYPTO_CMAC=y
+CONFIG_CRYPTO_HMAC=y
+# CONFIG_CRYPTO_XCBC is not set
+# CONFIG_CRYPTO_VMAC is not set
+
+#
+# Digest
+#
+CONFIG_CRYPTO_CRC32C=y
+# CONFIG_CRYPTO_CRC32 is not set
+CONFIG_CRYPTO_XXHASH=y
+CONFIG_CRYPTO_BLAKE2B=y
+# CONFIG_CRYPTO_BLAKE2S is not set
 CONFIG_CRYPTO_CRCT10DIF=y
+CONFIG_CRYPTO_GHASH=y
+# CONFIG_CRYPTO_POLY1305 is not set
+# CONFIG_CRYPTO_MD4 is not set
+CONFIG_CRYPTO_MD5=y
+# CONFIG_CRYPTO_MICHAEL_MIC is not set
+# CONFIG_CRYPTO_RMD160 is not set
+# CONFIG_CRYPTO_SHA1 is not set
+CONFIG_CRYPTO_SHA256=y
+CONFIG_CRYPTO_SHA512=y
+# CONFIG_CRYPTO_SHA3 is not set
+# CONFIG_CRYPTO_SM3 is not set
+# CONFIG_CRYPTO_STREEBOG is not set
+# CONFIG_CRYPTO_WP512 is not set
+
+#
+# Ciphers
+#
+CONFIG_CRYPTO_AES=y
+# CONFIG_CRYPTO_AES_TI is not set
+# CONFIG_CRYPTO_ANUBIS is not set
+# CONFIG_CRYPTO_ARC4 is not set
+# CONFIG_CRYPTO_BLOWFISH is not set
+# CONFIG_CRYPTO_CAMELLIA is not set
+# CONFIG_CRYPTO_CAST5 is not set
+# CONFIG_CRYPTO_CAST6 is not set
+# CONFIG_CRYPTO_DES is not set
+# CONFIG_CRYPTO_FCRYPT is not set
+# CONFIG_CRYPTO_KHAZAD is not set
+# CONFIG_CRYPTO_CHACHA20 is not set
+# CONFIG_CRYPTO_SEED is not set
+# CONFIG_CRYPTO_SERPENT is not set
+# CONFIG_CRYPTO_SM4 is not set
+# CONFIG_CRYPTO_TEA is not set
+# CONFIG_CRYPTO_TWOFISH is not set
+
+#
+# Compression
+#
+CONFIG_CRYPTO_DEFLATE=y
+CONFIG_CRYPTO_LZO=y
+# CONFIG_CRYPTO_842 is not set
+# CONFIG_CRYPTO_LZ4 is not set
+# CONFIG_CRYPTO_LZ4HC is not set
+CONFIG_CRYPTO_ZSTD=y
+
+#
+# Random Number Generation
+#
+# CONFIG_CRYPTO_ANSI_CPRNG is not set
+CONFIG_CRYPTO_DRBG_MENU=y
+CONFIG_CRYPTO_DRBG_HMAC=y
+# CONFIG_CRYPTO_DRBG_HASH is not set
+# CONFIG_CRYPTO_DRBG_CTR is not set
+CONFIG_CRYPTO_DRBG=y
+CONFIG_CRYPTO_JITTERENTROPY=y
+CONFIG_CRYPTO_USER_API=y
 CONFIG_CRYPTO_USER_API_HASH=y
 CONFIG_CRYPTO_USER_API_SKCIPHER=y
+# CONFIG_CRYPTO_USER_API_RNG is not set
+# CONFIG_CRYPTO_USER_API_AEAD is not set
+CONFIG_CRYPTO_USER_API_ENABLE_OBSOLETE=y
+CONFIG_CRYPTO_HASH_INFO=y
+
+#
+# Crypto library routines
+#
+CONFIG_CRYPTO_LIB_AES=y
+CONFIG_CRYPTO_LIB_ARC4=y
+# CONFIG_CRYPTO_LIB_BLAKE2S is not set
+# CONFIG_CRYPTO_LIB_CHACHA is not set
+# CONFIG_CRYPTO_LIB_CURVE25519 is not set
+CONFIG_CRYPTO_LIB_POLY1305_RSIZE=9
+# CONFIG_CRYPTO_LIB_POLY1305 is not set
+# CONFIG_CRYPTO_LIB_CHACHA20POLY1305 is not set
+CONFIG_CRYPTO_LIB_SHA256=y
+CONFIG_CRYPTO_HW=y
+# CONFIG_CRYPTO_DEV_ATMEL_ECC is not set
+# CONFIG_CRYPTO_DEV_ATMEL_SHA204A is not set
+# CONFIG_CRYPTO_DEV_CCP is not set
+# CONFIG_CRYPTO_DEV_NITROX_CNN55XX is not set
+# CONFIG_CRYPTO_DEV_CAVIUM_ZIP is not set
+CONFIG_CRYPTO_DEV_ZYNQMP_KECCAK_384=y
 CONFIG_CRYPTO_DEV_XILINX_RSA=y
+# CONFIG_CRYPTO_DEV_ZYNQMP_AES is not set
 CONFIG_CRYPTO_DEV_ZYNQMP_AES_SKCIPHER=y
+# CONFIG_CRYPTO_DEV_VIRTIO is not set
+# CONFIG_CRYPTO_DEV_SAFEXCEL is not set
+# CONFIG_CRYPTO_DEV_CCREE is not set
+# CONFIG_CRYPTO_DEV_HISI_SEC is not set
+# CONFIG_CRYPTO_DEV_AMLOGIC_GXL is not set
+CONFIG_ASYMMETRIC_KEY_TYPE=y
+CONFIG_ASYMMETRIC_PUBLIC_KEY_SUBTYPE=y
+CONFIG_X509_CERTIFICATE_PARSER=y
+# CONFIG_PKCS8_PRIVATE_KEY_PARSER is not set
+CONFIG_PKCS7_MESSAGE_PARSER=y
+# CONFIG_PKCS7_TEST_KEY is not set
+# CONFIG_SIGNED_PE_FILE_VERIFICATION is not set
+
+#
+# Certificates for signature checking
+#
+CONFIG_SYSTEM_TRUSTED_KEYRING=y
+CONFIG_SYSTEM_TRUSTED_KEYS=""
+# CONFIG_SYSTEM_EXTRA_CERTIFICATE is not set
+# CONFIG_SECONDARY_TRUSTED_KEYRING is not set
+# CONFIG_SYSTEM_BLACKLIST_KEYRING is not set
+# end of Certificates for signature checking
+
+#
+# Library routines
+#
+CONFIG_RAID6_PQ=y
+CONFIG_RAID6_PQ_BENCHMARK=y
+CONFIG_LINEAR_RANGES=y
+# CONFIG_PACKING is not set
+CONFIG_BITREVERSE=y
+CONFIG_HAVE_ARCH_BITREVERSE=y
+CONFIG_GENERIC_STRNCPY_FROM_USER=y
+CONFIG_GENERIC_STRNLEN_USER=y
+CONFIG_GENERIC_NET_UTILS=y
+CONFIG_GENERIC_FIND_FIRST_BIT=y
+# CONFIG_CORDIC is not set
+# CONFIG_PRIME_NUMBERS is not set
+CONFIG_RATIONAL=y
+CONFIG_GENERIC_PCI_IOMAP=y
+CONFIG_ARCH_USE_CMPXCHG_LOCKREF=y
+CONFIG_ARCH_HAS_FAST_MULTIPLIER=y
+CONFIG_ARCH_USE_SYM_ANNOTATIONS=y
+# CONFIG_INDIRECT_PIO is not set
+# CONFIG_CRC_CCITT is not set
+CONFIG_CRC16=y
+# CONFIG_CRC_T10DIF is not set
+# CONFIG_CRC_ITU_T is not set
+CONFIG_CRC32=y
+# CONFIG_CRC32_SELFTEST is not set
+CONFIG_CRC32_SLICEBY8=y
+# CONFIG_CRC32_SLICEBY4 is not set
+# CONFIG_CRC32_SARWATE is not set
+# CONFIG_CRC32_BIT is not set
+# CONFIG_CRC64 is not set
+# CONFIG_CRC4 is not set
+CONFIG_CRC7=y
+CONFIG_LIBCRC32C=y
+# CONFIG_CRC8 is not set
+CONFIG_XXHASH=y
+CONFIG_AUDIT_GENERIC=y
+CONFIG_AUDIT_ARCH_COMPAT_GENERIC=y
+CONFIG_AUDIT_COMPAT_GENERIC=y
+# CONFIG_RANDOM32_SELFTEST is not set
+CONFIG_ZLIB_INFLATE=y
+CONFIG_ZLIB_DEFLATE=y
+CONFIG_LZO_COMPRESS=y
+CONFIG_LZO_DECOMPRESS=y
+CONFIG_LZ4_DECOMPRESS=y
+CONFIG_ZSTD_COMPRESS=y
+CONFIG_ZSTD_DECOMPRESS=y
+CONFIG_XZ_DEC=y
+CONFIG_XZ_DEC_X86=y
+CONFIG_XZ_DEC_POWERPC=y
+CONFIG_XZ_DEC_IA64=y
+CONFIG_XZ_DEC_ARM=y
+CONFIG_XZ_DEC_ARMTHUMB=y
+CONFIG_XZ_DEC_SPARC=y
+CONFIG_XZ_DEC_BCJ=y
+# CONFIG_XZ_DEC_TEST is not set
+CONFIG_DECOMPRESS_GZIP=y
+CONFIG_DECOMPRESS_BZIP2=y
+CONFIG_DECOMPRESS_LZMA=y
+CONFIG_DECOMPRESS_XZ=y
+CONFIG_DECOMPRESS_LZO=y
+CONFIG_DECOMPRESS_LZ4=y
+CONFIG_DECOMPRESS_ZSTD=y
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_BCH=y
+CONFIG_XARRAY_MULTI=y
+CONFIG_ASSOCIATIVE_ARRAY=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT_MAP=y
+CONFIG_HAS_DMA=y
+CONFIG_DMA_OPS=y
+CONFIG_NEED_SG_DMA_LENGTH=y
+CONFIG_NEED_DMA_MAP_STATE=y
+CONFIG_ARCH_DMA_ADDR_T_64BIT=y
+CONFIG_DMA_DECLARE_COHERENT=y
+CONFIG_ARCH_HAS_SETUP_DMA_OPS=y
+CONFIG_ARCH_HAS_TEARDOWN_DMA_OPS=y
+CONFIG_ARCH_HAS_SYNC_DMA_FOR_DEVICE=y
+CONFIG_ARCH_HAS_SYNC_DMA_FOR_CPU=y
+CONFIG_ARCH_HAS_DMA_PREP_COHERENT=y
+CONFIG_SWIOTLB=y
+# CONFIG_DMA_RESTRICTED_POOL is not set
+CONFIG_DMA_NONCOHERENT_MMAP=y
+CONFIG_DMA_COHERENT_POOL=y
+CONFIG_DMA_REMAP=y
+CONFIG_DMA_DIRECT_REMAP=y
 CONFIG_DMA_CMA=y
+# CONFIG_DMA_PERNUMA_CMA is not set
+
+#
+# Default contiguous memory area size:
+#
 CONFIG_CMA_SIZE_MBYTES=256
+CONFIG_CMA_SIZE_SEL_MBYTES=y
+# CONFIG_CMA_SIZE_SEL_PERCENTAGE is not set
+# CONFIG_CMA_SIZE_SEL_MIN is not set
+# CONFIG_CMA_SIZE_SEL_MAX is not set
+CONFIG_CMA_ALIGNMENT=8
+# CONFIG_DMA_API_DEBUG is not set
+# CONFIG_DMA_MAP_BENCHMARK is not set
+CONFIG_SGL_ALLOC=y
+CONFIG_CPU_RMAP=y
+CONFIG_DQL=y
+CONFIG_GLOB=y
+# CONFIG_GLOB_SELFTEST is not set
+CONFIG_NLATTR=y
+CONFIG_CLZ_TAB=y
+# CONFIG_IRQ_POLL is not set
+CONFIG_MPILIB=y
+CONFIG_LIBFDT=y
+CONFIG_OID_REGISTRY=y
+CONFIG_UCS2_STRING=y
+CONFIG_HAVE_GENERIC_VDSO=y
+CONFIG_GENERIC_GETTIMEOFDAY=y
+CONFIG_GENERIC_VDSO_TIME_NS=y
+CONFIG_FONT_SUPPORT=y
+# CONFIG_FONTS is not set
+CONFIG_FONT_8x8=y
+CONFIG_FONT_8x16=y
+CONFIG_SG_POOL=y
+CONFIG_ARCH_STACKWALK=y
+CONFIG_SBITMAP=y
+# end of Library routines
+
+CONFIG_GENERIC_LIB_DEVMEM_IS_ALLOWED=y
+
+#
+# Kernel hacking
+#
+
+#
+# printk and dmesg options
+#
 CONFIG_PRINTK_TIME=y
+# CONFIG_PRINTK_CALLER is not set
+# CONFIG_STACKTRACE_BUILD_ID is not set
+CONFIG_CONSOLE_LOGLEVEL_DEFAULT=7
+CONFIG_CONSOLE_LOGLEVEL_QUIET=4
+CONFIG_MESSAGE_LOGLEVEL_DEFAULT=4
+# CONFIG_BOOT_PRINTK_DELAY is not set
+# CONFIG_DYNAMIC_DEBUG is not set
+# CONFIG_DYNAMIC_DEBUG_CORE is not set
+CONFIG_SYMBOLIC_ERRNAME=y
+CONFIG_DEBUG_BUGVERBOSE=y
+# end of printk and dmesg options
+
+#
+# Compile-time checks and compiler options
+#
 CONFIG_DEBUG_INFO=y
+# CONFIG_DEBUG_INFO_REDUCED is not set
+# CONFIG_DEBUG_INFO_COMPRESSED is not set
+# CONFIG_DEBUG_INFO_SPLIT is not set
+CONFIG_DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT=y
+# CONFIG_DEBUG_INFO_DWARF4 is not set
+# CONFIG_DEBUG_INFO_DWARF5 is not set
+# CONFIG_DEBUG_INFO_BTF is not set
+# CONFIG_GDB_SCRIPTS is not set
+CONFIG_FRAME_WARN=2048
+# CONFIG_STRIP_ASM_SYMS is not set
+# CONFIG_READABLE_ASM is not set
+# CONFIG_HEADERS_INSTALL is not set
+# CONFIG_DEBUG_SECTION_MISMATCH is not set
+CONFIG_SECTION_MISMATCH_WARN_ONLY=y
+# CONFIG_DEBUG_FORCE_FUNCTION_ALIGN_64B is not set
+CONFIG_ARCH_WANT_FRAME_POINTERS=y
+CONFIG_FRAME_POINTER=y
+# CONFIG_VMLINUX_MAP is not set
+# CONFIG_DEBUG_FORCE_WEAK_PER_CPU is not set
+# end of Compile-time checks and compiler options
+
+#
+# Generic Kernel Debugging Instruments
+#
 CONFIG_MAGIC_SYSRQ=y
+CONFIG_MAGIC_SYSRQ_DEFAULT_ENABLE=0x1
+CONFIG_MAGIC_SYSRQ_SERIAL=y
+CONFIG_MAGIC_SYSRQ_SERIAL_SEQUENCE=""
 CONFIG_DEBUG_FS=y
+CONFIG_DEBUG_FS_ALLOW_ALL=y
+# CONFIG_DEBUG_FS_DISALLOW_MOUNT is not set
+# CONFIG_DEBUG_FS_ALLOW_NONE is not set
+CONFIG_HAVE_ARCH_KGDB=y
+# CONFIG_KGDB is not set
+CONFIG_ARCH_HAS_UBSAN_SANITIZE_ALL=y
+# CONFIG_UBSAN is not set
+CONFIG_HAVE_KCSAN_COMPILER=y
+# end of Generic Kernel Debugging Instruments
+
+CONFIG_DEBUG_KERNEL=y
+CONFIG_DEBUG_MISC=y
+
+#
+# Memory Debugging
+#
+# CONFIG_PAGE_EXTENSION is not set
+# CONFIG_DEBUG_PAGEALLOC is not set
+# CONFIG_PAGE_OWNER is not set
+# CONFIG_PAGE_POISONING is not set
+# CONFIG_DEBUG_RODATA_TEST is not set
+CONFIG_ARCH_HAS_DEBUG_WX=y
+# CONFIG_DEBUG_WX is not set
+CONFIG_GENERIC_PTDUMP=y
+# CONFIG_PTDUMP_DEBUGFS is not set
+# CONFIG_DEBUG_OBJECTS is not set
+# CONFIG_DEBUG_SLAB is not set
+CONFIG_HAVE_DEBUG_KMEMLEAK=y
+# CONFIG_DEBUG_KMEMLEAK is not set
+# CONFIG_DEBUG_STACK_USAGE is not set
+# CONFIG_SCHED_STACK_END_CHECK is not set
+CONFIG_ARCH_HAS_DEBUG_VM_PGTABLE=y
+# CONFIG_DEBUG_VM is not set
+# CONFIG_DEBUG_VM_PGTABLE is not set
+CONFIG_ARCH_HAS_DEBUG_VIRTUAL=y
+# CONFIG_DEBUG_VIRTUAL is not set
+# CONFIG_DEBUG_MEMORY_INIT is not set
+# CONFIG_DEBUG_PER_CPU_MAPS is not set
+CONFIG_HAVE_ARCH_KASAN=y
+CONFIG_HAVE_ARCH_KASAN_SW_TAGS=y
+CONFIG_HAVE_ARCH_KASAN_HW_TAGS=y
+CONFIG_HAVE_ARCH_KASAN_VMALLOC=y
+CONFIG_CC_HAS_KASAN_GENERIC=y
+CONFIG_CC_HAS_KASAN_SW_TAGS=y
+CONFIG_CC_HAS_WORKING_NOSANITIZE_ADDRESS=y
+# CONFIG_KASAN is not set
+CONFIG_HAVE_ARCH_KFENCE=y
+# CONFIG_KFENCE is not set
+# end of Memory Debugging
+
+# CONFIG_DEBUG_SHIRQ is not set
+
+#
+# Debug Oops, Lockups and Hangs
+#
+# CONFIG_PANIC_ON_OOPS is not set
+CONFIG_PANIC_ON_OOPS_VALUE=0
+CONFIG_PANIC_TIMEOUT=0
+# CONFIG_SOFTLOCKUP_DETECTOR is not set
+# CONFIG_DETECT_HUNG_TASK is not set
+# CONFIG_WQ_WATCHDOG is not set
+# CONFIG_TEST_LOCKUP is not set
+# end of Debug Oops, Lockups and Hangs
+
+#
+# Scheduler Debugging
+#
 # CONFIG_SCHED_DEBUG is not set
+CONFIG_SCHED_INFO=y
+# CONFIG_SCHEDSTATS is not set
+# end of Scheduler Debugging
+
+# CONFIG_DEBUG_TIMEKEEPING is not set
+
+#
+# Lock Debugging (spinlocks, mutexes, etc...)
+#
+CONFIG_LOCK_DEBUGGING_SUPPORT=y
+# CONFIG_PROVE_LOCKING is not set
+# CONFIG_LOCK_STAT is not set
+# CONFIG_DEBUG_RT_MUTEXES is not set
+# CONFIG_DEBUG_SPINLOCK is not set
+# CONFIG_DEBUG_MUTEXES is not set
+# CONFIG_DEBUG_WW_MUTEX_SLOWPATH is not set
+# CONFIG_DEBUG_RWSEMS is not set
+# CONFIG_DEBUG_LOCK_ALLOC is not set
+# CONFIG_DEBUG_ATOMIC_SLEEP is not set
+# CONFIG_DEBUG_LOCKING_API_SELFTESTS is not set
+# CONFIG_LOCK_TORTURE_TEST is not set
+# CONFIG_WW_MUTEX_SELFTEST is not set
+# CONFIG_SCF_TORTURE_TEST is not set
+# CONFIG_CSD_LOCK_WAIT_DEBUG is not set
+# end of Lock Debugging (spinlocks, mutexes, etc...)
+
+# CONFIG_DEBUG_IRQFLAGS is not set
+# CONFIG_STACKTRACE is not set
+# CONFIG_WARN_ALL_UNSEEDED_RANDOM is not set
+# CONFIG_DEBUG_KOBJECT is not set
+
+#
+# Debug kernel data structures
+#
+# CONFIG_DEBUG_LIST is not set
+# CONFIG_DEBUG_PLIST is not set
+# CONFIG_DEBUG_SG is not set
+# CONFIG_DEBUG_NOTIFIERS is not set
+# CONFIG_BUG_ON_DATA_CORRUPTION is not set
+# end of Debug kernel data structures
+
+# CONFIG_DEBUG_CREDENTIALS is not set
+
+#
+# RCU Debugging
+#
+# CONFIG_RCU_SCALE_TEST is not set
+# CONFIG_RCU_TORTURE_TEST is not set
+# CONFIG_RCU_REF_SCALE_TEST is not set
+CONFIG_RCU_CPU_STALL_TIMEOUT=21
+CONFIG_RCU_TRACE=y
+# CONFIG_RCU_EQS_DEBUG is not set
+# end of RCU Debugging
+
+# CONFIG_DEBUG_WQ_FORCE_RR_CPU is not set
+# CONFIG_CPU_HOTPLUG_STATE_CONTROL is not set
+# CONFIG_LATENCYTOP is not set
+CONFIG_HAVE_FUNCTION_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_TRACER=y
+CONFIG_HAVE_DYNAMIC_FTRACE=y
+CONFIG_HAVE_DYNAMIC_FTRACE_WITH_REGS=y
+CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y
+CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
+CONFIG_HAVE_C_RECORDMCOUNT=y
+CONFIG_TRACE_CLOCK=y
+CONFIG_TRACING_SUPPORT=y
 # CONFIG_FTRACE is not set
+# CONFIG_SAMPLES is not set
 # CONFIG_STRICT_DEVMEM is not set
+
+#
+# arm64 Debugging
+#
+# CONFIG_PID_IN_CONTEXTIDR is not set
+# CONFIG_DEBUG_EFI is not set
+# CONFIG_ARM64_RELOC_TEST is not set
+# CONFIG_CORESIGHT is not set
+# end of arm64 Debugging
+
+#
+# Kernel Testing and Coverage
+#
+# CONFIG_KUNIT is not set
+# CONFIG_NOTIFIER_ERROR_INJECTION is not set
+# CONFIG_FAULT_INJECTION is not set
+CONFIG_ARCH_HAS_KCOV=y
+CONFIG_CC_HAS_SANCOV_TRACE_PC=y
+# CONFIG_KCOV is not set
+CONFIG_RUNTIME_TESTING_MENU=y
+# CONFIG_LKDTM is not set
+# CONFIG_TEST_MIN_HEAP is not set
+# CONFIG_TEST_DIV64 is not set
+# CONFIG_BACKTRACE_SELF_TEST is not set
+# CONFIG_RBTREE_TEST is not set
+# CONFIG_REED_SOLOMON_TEST is not set
+# CONFIG_INTERVAL_TREE_TEST is not set
+# CONFIG_PERCPU_TEST is not set
+# CONFIG_ATOMIC64_SELFTEST is not set
+# CONFIG_TEST_HEXDUMP is not set
+# CONFIG_STRING_SELFTEST is not set
+# CONFIG_TEST_STRING_HELPERS is not set
+# CONFIG_TEST_STRSCPY is not set
+# CONFIG_TEST_KSTRTOX is not set
+# CONFIG_TEST_PRINTF is not set
+# CONFIG_TEST_SCANF is not set
+# CONFIG_TEST_BITMAP is not set
+# CONFIG_TEST_UUID is not set
+# CONFIG_TEST_XARRAY is not set
+# CONFIG_TEST_OVERFLOW is not set
+# CONFIG_TEST_RHASHTABLE is not set
+# CONFIG_TEST_HASH is not set
+# CONFIG_TEST_IDA is not set
+# CONFIG_TEST_LKM is not set
+# CONFIG_TEST_BITOPS is not set
+# CONFIG_TEST_VMALLOC is not set
+# CONFIG_TEST_USER_COPY is not set
+# CONFIG_TEST_BPF is not set
+# CONFIG_TEST_BLACKHOLE_DEV is not set
+# CONFIG_FIND_BIT_BENCHMARK is not set
+# CONFIG_TEST_FIRMWARE is not set
+# CONFIG_TEST_SYSCTL is not set
+# CONFIG_TEST_UDELAY is not set
+# CONFIG_TEST_STATIC_KEYS is not set
+# CONFIG_TEST_KMOD is not set
+# CONFIG_TEST_MEMCAT_P is not set
+# CONFIG_TEST_STACKINIT is not set
+# CONFIG_TEST_MEMINIT is not set
+# CONFIG_TEST_FREE_PAGES is not set
+CONFIG_ARCH_USE_MEMTEST=y
+# CONFIG_MEMTEST is not set
+# end of Kernel Testing and Coverage
+# end of Kernel hacking
diff --git a/drivers/dma/xilinx/xilinx_frmbuf.c b/drivers/dma/xilinx/xilinx_frmbuf.c
index 6a2aac45b..510249675 100644
--- a/drivers/dma/xilinx/xilinx_frmbuf.c
+++ b/drivers/dma/xilinx/xilinx_frmbuf.c
@@ -164,7 +164,6 @@ struct xilinx_frmbuf_tx_descriptor {
  * @chan_node: Member of a list of framebuffer channel instances
  * @pending_list: Descriptors waiting
  * @done_list: Complete descriptors
- * @staged_desc: Next buffer to be programmed
  * @active_desc: Currently active buffer being read/written to
  * @common: DMA common channel
  * @dev: The dma device
@@ -187,7 +186,6 @@ struct xilinx_frmbuf_chan {
 	struct list_head chan_node;
 	struct list_head pending_list;
 	struct list_head done_list;
-	struct xilinx_frmbuf_tx_descriptor *staged_desc;
 	struct xilinx_frmbuf_tx_descriptor *active_desc;
 	struct dma_chan common;
 	struct device *dev;
@@ -1065,9 +1063,7 @@ static void xilinx_frmbuf_free_descriptors(struct xilinx_frmbuf_chan *chan)
 	xilinx_frmbuf_free_desc_list(chan, &chan->pending_list);
 	xilinx_frmbuf_free_desc_list(chan, &chan->done_list);
 	kfree(chan->active_desc);
-	kfree(chan->staged_desc);
 
-	chan->staged_desc = NULL;
 	chan->active_desc = NULL;
 	INIT_LIST_HEAD(&chan->pending_list);
 	INIT_LIST_HEAD(&chan->done_list);
@@ -1218,11 +1214,6 @@ static void xilinx_frmbuf_start_transfer(struct xilinx_frmbuf_chan *chan)
 	if (!chan->idle)
 		return;
 
-	if (chan->staged_desc) {
-		chan->active_desc = chan->staged_desc;
-		chan->staged_desc = NULL;
-	}
-
 	if (list_empty(&chan->pending_list))
 		return;
 
@@ -1272,9 +1263,6 @@ static void xilinx_frmbuf_start_transfer(struct xilinx_frmbuf_chan *chan)
 	list_del(&desc->node);
 
 	/* No staging descriptor required when auto restart is disabled */
-	if (chan->mode == AUTO_RESTART)
-		chan->staged_desc = desc;
-	else
 		chan->active_desc = desc;
 }
 
@@ -1328,9 +1316,6 @@ static irqreturn_t xilinx_frmbuf_irq_handler(int irq, void *data)
 {
 	struct xilinx_frmbuf_chan *chan = data;
 	u32 status;
-	dma_async_tx_callback callback = NULL;
-	void *callback_param;
-	struct xilinx_frmbuf_tx_descriptor *desc;
 
 	status = frmbuf_read(chan, XILINX_FRMBUF_ISR_OFFSET);
 	if (!(status & XILINX_FRMBUF_ISR_ALL_IRQ_MASK))
@@ -1339,17 +1324,6 @@ static irqreturn_t xilinx_frmbuf_irq_handler(int irq, void *data)
 	frmbuf_write(chan, XILINX_FRMBUF_ISR_OFFSET,
 		     status & XILINX_FRMBUF_ISR_ALL_IRQ_MASK);
 
-	/* Check if callback function needs to be called early */
-	desc = chan->staged_desc;
-	if (desc && desc->earlycb == EARLY_CALLBACK) {
-		callback = desc->async_tx.callback;
-		callback_param = desc->async_tx.callback_param;
-		if (callback) {
-			callback(callback_param);
-			desc->async_tx.callback = NULL;
-		}
-	}
-
 	if (status & XILINX_FRMBUF_ISR_AP_DONE_IRQ) {
 		spin_lock(&chan->lock);
 		chan->idle = true;
diff --git a/drivers/media/i2c/Kconfig b/drivers/media/i2c/Kconfig
index f6c2b59d4..bc2d52aab 100644
--- a/drivers/media/i2c/Kconfig
+++ b/drivers/media/i2c/Kconfig
@@ -1004,6 +1004,16 @@ config VIDEO_OV5647
 	  To compile this driver as a module, choose M here: the
 	  module will be called ov5647.
 
+config VIDEO_AR1335
+	tristate "Aptina AR1335 sensor support"
+	depends on I2C && VIDEO_V4L2
+	select MEDIA_CONTROLLER
+	select VIDEO_V4L2_SUBDEV_API
+	select V4L2_FWNODE
+	help
+	  This is a Video4Linux2 sensor driver for the Aptina
+	  AR1335 camera.
+
 config VIDEO_OV5648
 	tristate "OmniVision OV5648 sensor support"
 	depends on I2C && PM && VIDEO_V4L2
diff --git a/drivers/media/i2c/Makefile b/drivers/media/i2c/Makefile
index 0a5dcafa4..d0a51a06f 100644
--- a/drivers/media/i2c/Makefile
+++ b/drivers/media/i2c/Makefile
@@ -73,6 +73,7 @@ obj-$(CONFIG_VIDEO_OV2740) += ov2740.o
 obj-$(CONFIG_VIDEO_OV5640) += ov5640.o
 obj-$(CONFIG_VIDEO_OV5645) += ov5645.o
 obj-$(CONFIG_VIDEO_OV5647) += ov5647.o
+obj-$(CONFIG_VIDEO_AR1335) += ar1335.o tca9546a.o
 obj-$(CONFIG_VIDEO_OV5648) += ov5648.o
 obj-$(CONFIG_VIDEO_OV5670) += ov5670.o
 obj-$(CONFIG_VIDEO_OV5675) += ov5675.o
diff --git a/drivers/media/i2c/ar1335.c b/drivers/media/i2c/ar1335.c
new file mode 100755
index 000000000..0440748af
--- /dev/null
+++ b/drivers/media/i2c/ar1335.c
@@ -0,0 +1,1754 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * A V4L2 driver for Aptina AR1335 cameras.
+ *
+ * Based on Samsung S5K6AAFX SXGA 1/6" 1.3M CMOS Image Sensor driver
+ * Copyright (C) 2011 Sylwester Nawrocki <s.nawrocki@samsung.com>
+ *
+ * Based on Omnivision OV7670 Camera Driver
+ * Copyright (C) 2006-7 Jonathan Corbet <corbet@lwn.net>
+ *
+ * Copyright (C) 2016, Synopsys, Inc.
+ */
+
+#include <linux/clk.h>
+#include <linux/delay.h>
+#include <linux/gpio/consumer.h>
+#include <linux/i2c.h>
+#include <linux/init.h>
+#include <linux/io.h>
+#include <linux/module.h>
+#include <linux/of_graph.h>
+#include <linux/pm_runtime.h>
+#include <linux/slab.h>
+#include <linux/videodev2.h>
+#include <media/v4l2-ctrls.h>
+#include <media/v4l2-device.h>
+#include <media/v4l2-event.h>
+#include <media/v4l2-fwnode.h>
+#include <media/v4l2-image-sizes.h>
+#include <media/v4l2-mediabus.h>
+
+/*
+ * From the datasheet, "20ms after PWDN goes low or 20ms after RESETB goes
+ * high if reset is inserted after PWDN goes high, host can access sensor's
+ * SCCB to initialize sensor."
+ */
+#define PWDN_ACTIVE_DELAY_MS	20
+
+#define AR1335_REG_CHIPID_H		0x0000
+#define AR1335_REG_CHIPID_L		0x0001
+#define AR1335_SW_RESET			0x0103
+
+#define AR1335_REG_EXPOSURE		0x0202
+#define AR1335_REG_GAIN			0x305E
+#define AR1335_REG_VTS			0x0340
+
+#define AR1335_VBLANK_MIN		142
+#define AR1335_VTS_MAX			65535
+
+#define AR1335_EXPOSURE_MIN		8
+#define AR1335_EXPOSURE_STEP		1
+#define AR1335_EXPOSURE_DEFAULT		1000
+
+struct regval_list {
+	u16 addr;
+	u16 data;
+};
+#define REG_DELAY  0xffff
+
+struct ar1335_mode {
+	struct v4l2_mbus_framefmt	format;
+	u64				pixel_rate;
+	int				hts;
+	int				vts;
+	const struct regval_list	*reg_list;
+	unsigned int			num_regs;
+};
+
+struct ar1335 {
+	struct v4l2_subdev		sd;
+	struct media_pad		pad;
+	struct mutex			lock;
+	struct clk			*xclk;
+	struct gpio_desc		*pwdn;
+	struct v4l2_ctrl_handler	ctrls;
+	const struct ar1335_mode	*mode;
+	struct v4l2_ctrl		*pixel_rate;
+	struct v4l2_ctrl		*hblank;
+	struct v4l2_ctrl		*vblank;
+	struct v4l2_ctrl		*exposure;
+	bool				streaming;
+};
+
+static inline struct ar1335 *to_sensor(struct v4l2_subdev *sd)
+{
+	return container_of(sd, struct ar1335, sd);
+}
+
+static const struct regval_list ar1335_3840x2160_20fps_raw10_48Mxclk[] = {
+	//[static struct vvsensor_ar1335_reg_value_t ar1335_init_setting_4kp_48Mxclk]
+	{0x301A, 0x0219},// RESET_REGISTER
+	{REG_DELAY, 10},
+	{0x3042, 0x1004},// DARK_CONTROL2
+	{0x30D2, 0x0120},// CRM_CONTROL
+	{0x30D4, 0x0000},// COLUMN_CORRECTION
+	{0x3090, 0x0000},// RNF_CONTROL
+	{0x30FC, 0x0060},// MODULE_CLK_OFF
+	{0x30FE, 0x0060},// CTREE_OFF
+	{0x31E0, 0x0781},// PIX_DEF_ID
+	{0x3180, 0x9434},// FINE_DIG_CORRECTION_CONTROL
+	{0x317C, 0xEFF4},// ANALOG_CONTROL7
+	{0x30EE, 0x613E},// DARK_CONTROL3
+	{0x3F2C, 0x4428},// GTH_THRES_RTN
+	{0x3D00, 0x0446},// DYNAMIC_SEQRAM_00
+	{0x3D02, 0x4C66},// DYNAMIC_SEQRAM_02
+	{0x3D04, 0xFFFF},// DYNAMIC_SEQRAM_04
+	{0x3D06, 0xFFFF},// DYNAMIC_SEQRAM_06
+	{0x3D08, 0x5E40},// DYNAMIC_SEQRAM_08
+	{0x3D0A, 0x1146},// DYNAMIC_SEQRAM_0A
+	{0x3D0C, 0x5D41},// DYNAMIC_SEQRAM_0C
+	{0x3D0E, 0x1088},// DYNAMIC_SEQRAM_0E
+	{0x3D10, 0x8342},// DYNAMIC_SEQRAM_10
+	{0x3D12, 0x00C0},// DYNAMIC_SEQRAM_12
+	{0x3D14, 0x5580},// DYNAMIC_SEQRAM_14
+	{0x3D16, 0x5B83},// DYNAMIC_SEQRAM_16
+	{0x3D18, 0x6084},// DYNAMIC_SEQRAM_18
+	{0x3D1A, 0x5A8D},// DYNAMIC_SEQRAM_1A
+	{0x3D1C, 0x00C0},// DYNAMIC_SEQRAM_1C
+	{0x3D1E, 0x8342},// DYNAMIC_SEQRAM_1E
+	{0x3D20, 0x925A},// DYNAMIC_SEQRAM_20
+	{0x3D22, 0x8664},// DYNAMIC_SEQRAM_22
+	{0x3D24, 0x1030},// DYNAMIC_SEQRAM_24
+	{0x3D26, 0x801C},// DYNAMIC_SEQRAM_26
+	{0x3D28, 0x00A0},// DYNAMIC_SEQRAM_28
+	{0x3D2A, 0x56B0},// DYNAMIC_SEQRAM_2A
+	{0x3D2C, 0x5788},// DYNAMIC_SEQRAM_2C
+	{0x3D2E, 0x5150},// DYNAMIC_SEQRAM_2E
+	{0x3D30, 0x824D},// DYNAMIC_SEQRAM_30
+	{0x3D32, 0x8D58},// DYNAMIC_SEQRAM_32
+	{0x3D34, 0x58D2},// DYNAMIC_SEQRAM_34
+	{0x3D36, 0x438A},// DYNAMIC_SEQRAM_36
+	{0x3D38, 0x4592},// DYNAMIC_SEQRAM_38
+	{0x3D3A, 0x458A},// DYNAMIC_SEQRAM_3A
+	{0x3D3C, 0x4389},// DYNAMIC_SEQRAM_3C
+	{0x3D3E, 0x51FF},// DYNAMIC_SEQRAM_3E
+	{0x3D40, 0x8451},// DYNAMIC_SEQRAM_40
+	{0x3D42, 0x8410},// DYNAMIC_SEQRAM_42
+	{0x3D44, 0x0C88},// DYNAMIC_SEQRAM_44
+	{0x3D46, 0x5959},// DYNAMIC_SEQRAM_46
+	{0x3D48, 0x8A5F},// DYNAMIC_SEQRAM_48
+	{0x3D4A, 0xDA42},// DYNAMIC_SEQRAM_4A
+	{0x3D4C, 0x9361},// DYNAMIC_SEQRAM_4C
+	{0x3D4E, 0x8262},// DYNAMIC_SEQRAM_4E
+	{0x3D50, 0x8342},// DYNAMIC_SEQRAM_50
+	{0x3D52, 0x8010},// DYNAMIC_SEQRAM_52
+	{0x3D54, 0xC041},// DYNAMIC_SEQRAM_54
+	{0x3D56, 0x64FF},// DYNAMIC_SEQRAM_56
+	{0x3D58, 0xFFB7},// DYNAMIC_SEQRAM_58
+	{0x3D5A, 0x4081},// DYNAMIC_SEQRAM_5A
+	{0x3D5C, 0x4080},// DYNAMIC_SEQRAM_5C
+	{0x3D5E, 0x4180},// DYNAMIC_SEQRAM_5E
+	{0x3D60, 0x4280},// DYNAMIC_SEQRAM_60
+	{0x3D62, 0x438D},// DYNAMIC_SEQRAM_62
+	{0x3D64, 0x44BA},// DYNAMIC_SEQRAM_64
+	{0x3D66, 0x4488},// DYNAMIC_SEQRAM_66
+	{0x3D68, 0x4380},// DYNAMIC_SEQRAM_68
+	{0x3D6A, 0x4241},// DYNAMIC_SEQRAM_6A
+	{0x3D6C, 0x8140},// DYNAMIC_SEQRAM_6C
+	{0x3D6E, 0x8240},// DYNAMIC_SEQRAM_6E
+	{0x3D70, 0x8041},// DYNAMIC_SEQRAM_70
+	{0x3D72, 0x8042},// DYNAMIC_SEQRAM_72
+	{0x3D74, 0x8043},// DYNAMIC_SEQRAM_74
+	{0x3D76, 0x8D44},// DYNAMIC_SEQRAM_76
+	{0x3D78, 0xBA44},// DYNAMIC_SEQRAM_78
+	{0x3D7A, 0x875E},// DYNAMIC_SEQRAM_7A
+	{0x3D7C, 0x4354},// DYNAMIC_SEQRAM_7C
+	{0x3D7E, 0x4241},// DYNAMIC_SEQRAM_7E
+	{0x3D80, 0x8140},// DYNAMIC_SEQRAM_80
+	{0x3D82, 0x8120},// DYNAMIC_SEQRAM_82
+	{0x3D84, 0x2881},// DYNAMIC_SEQRAM_84
+	{0x3D86, 0x6026},// DYNAMIC_SEQRAM_86
+	{0x3D88, 0x8055},// DYNAMIC_SEQRAM_88
+	{0x3D8A, 0x8070},// DYNAMIC_SEQRAM_8A
+	{0x3D8C, 0x8040},// DYNAMIC_SEQRAM_8C
+	{0x3D8E, 0x4C81},// DYNAMIC_SEQRAM_8E
+	{0x3D90, 0x45C3},// DYNAMIC_SEQRAM_90
+	{0x3D92, 0x4581},// DYNAMIC_SEQRAM_92
+	{0x3D94, 0x4C40},// DYNAMIC_SEQRAM_94
+	{0x3D96, 0x8070},// DYNAMIC_SEQRAM_96
+	{0x3D98, 0x8040},// DYNAMIC_SEQRAM_98
+	{0x3D9A, 0x4C85},// DYNAMIC_SEQRAM_9A
+	{0x3D9C, 0x6CA8},// DYNAMIC_SEQRAM_9C
+	{0x3D9E, 0x6C8C},// DYNAMIC_SEQRAM_9E
+	{0x3DA0, 0x000E},// DYNAMIC_SEQRAM_A0
+	{0x3DA2, 0xBE44},// DYNAMIC_SEQRAM_A2
+	{0x3DA4, 0x8844},// DYNAMIC_SEQRAM_A4
+	{0x3DA6, 0xBC78},// DYNAMIC_SEQRAM_A6
+	{0x3DA8, 0x0900},// DYNAMIC_SEQRAM_A8
+	{0x3DAA, 0x8904},// DYNAMIC_SEQRAM_AA
+	{0x3DAC, 0x8080},// DYNAMIC_SEQRAM_AC
+	{0x3DAE, 0x0240},// DYNAMIC_SEQRAM_AE
+	{0x3DB0, 0x8609},// DYNAMIC_SEQRAM_B0
+	{0x3DB2, 0x008E},// DYNAMIC_SEQRAM_B2
+	{0x3DB4, 0x0900},// DYNAMIC_SEQRAM_B4
+	{0x3DB6, 0x8002},// DYNAMIC_SEQRAM_B6
+	{0x3DB8, 0x4080},// DYNAMIC_SEQRAM_B8
+	{0x3DBA, 0x0480},// DYNAMIC_SEQRAM_BA
+	{0x3DBC, 0x887C},// DYNAMIC_SEQRAM_BC
+	{0x3DBE, 0xAA86},// DYNAMIC_SEQRAM_BE
+	{0x3DC0, 0x0900},// DYNAMIC_SEQRAM_C0
+	{0x3DC2, 0x877A},// DYNAMIC_SEQRAM_C2
+	{0x3DC4, 0x000E},// DYNAMIC_SEQRAM_C4
+	{0x3DC6, 0xC379},// DYNAMIC_SEQRAM_C6
+	{0x3DC8, 0x4C40},// DYNAMIC_SEQRAM_C8
+	{0x3DCA, 0xBF70},// DYNAMIC_SEQRAM_CA
+	{0x3DCC, 0x5E40},// DYNAMIC_SEQRAM_CC
+	{0x3DCE, 0x114E},// DYNAMIC_SEQRAM_CE
+	{0x3DD0, 0x5D41},// DYNAMIC_SEQRAM_D0
+	{0x3DD2, 0x5383},// DYNAMIC_SEQRAM_D2
+	{0x3DD4, 0x4200},// DYNAMIC_SEQRAM_D4
+	{0x3DD6, 0xC055},// DYNAMIC_SEQRAM_D6
+	{0x3DD8, 0xA400},// DYNAMIC_SEQRAM_D8
+	{0x3DDA, 0xC083},// DYNAMIC_SEQRAM_DA
+	{0x3DDC, 0x4288},// DYNAMIC_SEQRAM_DC
+	{0x3DDE, 0x6083},// DYNAMIC_SEQRAM_DE
+	{0x3DE0, 0x5B80},// DYNAMIC_SEQRAM_E0
+	{0x3DE2, 0x5A64},// DYNAMIC_SEQRAM_E2
+	{0x3DE4, 0x1030},// DYNAMIC_SEQRAM_E4
+	{0x3DE6, 0x801C},// DYNAMIC_SEQRAM_E6
+	{0x3DE8, 0x00A5},// DYNAMIC_SEQRAM_E8
+	{0x3DEA, 0x5697},// DYNAMIC_SEQRAM_EA
+	{0x3DEC, 0x57A5},// DYNAMIC_SEQRAM_EC
+	{0x3DEE, 0x5180},// DYNAMIC_SEQRAM_EE
+	{0x3DF0, 0x505A},// DYNAMIC_SEQRAM_F0
+	{0x3DF2, 0x814D},// DYNAMIC_SEQRAM_F2
+	{0x3DF4, 0x8358},// DYNAMIC_SEQRAM_F4
+	{0x3DF6, 0x8058},// DYNAMIC_SEQRAM_F6
+	{0x3DF8, 0xA943},// DYNAMIC_SEQRAM_F8
+	{0x3DFA, 0x8345},// DYNAMIC_SEQRAM_FA
+	{0x3DFC, 0xB045},// DYNAMIC_SEQRAM_FC
+	{0x3DFE, 0x8343},// DYNAMIC_SEQRAM_FE
+	{0x3E00, 0xA351},// DYNAMIC_SEQRAM_100
+	{0x3E02, 0xE251},// DYNAMIC_SEQRAM_102
+	{0x3E04, 0x8C59},// DYNAMIC_SEQRAM_104
+	{0x3E06, 0x8059},// DYNAMIC_SEQRAM_106
+	{0x3E08, 0x8A5F},// DYNAMIC_SEQRAM_108
+	{0x3E0A, 0xEC7C},// DYNAMIC_SEQRAM_10A
+	{0x3E0C, 0xCC84},// DYNAMIC_SEQRAM_10C
+	{0x3E0E, 0x6182},// DYNAMIC_SEQRAM_10E
+	{0x3E10, 0x6283},// DYNAMIC_SEQRAM_110
+	{0x3E12, 0x4283},// DYNAMIC_SEQRAM_112
+	{0x3E14, 0x10CC},// DYNAMIC_SEQRAM_114
+	{0x3E16, 0x6496},// DYNAMIC_SEQRAM_116
+	{0x3E18, 0x4281},// DYNAMIC_SEQRAM_118
+	{0x3E1A, 0x41BB},// DYNAMIC_SEQRAM_11A
+	{0x3E1C, 0x4082},// DYNAMIC_SEQRAM_11C
+	{0x3E1E, 0x407E},// DYNAMIC_SEQRAM_11E
+	{0x3E20, 0xCC41},// DYNAMIC_SEQRAM_120
+	{0x3E22, 0x8042},// DYNAMIC_SEQRAM_122
+	{0x3E24, 0x8043},// DYNAMIC_SEQRAM_124
+	{0x3E26, 0x8300},// DYNAMIC_SEQRAM_126
+	{0x3E28, 0xC088},// DYNAMIC_SEQRAM_128
+	{0x3E2A, 0x44BA},// DYNAMIC_SEQRAM_12A
+	{0x3E2C, 0x4488},// DYNAMIC_SEQRAM_12C
+	{0x3E2E, 0x00C8},// DYNAMIC_SEQRAM_12E
+	{0x3E30, 0x8042},// DYNAMIC_SEQRAM_130
+	{0x3E32, 0x4181},// DYNAMIC_SEQRAM_132
+	{0x3E34, 0x4082},// DYNAMIC_SEQRAM_134
+	{0x3E36, 0x4080},// DYNAMIC_SEQRAM_136
+	{0x3E38, 0x4180},// DYNAMIC_SEQRAM_138
+	{0x3E3A, 0x4280},// DYNAMIC_SEQRAM_13A
+	{0x3E3C, 0x4383},// DYNAMIC_SEQRAM_13C
+	{0x3E3E, 0x00C0},// DYNAMIC_SEQRAM_13E
+	{0x3E40, 0x8844},// DYNAMIC_SEQRAM_140
+	{0x3E42, 0xBA44},// DYNAMIC_SEQRAM_142
+	{0x3E44, 0x8800},// DYNAMIC_SEQRAM_144
+	{0x3E46, 0xC880},// DYNAMIC_SEQRAM_146
+	{0x3E48, 0x4241},// DYNAMIC_SEQRAM_148
+	{0x3E4A, 0x8240},// DYNAMIC_SEQRAM_14A
+	{0x3E4C, 0x8140},// DYNAMIC_SEQRAM_14C
+	{0x3E4E, 0x8041},// DYNAMIC_SEQRAM_14E
+	{0x3E50, 0x8042},// DYNAMIC_SEQRAM_150
+	{0x3E52, 0x8043},// DYNAMIC_SEQRAM_152
+	{0x3E54, 0x8300},// DYNAMIC_SEQRAM_154
+	{0x3E56, 0xC088},// DYNAMIC_SEQRAM_156
+	{0x3E58, 0x44BA},// DYNAMIC_SEQRAM_158
+	{0x3E5A, 0x4488},// DYNAMIC_SEQRAM_15A
+	{0x3E5C, 0x00C8},// DYNAMIC_SEQRAM_15C
+	{0x3E5E, 0x8042},// DYNAMIC_SEQRAM_15E
+	{0x3E60, 0x4181},// DYNAMIC_SEQRAM_160
+	{0x3E62, 0x4082},// DYNAMIC_SEQRAM_162
+	{0x3E64, 0x4080},// DYNAMIC_SEQRAM_164
+	{0x3E66, 0x4180},// DYNAMIC_SEQRAM_166
+	{0x3E68, 0x4280},// DYNAMIC_SEQRAM_168
+	{0x3E6A, 0x4383},// DYNAMIC_SEQRAM_16A
+	{0x3E6C, 0x00C0},// DYNAMIC_SEQRAM_16C
+	{0x3E6E, 0x8844},// DYNAMIC_SEQRAM_16E
+	{0x3E70, 0xBA44},// DYNAMIC_SEQRAM_170
+	{0x3E72, 0x8800},// DYNAMIC_SEQRAM_172
+	{0x3E74, 0xC880},// DYNAMIC_SEQRAM_174
+	{0x3E76, 0x4241},// DYNAMIC_SEQRAM_176
+	{0x3E78, 0x8140},// DYNAMIC_SEQRAM_178
+	{0x3E7A, 0x9F5E},// DYNAMIC_SEQRAM_17A
+	{0x3E7C, 0x8A54},// DYNAMIC_SEQRAM_17C
+	{0x3E7E, 0x8620},// DYNAMIC_SEQRAM_17E
+	{0x3E80, 0x2881},// DYNAMIC_SEQRAM_180
+	{0x3E82, 0x6026},// DYNAMIC_SEQRAM_182
+	{0x3E84, 0x8055},// DYNAMIC_SEQRAM_184
+	{0x3E86, 0x8070},// DYNAMIC_SEQRAM_186
+	{0x3E88, 0x0000},// DYNAMIC_SEQRAM_188
+	{0x3E8A, 0x0000},// DYNAMIC_SEQRAM_18A
+	{0x3E8C, 0x0000},// DYNAMIC_SEQRAM_18C
+	{0x3E8E, 0x0000},// DYNAMIC_SEQRAM_18E
+	{0x3E90, 0x0000},// DYNAMIC_SEQRAM_190
+	{0x3E92, 0x0000},// DYNAMIC_SEQRAM_192
+	{0x3E94, 0x0000},// DYNAMIC_SEQRAM_194
+	{0x3E96, 0x0000},// DYNAMIC_SEQRAM_196
+	{0x3E98, 0x0000},// DYNAMIC_SEQRAM_198
+	{0x3E9A, 0x0000},// DYNAMIC_SEQRAM_19A
+	{0x3E9C, 0x0000},// DYNAMIC_SEQRAM_19C
+	{0x3E9E, 0x0000},// DYNAMIC_SEQRAM_19E
+	{0x3EA0, 0x0000},// DYNAMIC_SEQRAM_1A0
+	{0x3EA2, 0x0000},// DYNAMIC_SEQRAM_1A2
+	{0x3EA4, 0x0000},// DYNAMIC_SEQRAM_1A4
+	{0x3EA6, 0x0000},// DYNAMIC_SEQRAM_1A6
+	{0x3EA8, 0x0000},// DYNAMIC_SEQRAM_1A8
+	{0x3EAA, 0x0000},// DYNAMIC_SEQRAM_1AA
+	{0x3EAC, 0x0000},// DYNAMIC_SEQRAM_1AC
+	{0x3EAE, 0x0000},// DYNAMIC_SEQRAM_1AE
+	{0x3EB0, 0x0000},// DYNAMIC_SEQRAM_1B0
+	{0x3EB2, 0x0000},// DYNAMIC_SEQRAM_1B2
+	{0x3EB4, 0x0000},// DYNAMIC_SEQRAM_1B4
+	{0x3EB6, 0x004D},// DAC_LD_0_1
+	{0x3EBC, 0xAA06},// DAC_LD_6_7
+	{0x3EC0, 0x2E02},// DAC_LD_10_11
+	{0x3EC2, 0x7700},// DAC_LD_12_13
+	{0x3EC4, 0x1C08},// DAC_LD_14_15
+	{0x3EC6, 0xEA44},// DAC_LD_16_17
+	{0x3EC8, 0x0F0F},// DAC_LD_18_19
+	{0x3ECA, 0x0F4A},// DAC_LD_20_21
+	{0x3ECC, 0x0706},// DAC_LD_22_23
+	{0x3ECE, 0x443B},// DAC_LD_24_25
+	{0x3ED0, 0x12F0},// DAC_LD_26_27
+	{0x3ED2, 0x0039},// DAC_LD_28_29
+	{0x3ED4, 0x862F},// DAC_LD_30_31
+	{0x3ED6, 0x4080},// DAC_LD_32_33
+	{0x3ED8, 0x0523},// DAC_LD_34_35
+	{0x3EDA, 0xF8AA},// DAC_LD_36_37
+	{0x3EDC, 0x5078},// DAC_LD_38_39
+	{0x3EDE, 0x5005},// DAC_LD_40_41
+	{0x316A, 0x8200},// DAC_RSTLO
+	{0x316E, 0x8200},// DAC_ECL
+	{0x316C, 0x8200},// DAC_TXLO
+	{0x3EF0, 0x414D},// DAC_LD_ECL
+	{0x3EF2, 0x0101},// DAC_LD_FSC
+	{0x3EF6, 0x0307},// DAC_LD_RSTD
+	{0x3EFA, 0x0F0F},// DAC_LD_TXLO
+	{0x3EFC, 0x0F0F},// DAC_LD_TXLO1
+	{0x3EFE, 0x0F0F},// DAC_LD_TXLO2
+	{0x31B0, 0x005C}, // FRAME_PREAMBLE
+	{0x31B2, 0x002D}, // LINE_PREAMBLE
+	{0x31B4, 0x4392}, // MIPI_TIMING_0
+	{0x31B6, 0x43CA}, // MIPI_TIMING_1
+	{0x31B8, 0x2413}, // MIPI_TIMING_2
+	{0x31BA, 0x1C70}, // MIPI_TIMING_3
+	{0x31BC, 0x868B}, // MIPI_TIMING_4
+	{0x0300, 0x0005}, // VT_PIX_CLK_DIV
+	{0x0302, 0x0001}, // VT_SYS_CLK_DIV
+	{0x0304, 0x0303}, // PRE_PLL_CLK_DIV
+	{0x0306, 0x2C2C}, // PLL_MULTIPLIER
+	{0x0308, 0x000A}, // OP_PIX_CLK_DIV
+	{0x030A, 0x0001}, // OP_SYS_CLK_DIV
+	{0x3016, 0x0111}, // ROW_SPEED
+	{0x31AE, 0x0204}, // SERIAL_FORMAT
+	{0x0112, 0x0A0A}, // CCP_DATA_FORMAT
+	{0x0344, 0x00C8},// X_ADDR_START
+	{0x0348, 0x0FC7},// X_ADDR_END
+	{0x0346, 0x01F0},// Y_ADDR_START
+	{0x034A, 0x0A5F},// Y_ADDR_END
+	{0x034C, 0x0F00},// X_OUTPUT_SIZE
+	{0x034E, 0x0870},// Y_OUTPUT_SIZE
+	{0x3040, 0x0041},// READ_MODE
+	{0x0112, 0x0A0A},// CCP_DATA_FORMAT
+	{0x0112, 0x0A0A},// CCP_DATA_FORMAT
+	{0x3172, 0x0206},// ANALOG_CONTROL2
+	{0x317A, 0x416E},// ANALOG_CONTROL6
+	{0x3F3C, 0x0003},// ANALOG_CONTROL9
+	{0x0342, 0x1230},// LINE_LENGTH_PCK
+	{0x0340, 0x0BCC},// FRAME_LENGTH_LINES
+	{0x0202, 0x0AA0},// COARSE_INTEGRATION_TIME
+	{0x30FE, 0x0060},// CTREE_OFF
+	{0x31E0, 0x0781},// PIX_DEF_ID
+	{0x3F00, 0x004F},// BM_T0
+	{0x3F02, 0x0125},// BM_T1
+	{0x3F04, 0x0020},// NOISE_GAIN_THRESHOLD0
+	{0x3F06, 0x0040},// NOISE_GAIN_THRESHOLD1
+	{0x3F08, 0x0070},// NOISE_GAIN_THRESHOLD2
+	{0x3F0A, 0x0101},// NOISE_FLOOR10
+	{0x3F0C, 0x0302},// NOISE_FLOOR32
+	{0x3F1E, 0x0022},// NOISE_COEF
+	{0x3F1A, 0x01FF},// CROSSFACTOR2
+	{0x3F14, 0x0101},// SINGLE_K_FACTOR2
+	{0x3F44, 0x0707},// COUPLE_K_FACTOR2
+	{0x3F18, 0x011E},// CROSSFACTOR1
+	{0x3F12, 0x0303},// SINGLE_K_FACTOR1
+	{0x3F42, 0x1511},// COUPLE_K_FACTOR1
+	{0x3F16, 0x011E},// CROSSFACTOR0
+	{0x3F10, 0x0505},// SINGLE_K_FACTOR0
+	{0x3F40, 0x1511},// COUPLE_K_FACTOR0
+	{0x3F3C, 0x0003},// ANALOG_CONTROL9
+	{0x301A, 0x021C},// RESET_REGISTER
+};
+
+static const struct regval_list ar1335_2048x1536_30fps_raw10_48Mxclk[] = {
+	{0x301A, 0x0219}, // RESET_REGISTER
+	{REG_DELAY, 10},
+	{0x3042, 0x1004}, // DARK_CONTROL2
+	{0x30D2, 0x0120}, // CRM_CONTROL
+	{0x30D4, 0x0000}, // COLUMN_CORRECTION
+	{0x3090, 0x0000}, // RNF_CONTROL
+	{0x30FC, 0x0060}, // MODULE_CLK_OFF
+	{0x30FE, 0x0060}, // CTREE_OFF
+	{0x31E0, 0x0781}, // PIX_DEF_ID
+	{0x3180, 0x9434}, // FINE_DIG_CORRECTION_CONTROL
+	{0x317C, 0xEFF4}, // ANALOG_CONTROL7
+	{0x30EE, 0x613E}, // DARK_CONTROL3
+	{0x3F2C, 0x4428}, // GTH_THRES_RTN
+	{0x3D00, 0x0446}, // DYNAMIC_SEQRAM_00
+	{0x3D02, 0x4C66}, // DYNAMIC_SEQRAM_02
+	{0x3D04, 0xFFFF}, // DYNAMIC_SEQRAM_04
+	{0x3D06, 0xFFFF}, // DYNAMIC_SEQRAM_06
+	{0x3D08, 0x5E40}, // DYNAMIC_SEQRAM_08
+	{0x3D0A, 0x1146}, // DYNAMIC_SEQRAM_0A
+	{0x3D0C, 0x5D41}, // DYNAMIC_SEQRAM_0C
+	{0x3D0E, 0x1088}, // DYNAMIC_SEQRAM_0E
+	{0x3D10, 0x8342}, // DYNAMIC_SEQRAM_10
+	{0x3D12, 0x00C0}, // DYNAMIC_SEQRAM_12
+	{0x3D14, 0x5580}, // DYNAMIC_SEQRAM_14
+	{0x3D16, 0x5B83}, // DYNAMIC_SEQRAM_16
+	{0x3D18, 0x6084}, // DYNAMIC_SEQRAM_18
+	{0x3D1A, 0x5A8D}, // DYNAMIC_SEQRAM_1A
+	{0x3D1C, 0x00C0}, // DYNAMIC_SEQRAM_1C
+	{0x3D1E, 0x8342}, // DYNAMIC_SEQRAM_1E
+	{0x3D20, 0x925A}, // DYNAMIC_SEQRAM_20
+	{0x3D22, 0x8664}, // DYNAMIC_SEQRAM_22
+	{0x3D24, 0x1030}, // DYNAMIC_SEQRAM_24
+	{0x3D26, 0x801C}, // DYNAMIC_SEQRAM_26
+	{0x3D28, 0x00A0}, // DYNAMIC_SEQRAM_28
+	{0x3D2A, 0x56B0}, // DYNAMIC_SEQRAM_2A
+	{0x3D2C, 0x5788}, // DYNAMIC_SEQRAM_2C
+	{0x3D2E, 0x5150}, // DYNAMIC_SEQRAM_2E
+	{0x3D30, 0x824D}, // DYNAMIC_SEQRAM_30
+	{0x3D32, 0x8D58}, // DYNAMIC_SEQRAM_32
+	{0x3D34, 0x58D2}, // DYNAMIC_SEQRAM_34
+	{0x3D36, 0x438A}, // DYNAMIC_SEQRAM_36
+	{0x3D38, 0x4592}, // DYNAMIC_SEQRAM_38
+	{0x3D3A, 0x458A}, // DYNAMIC_SEQRAM_3A
+	{0x3D3C, 0x4389}, // DYNAMIC_SEQRAM_3C
+	{0x3D3E, 0x51FF}, // DYNAMIC_SEQRAM_3E
+	{0x3D40, 0x8451}, // DYNAMIC_SEQRAM_40
+	{0x3D42, 0x8410}, // DYNAMIC_SEQRAM_42
+	{0x3D44, 0x0C88}, // DYNAMIC_SEQRAM_44
+	{0x3D46, 0x5959}, // DYNAMIC_SEQRAM_46
+	{0x3D48, 0x8A5F}, // DYNAMIC_SEQRAM_48
+	{0x3D4A, 0xDA42}, // DYNAMIC_SEQRAM_4A
+	{0x3D4C, 0x9361}, // DYNAMIC_SEQRAM_4C
+	{0x3D4E, 0x8262}, // DYNAMIC_SEQRAM_4E
+	{0x3D50, 0x8342}, // DYNAMIC_SEQRAM_50
+	{0x3D52, 0x8010}, // DYNAMIC_SEQRAM_52
+	{0x3D54, 0xC041}, // DYNAMIC_SEQRAM_54
+	{0x3D56, 0x64FF}, // DYNAMIC_SEQRAM_56
+	{0x3D58, 0xFFB7}, // DYNAMIC_SEQRAM_58
+	{0x3D5A, 0x4081}, // DYNAMIC_SEQRAM_5A
+	{0x3D5C, 0x4080}, // DYNAMIC_SEQRAM_5C
+	{0x3D5E, 0x4180}, // DYNAMIC_SEQRAM_5E
+	{0x3D60, 0x4280}, // DYNAMIC_SEQRAM_60
+	{0x3D62, 0x438D}, // DYNAMIC_SEQRAM_62
+	{0x3D64, 0x44BA}, // DYNAMIC_SEQRAM_64
+	{0x3D66, 0x4488}, // DYNAMIC_SEQRAM_66
+	{0x3D68, 0x4380}, // DYNAMIC_SEQRAM_68
+	{0x3D6A, 0x4241}, // DYNAMIC_SEQRAM_6A
+	{0x3D6C, 0x8140}, // DYNAMIC_SEQRAM_6C
+	{0x3D6E, 0x8240}, // DYNAMIC_SEQRAM_6E
+	{0x3D70, 0x8041}, // DYNAMIC_SEQRAM_70
+	{0x3D72, 0x8042}, // DYNAMIC_SEQRAM_72
+	{0x3D74, 0x8043}, // DYNAMIC_SEQRAM_74
+	{0x3D76, 0x8D44}, // DYNAMIC_SEQRAM_76
+	{0x3D78, 0xBA44}, // DYNAMIC_SEQRAM_78
+	{0x3D7A, 0x875E}, // DYNAMIC_SEQRAM_7A
+	{0x3D7C, 0x4354}, // DYNAMIC_SEQRAM_7C
+	{0x3D7E, 0x4241}, // DYNAMIC_SEQRAM_7E
+	{0x3D80, 0x8140}, // DYNAMIC_SEQRAM_80
+	{0x3D82, 0x8120}, // DYNAMIC_SEQRAM_82
+	{0x3D84, 0x2881}, // DYNAMIC_SEQRAM_84
+	{0x3D86, 0x6026}, // DYNAMIC_SEQRAM_86
+	{0x3D88, 0x8055}, // DYNAMIC_SEQRAM_88
+	{0x3D8A, 0x8070}, // DYNAMIC_SEQRAM_8A
+	{0x3D8C, 0x8040}, // DYNAMIC_SEQRAM_8C
+	{0x3D8E, 0x4C81}, // DYNAMIC_SEQRAM_8E
+	{0x3D90, 0x45C3}, // DYNAMIC_SEQRAM_90
+	{0x3D92, 0x4581}, // DYNAMIC_SEQRAM_92
+	{0x3D94, 0x4C40}, // DYNAMIC_SEQRAM_94
+	{0x3D96, 0x8070}, // DYNAMIC_SEQRAM_96
+	{0x3D98, 0x8040}, // DYNAMIC_SEQRAM_98
+	{0x3D9A, 0x4C85}, // DYNAMIC_SEQRAM_9A
+	{0x3D9C, 0x6CA8}, // DYNAMIC_SEQRAM_9C
+	{0x3D9E, 0x6C8C}, // DYNAMIC_SEQRAM_9E
+	{0x3DA0, 0x000E}, // DYNAMIC_SEQRAM_A0
+	{0x3DA2, 0xBE44}, // DYNAMIC_SEQRAM_A2
+	{0x3DA4, 0x8844}, // DYNAMIC_SEQRAM_A4
+	{0x3DA6, 0xBC78}, // DYNAMIC_SEQRAM_A6
+	{0x3DA8, 0x0900}, // DYNAMIC_SEQRAM_A8
+	{0x3DAA, 0x8904}, // DYNAMIC_SEQRAM_AA
+	{0x3DAC, 0x8080}, // DYNAMIC_SEQRAM_AC
+	{0x3DAE, 0x0240}, // DYNAMIC_SEQRAM_AE
+	{0x3DB0, 0x8609}, // DYNAMIC_SEQRAM_B0
+	{0x3DB2, 0x008E}, // DYNAMIC_SEQRAM_B2
+	{0x3DB4, 0x0900}, // DYNAMIC_SEQRAM_B4
+	{0x3DB6, 0x8002}, // DYNAMIC_SEQRAM_B6
+	{0x3DB8, 0x4080}, // DYNAMIC_SEQRAM_B8
+	{0x3DBA, 0x0480}, // DYNAMIC_SEQRAM_BA
+	{0x3DBC, 0x887C}, // DYNAMIC_SEQRAM_BC
+	{0x3DBE, 0xAA86}, // DYNAMIC_SEQRAM_BE
+	{0x3DC0, 0x0900}, // DYNAMIC_SEQRAM_C0
+	{0x3DC2, 0x877A}, // DYNAMIC_SEQRAM_C2
+	{0x3DC4, 0x000E}, // DYNAMIC_SEQRAM_C4
+	{0x3DC6, 0xC379}, // DYNAMIC_SEQRAM_C6
+	{0x3DC8, 0x4C40}, // DYNAMIC_SEQRAM_C8
+	{0x3DCA, 0xBF70}, // DYNAMIC_SEQRAM_CA
+	{0x3DCC, 0x5E40}, // DYNAMIC_SEQRAM_CC
+	{0x3DCE, 0x114E}, // DYNAMIC_SEQRAM_CE
+	{0x3DD0, 0x5D41}, // DYNAMIC_SEQRAM_D0
+	{0x3DD2, 0x5383}, // DYNAMIC_SEQRAM_D2
+	{0x3DD4, 0x4200}, // DYNAMIC_SEQRAM_D4
+	{0x3DD6, 0xC055}, // DYNAMIC_SEQRAM_D6
+	{0x3DD8, 0xA400}, // DYNAMIC_SEQRAM_D8
+	{0x3DDA, 0xC083}, // DYNAMIC_SEQRAM_DA
+	{0x3DDC, 0x4288}, // DYNAMIC_SEQRAM_DC
+	{0x3DDE, 0x6083}, // DYNAMIC_SEQRAM_DE
+	{0x3DE0, 0x5B80}, // DYNAMIC_SEQRAM_E0
+	{0x3DE2, 0x5A64}, // DYNAMIC_SEQRAM_E2
+	{0x3DE4, 0x1030}, // DYNAMIC_SEQRAM_E4
+	{0x3DE6, 0x801C}, // DYNAMIC_SEQRAM_E6
+	{0x3DE8, 0x00A5}, // DYNAMIC_SEQRAM_E8
+	{0x3DEA, 0x5697}, // DYNAMIC_SEQRAM_EA
+	{0x3DEC, 0x57A5}, // DYNAMIC_SEQRAM_EC
+	{0x3DEE, 0x5180}, // DYNAMIC_SEQRAM_EE
+	{0x3DF0, 0x505A}, // DYNAMIC_SEQRAM_F0
+	{0x3DF2, 0x814D}, // DYNAMIC_SEQRAM_F2
+	{0x3DF4, 0x8358}, // DYNAMIC_SEQRAM_F4
+	{0x3DF6, 0x8058}, // DYNAMIC_SEQRAM_F6
+	{0x3DF8, 0xA943}, // DYNAMIC_SEQRAM_F8
+	{0x3DFA, 0x8345}, // DYNAMIC_SEQRAM_FA
+	{0x3DFC, 0xB045}, // DYNAMIC_SEQRAM_FC
+	{0x3DFE, 0x8343}, // DYNAMIC_SEQRAM_FE
+	{0x3E00, 0xA351}, // DYNAMIC_SEQRAM_100
+	{0x3E02, 0xE251}, // DYNAMIC_SEQRAM_102
+	{0x3E04, 0x8C59}, // DYNAMIC_SEQRAM_104
+	{0x3E06, 0x8059}, // DYNAMIC_SEQRAM_106
+	{0x3E08, 0x8A5F}, // DYNAMIC_SEQRAM_108
+	{0x3E0A, 0xEC7C}, // DYNAMIC_SEQRAM_10A
+	{0x3E0C, 0xCC84}, // DYNAMIC_SEQRAM_10C
+	{0x3E0E, 0x6182}, // DYNAMIC_SEQRAM_10E
+	{0x3E10, 0x6283}, // DYNAMIC_SEQRAM_110
+	{0x3E12, 0x4283}, // DYNAMIC_SEQRAM_112
+	{0x3E14, 0x10CC}, // DYNAMIC_SEQRAM_114
+	{0x3E16, 0x6496}, // DYNAMIC_SEQRAM_116
+	{0x3E18, 0x4281}, // DYNAMIC_SEQRAM_118
+	{0x3E1A, 0x41BB}, // DYNAMIC_SEQRAM_11A
+	{0x3E1C, 0x4082}, // DYNAMIC_SEQRAM_11C
+	{0x3E1E, 0x407E}, // DYNAMIC_SEQRAM_11E
+	{0x3E20, 0xCC41}, // DYNAMIC_SEQRAM_120
+	{0x3E22, 0x8042}, // DYNAMIC_SEQRAM_122
+	{0x3E24, 0x8043}, // DYNAMIC_SEQRAM_124
+	{0x3E26, 0x8300}, // DYNAMIC_SEQRAM_126
+	{0x3E28, 0xC088}, // DYNAMIC_SEQRAM_128
+	{0x3E2A, 0x44BA}, // DYNAMIC_SEQRAM_12A
+	{0x3E2C, 0x4488}, // DYNAMIC_SEQRAM_12C
+	{0x3E2E, 0x00C8}, // DYNAMIC_SEQRAM_12E
+	{0x3E30, 0x8042}, // DYNAMIC_SEQRAM_130
+	{0x3E32, 0x4181}, // DYNAMIC_SEQRAM_132
+	{0x3E34, 0x4082}, // DYNAMIC_SEQRAM_134
+	{0x3E36, 0x4080}, // DYNAMIC_SEQRAM_136
+	{0x3E38, 0x4180}, // DYNAMIC_SEQRAM_138
+	{0x3E3A, 0x4280}, // DYNAMIC_SEQRAM_13A
+	{0x3E3C, 0x4383}, // DYNAMIC_SEQRAM_13C
+	{0x3E3E, 0x00C0}, // DYNAMIC_SEQRAM_13E
+	{0x3E40, 0x8844}, // DYNAMIC_SEQRAM_140
+	{0x3E42, 0xBA44}, // DYNAMIC_SEQRAM_142
+	{0x3E44, 0x8800}, // DYNAMIC_SEQRAM_144
+	{0x3E46, 0xC880}, // DYNAMIC_SEQRAM_146
+	{0x3E48, 0x4241}, // DYNAMIC_SEQRAM_148
+	{0x3E4A, 0x8240}, // DYNAMIC_SEQRAM_14A
+	{0x3E4C, 0x8140}, // DYNAMIC_SEQRAM_14C
+	{0x3E4E, 0x8041}, // DYNAMIC_SEQRAM_14E
+	{0x3E50, 0x8042}, // DYNAMIC_SEQRAM_150
+	{0x3E52, 0x8043}, // DYNAMIC_SEQRAM_152
+	{0x3E54, 0x8300}, // DYNAMIC_SEQRAM_154
+	{0x3E56, 0xC088}, // DYNAMIC_SEQRAM_156
+	{0x3E58, 0x44BA}, // DYNAMIC_SEQRAM_158
+	{0x3E5A, 0x4488}, // DYNAMIC_SEQRAM_15A
+	{0x3E5C, 0x00C8}, // DYNAMIC_SEQRAM_15C
+	{0x3E5E, 0x8042}, // DYNAMIC_SEQRAM_15E
+	{0x3E60, 0x4181}, // DYNAMIC_SEQRAM_160
+	{0x3E62, 0x4082}, // DYNAMIC_SEQRAM_162
+	{0x3E64, 0x4080}, // DYNAMIC_SEQRAM_164
+	{0x3E66, 0x4180}, // DYNAMIC_SEQRAM_166
+	{0x3E68, 0x4280}, // DYNAMIC_SEQRAM_168
+	{0x3E6A, 0x4383}, // DYNAMIC_SEQRAM_16A
+	{0x3E6C, 0x00C0}, // DYNAMIC_SEQRAM_16C
+	{0x3E6E, 0x8844}, // DYNAMIC_SEQRAM_16E
+	{0x3E70, 0xBA44}, // DYNAMIC_SEQRAM_170
+	{0x3E72, 0x8800}, // DYNAMIC_SEQRAM_172
+	{0x3E74, 0xC880}, // DYNAMIC_SEQRAM_174
+	{0x3E76, 0x4241}, // DYNAMIC_SEQRAM_176
+	{0x3E78, 0x8140}, // DYNAMIC_SEQRAM_178
+	{0x3E7A, 0x9F5E}, // DYNAMIC_SEQRAM_17A
+	{0x3E7C, 0x8A54}, // DYNAMIC_SEQRAM_17C
+	{0x3E7E, 0x8620}, // DYNAMIC_SEQRAM_17E
+	{0x3E80, 0x2881}, // DYNAMIC_SEQRAM_180
+	{0x3E82, 0x6026}, // DYNAMIC_SEQRAM_182
+	{0x3E84, 0x8055}, // DYNAMIC_SEQRAM_184
+	{0x3E86, 0x8070}, // DYNAMIC_SEQRAM_186
+	{0x3E88, 0x0000}, // DYNAMIC_SEQRAM_188
+	{0x3E8A, 0x0000}, // DYNAMIC_SEQRAM_18A
+	{0x3E8C, 0x0000}, // DYNAMIC_SEQRAM_18C
+	{0x3E8E, 0x0000}, // DYNAMIC_SEQRAM_18E
+	{0x3E90, 0x0000}, // DYNAMIC_SEQRAM_190
+	{0x3E92, 0x0000}, // DYNAMIC_SEQRAM_192
+	{0x3E94, 0x0000}, // DYNAMIC_SEQRAM_194
+	{0x3E96, 0x0000}, // DYNAMIC_SEQRAM_196
+	{0x3E98, 0x0000}, // DYNAMIC_SEQRAM_198
+	{0x3E9A, 0x0000}, // DYNAMIC_SEQRAM_19A
+	{0x3E9C, 0x0000}, // DYNAMIC_SEQRAM_19C
+	{0x3E9E, 0x0000}, // DYNAMIC_SEQRAM_19E
+	{0x3EA0, 0x0000}, // DYNAMIC_SEQRAM_1A0
+	{0x3EA2, 0x0000}, // DYNAMIC_SEQRAM_1A2
+	{0x3EA4, 0x0000}, // DYNAMIC_SEQRAM_1A4
+	{0x3EA6, 0x0000}, // DYNAMIC_SEQRAM_1A6
+	{0x3EA8, 0x0000}, // DYNAMIC_SEQRAM_1A8
+	{0x3EAA, 0x0000}, // DYNAMIC_SEQRAM_1AA
+	{0x3EAC, 0x0000}, // DYNAMIC_SEQRAM_1AC
+	{0x3EAE, 0x0000}, // DYNAMIC_SEQRAM_1AE
+	{0x3EB0, 0x0000}, // DYNAMIC_SEQRAM_1B0
+	{0x3EB2, 0x0000}, // DYNAMIC_SEQRAM_1B2
+	{0x3EB4, 0x0000}, // DYNAMIC_SEQRAM_1B4
+	{0x3EB6, 0x004D}, // DAC_LD_0_1
+	{0x3EBC, 0xAA06}, // DAC_LD_6_7
+	{0x3EC0, 0x2E02}, // DAC_LD_10_11
+	{0x3EC2, 0x7700}, // DAC_LD_12_13
+	{0x3EC4, 0x1C08}, // DAC_LD_14_15
+	{0x3EC6, 0xEA44}, // DAC_LD_16_17
+	{0x3EC8, 0x0F0F}, // DAC_LD_18_19
+	{0x3ECA, 0x0F4A}, // DAC_LD_20_21
+	{0x3ECC, 0x0706}, // DAC_LD_22_23
+	{0x3ECE, 0x443B}, // DAC_LD_24_25
+	{0x3ED0, 0x12F0}, // DAC_LD_26_27
+	{0x3ED2, 0x0039}, // DAC_LD_28_29
+	{0x3ED4, 0x862F}, // DAC_LD_30_31
+	{0x3ED6, 0x4080}, // DAC_LD_32_33
+	{0x3ED8, 0x0523}, // DAC_LD_34_35
+	{0x3EDA, 0xF8AA}, // DAC_LD_36_37
+	{0x3EDC, 0x5078}, // DAC_LD_38_39
+	{0x3EDE, 0x5005}, // DAC_LD_40_41
+	{0x316A, 0x8200}, // DAC_RSTLO
+	{0x316E, 0x8200}, // DAC_ECL
+	{0x316C, 0x8200}, // DAC_TXLO
+	{0x3EF0, 0x414D}, // DAC_LD_ECL
+	{0x3EF2, 0x0101}, // DAC_LD_FSC
+	{0x3EF6, 0x0307}, // DAC_LD_RSTD
+	{0x3EFA, 0x0F0F}, // DAC_LD_TXLO
+	{0x3EFC, 0x0F0F}, // DAC_LD_TXLO1
+	{0x3EFE, 0x0F0F}, // DAC_LD_TXLO2
+	{0x31B0, 0x004D}, // FRAME_PREAMBLE
+	{0x31B2, 0x0028}, // LINE_PREAMBLE
+	{0x31B4, 0x230E}, // MIPI_TIMING_0
+	{0x31B6, 0x1348}, // MIPI_TIMING_1
+	{0x31B8, 0x1C12}, // MIPI_TIMING_2
+	{0x31BA, 0x185B}, // MIPI_TIMING_3
+	{0x31BC, 0x8509}, // MIPI_TIMING_4
+	{0x0300, 0x0004}, // VT_PIX_CLK_DIV
+	{0x0302, 0x0001}, // VT_SYS_CLK_DIV
+	{0x0304, 0x0A0A}, // PRE_PLL_CLK_DIV
+	{0x0306, 0xB7B7}, // PLL_MULTIPLIER	MCLK,48M
+	{0x0308, 0x000A}, // OP_PIX_CLK_DIV
+	{0x030A, 0x0001}, // OP_SYS_CLK_DIV
+	{0x0112, 0x0A0A}, // CCP_DATA_FORMAT
+	{0x3016, 0x0101}, // ROW_SPEED
+	{0x0344, 0x0028}, // X_ADDR_START
+	{0x0348, 0x1027}, // X_ADDR_END
+	{0x0346, 0x0020}, // Y_ADDR_START
+	{0x034A, 0x0C1D}, // Y_ADDR_END
+	{0x034C, 0x0800}, // X_OUTPUT_SIZE
+	{0x034E, 0x0600}, // Y_OUTPUT_SIZE
+	{0x3040, 0x0043}, // READ_MODE
+	{0x3172, 0x0206}, // ANALOG_CONTROL2
+	{0x317A, 0x516E}, // ANALOG_CONTROL6
+	{0x3F3C, 0x0003}, // ANALOG_CONTROL9
+	{0x0400, 0x0001}, // SCALING_MODE
+	{0x0404, 0x0020}, // SCALE_M
+	{0x0342, 0x1230}, // LINE_LENGTH_PCK
+	{0x0340, 0x0C4E}, // FRAME_LENGTH_LINES
+	{0x0202, 0x0C4E}, // COARSE_INTEGRATION_TIME
+	{0x30FE, 0x0060}, // CTREE_OFF
+	{0x31E0, 0x0781}, // PIX_DEF_ID
+	{0x3F00, 0x004F}, // BM_T0
+	{0x3F02, 0x0125}, // BM_T1
+	{0x3F04, 0x0020}, // NOISE_GAIN_THRESHOLD0
+	{0x3F06, 0x0040}, // NOISE_GAIN_THRESHOLD1
+	{0x3F08, 0x0070}, // NOISE_GAIN_THRESHOLD2
+	{0x3F0A, 0x0101}, // NOISE_FLOOR10
+	{0x3F0C, 0x0302}, // NOISE_FLOOR32
+	{0x3F1E, 0x0022}, // NOISE_COEF
+	{0x3F1A, 0x01FF}, // CROSSFACTOR2
+	{0x3F14, 0x0101}, // SINGLE_K_FACTOR2
+	{0x3F44, 0x0707}, // COUPLE_K_FACTOR2
+	{0x3F18, 0x011E}, // CROSSFACTOR1
+	{0x3F12, 0x0303}, // SINGLE_K_FACTOR1
+	{0x3F42, 0x1511}, // COUPLE_K_FACTOR1
+	{0x3F16, 0x011E}, // CROSSFACTOR0
+	{0x3F10, 0x0505}, // SINGLE_K_FACTOR0
+	{0x3F40, 0x1511}, // COUPLE_K_FACTOR0
+	{0x3F3C, 0x0003}, // ANALOG_CONTROL9
+	{0x301A, 0x021C}, // RESET_REGISTER
+};
+
+static const struct regval_list ar1335_1920x1080_30fps_raw10_48Mxclk[] = {
+	{0x301A, 0x0219}, // RESET_REGISTER
+	{REG_DELAY, 10},
+	{0x3042, 0x1004}, // DARK_CONTROL2
+	{0x30D2, 0x0120}, // CRM_CONTROL
+	{0x30D4, 0x0000}, // COLUMN_CORRECTION
+	{0x3090, 0x0000}, // RNF_CONTROL
+	{0x30FC, 0x0060}, // MODULE_CLK_OFF
+	{0x30FE, 0x0060}, // CTREE_OFF
+	{0x31E0, 0x0781}, // PIX_DEF_ID
+	{0x3180, 0x9434}, // FINE_DIG_CORRECTION_CONTROL
+	{0x317C, 0xEFF4}, // ANALOG_CONTROL7
+	{0x30EE, 0x613E}, // DARK_CONTROL3
+	{0x3F2C, 0x4428}, // GTH_THRES_RTN
+	{0x3D00, 0x0446}, // DYNAMIC_SEQRAM_00
+	{0x3D02, 0x4C66}, // DYNAMIC_SEQRAM_02
+	{0x3D04, 0xFFFF}, // DYNAMIC_SEQRAM_04
+	{0x3D06, 0xFFFF}, // DYNAMIC_SEQRAM_06
+	{0x3D08, 0x5E40}, // DYNAMIC_SEQRAM_08
+	{0x3D0A, 0x1146}, // DYNAMIC_SEQRAM_0A
+	{0x3D0C, 0x5D41}, // DYNAMIC_SEQRAM_0C
+	{0x3D0E, 0x1088}, // DYNAMIC_SEQRAM_0E
+	{0x3D10, 0x8342}, // DYNAMIC_SEQRAM_10
+	{0x3D12, 0x00C0}, // DYNAMIC_SEQRAM_12
+	{0x3D14, 0x5580}, // DYNAMIC_SEQRAM_14
+	{0x3D16, 0x5B83}, // DYNAMIC_SEQRAM_16
+	{0x3D18, 0x6084}, // DYNAMIC_SEQRAM_18
+	{0x3D1A, 0x5A8D}, // DYNAMIC_SEQRAM_1A
+	{0x3D1C, 0x00C0}, // DYNAMIC_SEQRAM_1C
+	{0x3D1E, 0x8342}, // DYNAMIC_SEQRAM_1E
+	{0x3D20, 0x925A}, // DYNAMIC_SEQRAM_20
+	{0x3D22, 0x8664}, // DYNAMIC_SEQRAM_22
+	{0x3D24, 0x1030}, // DYNAMIC_SEQRAM_24
+	{0x3D26, 0x801C}, // DYNAMIC_SEQRAM_26
+	{0x3D28, 0x00A0}, // DYNAMIC_SEQRAM_28
+	{0x3D2A, 0x56B0}, // DYNAMIC_SEQRAM_2A
+	{0x3D2C, 0x5788}, // DYNAMIC_SEQRAM_2C
+	{0x3D2E, 0x5150}, // DYNAMIC_SEQRAM_2E
+	{0x3D30, 0x824D}, // DYNAMIC_SEQRAM_30
+	{0x3D32, 0x8D58}, // DYNAMIC_SEQRAM_32
+	{0x3D34, 0x58D2}, // DYNAMIC_SEQRAM_34
+	{0x3D36, 0x438A}, // DYNAMIC_SEQRAM_36
+	{0x3D38, 0x4592}, // DYNAMIC_SEQRAM_38
+	{0x3D3A, 0x458A}, // DYNAMIC_SEQRAM_3A
+	{0x3D3C, 0x4389}, // DYNAMIC_SEQRAM_3C
+	{0x3D3E, 0x51FF}, // DYNAMIC_SEQRAM_3E
+	{0x3D40, 0x8451}, // DYNAMIC_SEQRAM_40
+	{0x3D42, 0x8410}, // DYNAMIC_SEQRAM_42
+	{0x3D44, 0x0C88}, // DYNAMIC_SEQRAM_44
+	{0x3D46, 0x5959}, // DYNAMIC_SEQRAM_46
+	{0x3D48, 0x8A5F}, // DYNAMIC_SEQRAM_48
+	{0x3D4A, 0xDA42}, // DYNAMIC_SEQRAM_4A
+	{0x3D4C, 0x9361}, // DYNAMIC_SEQRAM_4C
+	{0x3D4E, 0x8262}, // DYNAMIC_SEQRAM_4E
+	{0x3D50, 0x8342}, // DYNAMIC_SEQRAM_50
+	{0x3D52, 0x8010}, // DYNAMIC_SEQRAM_52
+	{0x3D54, 0xC041}, // DYNAMIC_SEQRAM_54
+	{0x3D56, 0x64FF}, // DYNAMIC_SEQRAM_56
+	{0x3D58, 0xFFB7}, // DYNAMIC_SEQRAM_58
+	{0x3D5A, 0x4081}, // DYNAMIC_SEQRAM_5A
+	{0x3D5C, 0x4080}, // DYNAMIC_SEQRAM_5C
+	{0x3D5E, 0x4180}, // DYNAMIC_SEQRAM_5E
+	{0x3D60, 0x4280}, // DYNAMIC_SEQRAM_60
+	{0x3D62, 0x438D}, // DYNAMIC_SEQRAM_62
+	{0x3D64, 0x44BA}, // DYNAMIC_SEQRAM_64
+	{0x3D66, 0x4488}, // DYNAMIC_SEQRAM_66
+	{0x3D68, 0x4380}, // DYNAMIC_SEQRAM_68
+	{0x3D6A, 0x4241}, // DYNAMIC_SEQRAM_6A
+	{0x3D6C, 0x8140}, // DYNAMIC_SEQRAM_6C
+	{0x3D6E, 0x8240}, // DYNAMIC_SEQRAM_6E
+	{0x3D70, 0x8041}, // DYNAMIC_SEQRAM_70
+	{0x3D72, 0x8042}, // DYNAMIC_SEQRAM_72
+	{0x3D74, 0x8043}, // DYNAMIC_SEQRAM_74
+	{0x3D76, 0x8D44}, // DYNAMIC_SEQRAM_76
+	{0x3D78, 0xBA44}, // DYNAMIC_SEQRAM_78
+	{0x3D7A, 0x875E}, // DYNAMIC_SEQRAM_7A
+	{0x3D7C, 0x4354}, // DYNAMIC_SEQRAM_7C
+	{0x3D7E, 0x4241}, // DYNAMIC_SEQRAM_7E
+	{0x3D80, 0x8140}, // DYNAMIC_SEQRAM_80
+	{0x3D82, 0x8120}, // DYNAMIC_SEQRAM_82
+	{0x3D84, 0x2881}, // DYNAMIC_SEQRAM_84
+	{0x3D86, 0x6026}, // DYNAMIC_SEQRAM_86
+	{0x3D88, 0x8055}, // DYNAMIC_SEQRAM_88
+	{0x3D8A, 0x8070}, // DYNAMIC_SEQRAM_8A
+	{0x3D8C, 0x8040}, // DYNAMIC_SEQRAM_8C
+	{0x3D8E, 0x4C81}, // DYNAMIC_SEQRAM_8E
+	{0x3D90, 0x45C3}, // DYNAMIC_SEQRAM_90
+	{0x3D92, 0x4581}, // DYNAMIC_SEQRAM_92
+	{0x3D94, 0x4C40}, // DYNAMIC_SEQRAM_94
+	{0x3D96, 0x8070}, // DYNAMIC_SEQRAM_96
+	{0x3D98, 0x8040}, // DYNAMIC_SEQRAM_98
+	{0x3D9A, 0x4C85}, // DYNAMIC_SEQRAM_9A
+	{0x3D9C, 0x6CA8}, // DYNAMIC_SEQRAM_9C
+	{0x3D9E, 0x6C8C}, // DYNAMIC_SEQRAM_9E
+	{0x3DA0, 0x000E}, // DYNAMIC_SEQRAM_A0
+	{0x3DA2, 0xBE44}, // DYNAMIC_SEQRAM_A2
+	{0x3DA4, 0x8844}, // DYNAMIC_SEQRAM_A4
+	{0x3DA6, 0xBC78}, // DYNAMIC_SEQRAM_A6
+	{0x3DA8, 0x0900}, // DYNAMIC_SEQRAM_A8
+	{0x3DAA, 0x8904}, // DYNAMIC_SEQRAM_AA
+	{0x3DAC, 0x8080}, // DYNAMIC_SEQRAM_AC
+	{0x3DAE, 0x0240}, // DYNAMIC_SEQRAM_AE
+	{0x3DB0, 0x8609}, // DYNAMIC_SEQRAM_B0
+	{0x3DB2, 0x008E}, // DYNAMIC_SEQRAM_B2
+	{0x3DB4, 0x0900}, // DYNAMIC_SEQRAM_B4
+	{0x3DB6, 0x8002}, // DYNAMIC_SEQRAM_B6
+	{0x3DB8, 0x4080}, // DYNAMIC_SEQRAM_B8
+	{0x3DBA, 0x0480}, // DYNAMIC_SEQRAM_BA
+	{0x3DBC, 0x887C}, // DYNAMIC_SEQRAM_BC
+	{0x3DBE, 0xAA86}, // DYNAMIC_SEQRAM_BE
+	{0x3DC0, 0x0900}, // DYNAMIC_SEQRAM_C0
+	{0x3DC2, 0x877A}, // DYNAMIC_SEQRAM_C2
+	{0x3DC4, 0x000E}, // DYNAMIC_SEQRAM_C4
+	{0x3DC6, 0xC379}, // DYNAMIC_SEQRAM_C6
+	{0x3DC8, 0x4C40}, // DYNAMIC_SEQRAM_C8
+	{0x3DCA, 0xBF70}, // DYNAMIC_SEQRAM_CA
+	{0x3DCC, 0x5E40}, // DYNAMIC_SEQRAM_CC
+	{0x3DCE, 0x114E}, // DYNAMIC_SEQRAM_CE
+	{0x3DD0, 0x5D41}, // DYNAMIC_SEQRAM_D0
+	{0x3DD2, 0x5383}, // DYNAMIC_SEQRAM_D2
+	{0x3DD4, 0x4200}, // DYNAMIC_SEQRAM_D4
+	{0x3DD6, 0xC055}, // DYNAMIC_SEQRAM_D6
+	{0x3DD8, 0xA400}, // DYNAMIC_SEQRAM_D8
+	{0x3DDA, 0xC083}, // DYNAMIC_SEQRAM_DA
+	{0x3DDC, 0x4288}, // DYNAMIC_SEQRAM_DC
+	{0x3DDE, 0x6083}, // DYNAMIC_SEQRAM_DE
+	{0x3DE0, 0x5B80}, // DYNAMIC_SEQRAM_E0
+	{0x3DE2, 0x5A64}, // DYNAMIC_SEQRAM_E2
+	{0x3DE4, 0x1030}, // DYNAMIC_SEQRAM_E4
+	{0x3DE6, 0x801C}, // DYNAMIC_SEQRAM_E6
+	{0x3DE8, 0x00A5}, // DYNAMIC_SEQRAM_E8
+	{0x3DEA, 0x5697}, // DYNAMIC_SEQRAM_EA
+	{0x3DEC, 0x57A5}, // DYNAMIC_SEQRAM_EC
+	{0x3DEE, 0x5180}, // DYNAMIC_SEQRAM_EE
+	{0x3DF0, 0x505A}, // DYNAMIC_SEQRAM_F0
+	{0x3DF2, 0x814D}, // DYNAMIC_SEQRAM_F2
+	{0x3DF4, 0x8358}, // DYNAMIC_SEQRAM_F4
+	{0x3DF6, 0x8058}, // DYNAMIC_SEQRAM_F6
+	{0x3DF8, 0xA943}, // DYNAMIC_SEQRAM_F8
+	{0x3DFA, 0x8345}, // DYNAMIC_SEQRAM_FA
+	{0x3DFC, 0xB045}, // DYNAMIC_SEQRAM_FC
+	{0x3DFE, 0x8343}, // DYNAMIC_SEQRAM_FE
+	{0x3E00, 0xA351}, // DYNAMIC_SEQRAM_100
+	{0x3E02, 0xE251}, // DYNAMIC_SEQRAM_102
+	{0x3E04, 0x8C59}, // DYNAMIC_SEQRAM_104
+	{0x3E06, 0x8059}, // DYNAMIC_SEQRAM_106
+	{0x3E08, 0x8A5F}, // DYNAMIC_SEQRAM_108
+	{0x3E0A, 0xEC7C}, // DYNAMIC_SEQRAM_10A
+	{0x3E0C, 0xCC84}, // DYNAMIC_SEQRAM_10C
+	{0x3E0E, 0x6182}, // DYNAMIC_SEQRAM_10E
+	{0x3E10, 0x6283}, // DYNAMIC_SEQRAM_110
+	{0x3E12, 0x4283}, // DYNAMIC_SEQRAM_112
+	{0x3E14, 0x10CC}, // DYNAMIC_SEQRAM_114
+	{0x3E16, 0x6496}, // DYNAMIC_SEQRAM_116
+	{0x3E18, 0x4281}, // DYNAMIC_SEQRAM_118
+	{0x3E1A, 0x41BB}, // DYNAMIC_SEQRAM_11A
+	{0x3E1C, 0x4082}, // DYNAMIC_SEQRAM_11C
+	{0x3E1E, 0x407E}, // DYNAMIC_SEQRAM_11E
+	{0x3E20, 0xCC41}, // DYNAMIC_SEQRAM_120
+	{0x3E22, 0x8042}, // DYNAMIC_SEQRAM_122
+	{0x3E24, 0x8043}, // DYNAMIC_SEQRAM_124
+	{0x3E26, 0x8300}, // DYNAMIC_SEQRAM_126
+	{0x3E28, 0xC088}, // DYNAMIC_SEQRAM_128
+	{0x3E2A, 0x44BA}, // DYNAMIC_SEQRAM_12A
+	{0x3E2C, 0x4488}, // DYNAMIC_SEQRAM_12C
+	{0x3E2E, 0x00C8}, // DYNAMIC_SEQRAM_12E
+	{0x3E30, 0x8042}, // DYNAMIC_SEQRAM_130
+	{0x3E32, 0x4181}, // DYNAMIC_SEQRAM_132
+	{0x3E34, 0x4082}, // DYNAMIC_SEQRAM_134
+	{0x3E36, 0x4080}, // DYNAMIC_SEQRAM_136
+	{0x3E38, 0x4180}, // DYNAMIC_SEQRAM_138
+	{0x3E3A, 0x4280}, // DYNAMIC_SEQRAM_13A
+	{0x3E3C, 0x4383}, // DYNAMIC_SEQRAM_13C
+	{0x3E3E, 0x00C0}, // DYNAMIC_SEQRAM_13E
+	{0x3E40, 0x8844}, // DYNAMIC_SEQRAM_140
+	{0x3E42, 0xBA44}, // DYNAMIC_SEQRAM_142
+	{0x3E44, 0x8800}, // DYNAMIC_SEQRAM_144
+	{0x3E46, 0xC880}, // DYNAMIC_SEQRAM_146
+	{0x3E48, 0x4241}, // DYNAMIC_SEQRAM_148
+	{0x3E4A, 0x8240}, // DYNAMIC_SEQRAM_14A
+	{0x3E4C, 0x8140}, // DYNAMIC_SEQRAM_14C
+	{0x3E4E, 0x8041}, // DYNAMIC_SEQRAM_14E
+	{0x3E50, 0x8042}, // DYNAMIC_SEQRAM_150
+	{0x3E52, 0x8043}, // DYNAMIC_SEQRAM_152
+	{0x3E54, 0x8300}, // DYNAMIC_SEQRAM_154
+	{0x3E56, 0xC088}, // DYNAMIC_SEQRAM_156
+	{0x3E58, 0x44BA}, // DYNAMIC_SEQRAM_158
+	{0x3E5A, 0x4488}, // DYNAMIC_SEQRAM_15A
+	{0x3E5C, 0x00C8}, // DYNAMIC_SEQRAM_15C
+	{0x3E5E, 0x8042}, // DYNAMIC_SEQRAM_15E
+	{0x3E60, 0x4181}, // DYNAMIC_SEQRAM_160
+	{0x3E62, 0x4082}, // DYNAMIC_SEQRAM_162
+	{0x3E64, 0x4080}, // DYNAMIC_SEQRAM_164
+	{0x3E66, 0x4180}, // DYNAMIC_SEQRAM_166
+	{0x3E68, 0x4280}, // DYNAMIC_SEQRAM_168
+	{0x3E6A, 0x4383}, // DYNAMIC_SEQRAM_16A
+	{0x3E6C, 0x00C0}, // DYNAMIC_SEQRAM_16C
+	{0x3E6E, 0x8844}, // DYNAMIC_SEQRAM_16E
+	{0x3E70, 0xBA44}, // DYNAMIC_SEQRAM_170
+	{0x3E72, 0x8800}, // DYNAMIC_SEQRAM_172
+	{0x3E74, 0xC880}, // DYNAMIC_SEQRAM_174
+	{0x3E76, 0x4241}, // DYNAMIC_SEQRAM_176
+	{0x3E78, 0x8140}, // DYNAMIC_SEQRAM_178
+	{0x3E7A, 0x9F5E}, // DYNAMIC_SEQRAM_17A
+	{0x3E7C, 0x8A54}, // DYNAMIC_SEQRAM_17C
+	{0x3E7E, 0x8620}, // DYNAMIC_SEQRAM_17E
+	{0x3E80, 0x2881}, // DYNAMIC_SEQRAM_180
+	{0x3E82, 0x6026}, // DYNAMIC_SEQRAM_182
+	{0x3E84, 0x8055}, // DYNAMIC_SEQRAM_184
+	{0x3E86, 0x8070}, // DYNAMIC_SEQRAM_186
+	{0x3E88, 0x0000}, // DYNAMIC_SEQRAM_188
+	{0x3E8A, 0x0000}, // DYNAMIC_SEQRAM_18A
+	{0x3E8C, 0x0000}, // DYNAMIC_SEQRAM_18C
+	{0x3E8E, 0x0000}, // DYNAMIC_SEQRAM_18E
+	{0x3E90, 0x0000}, // DYNAMIC_SEQRAM_190
+	{0x3E92, 0x0000}, // DYNAMIC_SEQRAM_192
+	{0x3E94, 0x0000}, // DYNAMIC_SEQRAM_194
+	{0x3E96, 0x0000}, // DYNAMIC_SEQRAM_196
+	{0x3E98, 0x0000}, // DYNAMIC_SEQRAM_198
+	{0x3E9A, 0x0000}, // DYNAMIC_SEQRAM_19A
+	{0x3E9C, 0x0000}, // DYNAMIC_SEQRAM_19C
+	{0x3E9E, 0x0000}, // DYNAMIC_SEQRAM_19E
+	{0x3EA0, 0x0000}, // DYNAMIC_SEQRAM_1A0
+	{0x3EA2, 0x0000}, // DYNAMIC_SEQRAM_1A2
+	{0x3EA4, 0x0000}, // DYNAMIC_SEQRAM_1A4
+	{0x3EA6, 0x0000}, // DYNAMIC_SEQRAM_1A6
+	{0x3EA8, 0x0000}, // DYNAMIC_SEQRAM_1A8
+	{0x3EAA, 0x0000}, // DYNAMIC_SEQRAM_1AA
+	{0x3EAC, 0x0000}, // DYNAMIC_SEQRAM_1AC
+	{0x3EAE, 0x0000}, // DYNAMIC_SEQRAM_1AE
+	{0x3EB0, 0x0000}, // DYNAMIC_SEQRAM_1B0
+	{0x3EB2, 0x0000}, // DYNAMIC_SEQRAM_1B2
+	{0x3EB4, 0x0000}, // DYNAMIC_SEQRAM_1B4
+	{0x3EB6, 0x004D}, // DAC_LD_0_1
+	{0x3EBC, 0xAA06}, // DAC_LD_6_7
+	{0x3EC0, 0x2E02}, // DAC_LD_10_11
+	{0x3EC2, 0x7700}, // DAC_LD_12_13
+	{0x3EC4, 0x1C08}, // DAC_LD_14_15
+	{0x3EC6, 0xEA44}, // DAC_LD_16_17
+	{0x3EC8, 0x0F0F}, // DAC_LD_18_19
+	{0x3ECA, 0x0F4A}, // DAC_LD_20_21
+	{0x3ECC, 0x0706}, // DAC_LD_22_23
+	{0x3ECE, 0x443B}, // DAC_LD_24_25
+	{0x3ED0, 0x12F0}, // DAC_LD_26_27
+	{0x3ED2, 0x0039}, // DAC_LD_28_29
+	{0x3ED4, 0x862F}, // DAC_LD_30_31
+	{0x3ED6, 0x4080}, // DAC_LD_32_33
+	{0x3ED8, 0x0523}, // DAC_LD_34_35
+	{0x3EDA, 0xF8AA}, // DAC_LD_36_37
+	{0x3EDC, 0x5078}, // DAC_LD_38_39
+	{0x3EDE, 0x5005}, // DAC_LD_40_41
+	{0x316A, 0x8200}, // DAC_RSTLO
+	{0x316E, 0x8200}, // DAC_ECL
+	{0x316C, 0x8200}, // DAC_TXLO
+	{0x3EF0, 0x414D}, // DAC_LD_ECL
+	{0x3EF2, 0x0101}, // DAC_LD_FSC
+	{0x3EF6, 0x0307}, // DAC_LD_RSTD
+	{0x3EFA, 0x0F0F}, // DAC_LD_TXLO
+	{0x3EFC, 0x0F0F}, // DAC_LD_TXLO1
+	{0x3EFE, 0x0F0F}, // DAC_LD_TXLO2
+	{0x31B0, 0x004D}, // FRAME_PREAMBLE
+	{0x31B2, 0x0028}, // LINE_PREAMBLE
+	{0x31B4, 0x230E}, // MIPI_TIMING_0
+	{0x31B6, 0x1348}, // MIPI_TIMING_1
+	{0x31B8, 0x1C12}, // MIPI_TIMING_2
+	{0x31BA, 0x185B}, // MIPI_TIMING_3
+	{0x31BC, 0x8509}, // MIPI_TIMING_4
+	{0x0300, 0x0004}, // VT_PIX_CLK_DIV
+	{0x0302, 0x0001}, // VT_SYS_CLK_DIV
+	{0x0304, 0x0A0A}, // PRE_PLL_CLK_DIV
+	{0x0306, 0xB7B7}, // PLL_MULTIPLIER	MCLK,48M
+	{0x0308, 0x000A}, // OP_PIX_CLK_DIV
+	{0x030A, 0x0001}, // OP_SYS_CLK_DIV
+	{0x0112, 0x0A0A}, // CCP_DATA_FORMAT
+	{0x3016, 0x0101}, // ROW_SPEED
+	{0x0344, 0x00C8}, // X_ADDR_START
+	{0x0348, 0x0FC7}, // X_ADDR_END
+	{0x0346, 0x01F0}, // Y_ADDR_START
+	{0x034A, 0x0A5D}, // Y_ADDR_END
+	{0x034C, 0x0780}, // X_OUTPUT_SIZE
+	{0x034E, 0x0438}, // Y_OUTPUT_SIZE
+	{0x3040, 0x0043}, // READ_MODE
+	{0x3172, 0x0206}, // ANALOG_CONTROL2
+	{0x317A, 0x516E}, // ANALOG_CONTROL6
+	{0x3F3C, 0x0003}, // ANALOG_CONTROL9
+	{0x0400, 0x0001}, // SCALING_MODE
+	{0x0404, 0x0020}, // SCALE_M
+	{0x0342, 0x1230}, // LINE_LENGTH_PCK
+	{0x0340, 0x0C4E}, // FRAME_LENGTH_LINES
+	{0x0202, 0x0C4E}, // COARSE_INTEGRATION_TIME
+	{0x30FE, 0x0060}, // CTREE_OFF
+	{0x31E0, 0x0781}, // PIX_DEF_ID
+	{0x3F00, 0x004F}, // BM_T0
+	{0x3F02, 0x0125}, // BM_T1
+	{0x3F04, 0x0020}, // NOISE_GAIN_THRESHOLD0
+	{0x3F06, 0x0040}, // NOISE_GAIN_THRESHOLD1
+	{0x3F08, 0x0070}, // NOISE_GAIN_THRESHOLD2
+	{0x3F0A, 0x0101}, // NOISE_FLOOR10
+	{0x3F0C, 0x0302}, // NOISE_FLOOR32
+	{0x3F1E, 0x0022}, // NOISE_COEF
+	{0x3F1A, 0x01FF}, // CROSSFACTOR2
+	{0x3F14, 0x0101}, // SINGLE_K_FACTOR2
+	{0x3F44, 0x0707}, // COUPLE_K_FACTOR2
+	{0x3F18, 0x011E}, // CROSSFACTOR1
+	{0x3F12, 0x0303}, // SINGLE_K_FACTOR1
+	{0x3F42, 0x1511}, // COUPLE_K_FACTOR1
+	{0x3F16, 0x011E}, // CROSSFACTOR0
+	{0x3F10, 0x0505}, // SINGLE_K_FACTOR0
+	{0x3F40, 0x1511}, // COUPLE_K_FACTOR0
+	{0x3F3C, 0x0003}, // ANALOG_CONTROL9
+	{0x301A, 0x021C}, // RESET_REGISTER
+};
+
+#define AR1335_PIXEL_FORMAT  MEDIA_BUS_FMT_SGRBG10_1X10
+static const struct ar1335_mode ar1335_modes[] = {
+	/* 3840x2160 10-bit mode. Full resolution centre-cropped. */
+	{
+		.format = {
+			.code		= AR1335_PIXEL_FORMAT,
+			.colorspace	= V4L2_COLORSPACE_SRGB,
+			.field		= V4L2_FIELD_NONE,
+			.width		= 3840,
+			.height		= 2160
+		},
+		.pixel_rate	= 281600000,
+		.hts		= 0x1230,
+		.vts		= 0x0BCC,
+		.reg_list	= ar1335_3840x2160_20fps_raw10_48Mxclk,
+		.num_regs	= ARRAY_SIZE(ar1335_3840x2160_20fps_raw10_48Mxclk)
+	},
+	/* 2048x1536 10-bit mode. Full resolution centre-cropped. */
+	{
+		.format = {
+			.code		= AR1335_PIXEL_FORMAT,
+			.colorspace	= V4L2_COLORSPACE_SRGB,
+			.field		= V4L2_FIELD_NONE,
+			.width		= 2048,
+			.height		= 1536
+		},
+		.pixel_rate	= 439200000,
+		.hts		= 0x1230,
+		.vts		= 0x0C4E,
+		.reg_list	= ar1335_2048x1536_30fps_raw10_48Mxclk,
+		.num_regs	= ARRAY_SIZE(ar1335_2048x1536_30fps_raw10_48Mxclk)
+	},
+	/* 1920x1080 10-bit mode. Full resolution centre-cropped. */
+	{
+		.format = {
+			.code		= AR1335_PIXEL_FORMAT,
+			.colorspace	= V4L2_COLORSPACE_SRGB,
+			.field		= V4L2_FIELD_NONE,
+			.width		= 1920,
+			.height		= 1080
+		},
+		.pixel_rate	= 439200000,
+		.hts		= 0x1230,
+		.vts		= 0x0C4E,
+		.reg_list	= ar1335_1920x1080_30fps_raw10_48Mxclk,
+		.num_regs	= ARRAY_SIZE(ar1335_1920x1080_30fps_raw10_48Mxclk)
+	},
+};
+
+/* Default sensor mode is 2x2 binned 640x480 SBGGR10_1X10. */
+#define AR1335_DEFAULT_MODE	(&ar1335_modes[1])
+#define AR1335_DEFAULT_FORMAT	(ar1335_modes[1].format)
+
+static int ar1335_write16(struct v4l2_subdev *sd, u16 reg, u16 val)
+{
+	unsigned char data[4] = { reg >> 8, reg & 0xff, val >> 8, val & 0xff};
+	struct i2c_client *client = v4l2_get_subdevdata(sd);
+	int ret;
+
+	ret = i2c_master_send(client, data, 4);
+	if (ret < 0) {
+		dev_dbg(&client->dev, "%s: i2c write error, reg: %x",
+			__func__, reg);
+		return ret;
+	}
+
+	return 0;
+}
+
+static int ar1335_write(struct v4l2_subdev *sd, u16 reg, u8 val)
+{
+	unsigned char data[3] = { reg >> 8, reg & 0xff, val};
+	struct i2c_client *client = v4l2_get_subdevdata(sd);
+	int ret;
+
+	ret = i2c_master_send(client, data, 3);
+	if (ret < 0) {
+		dev_err(&client->dev, "%s: i2c write error, reg: %x",
+				__func__, reg);
+		return ret;
+	}
+
+	return 0;
+}
+
+static int ar1335_read(struct v4l2_subdev *sd, u16 reg, u8 *val)
+{
+	unsigned char data_w[2] = { reg >> 8, reg & 0xff };
+	struct i2c_client *client = v4l2_get_subdevdata(sd);
+	int ret;
+
+	ret = i2c_master_send(client, data_w, 2);
+	if (ret < 0) {
+		dev_err(&client->dev, "%s: i2c write error, reg: %x",
+			__func__, reg);
+		return ret;
+	}
+
+	ret = i2c_master_recv(client, val, 1);
+	if (ret < 0) {
+		dev_err(&client->dev, "%s: i2c read error, reg: %x",
+				__func__, reg);
+		return ret;
+	}
+
+	return 0;
+}
+
+static int ar1335_write_array(struct v4l2_subdev *sd,
+				  const struct regval_list *regs, int array_size)
+{
+	int i, ret;
+
+	for (i = 0; i < array_size; i++) {
+		if (regs[i].addr == REG_DELAY) {
+			msleep(regs[i].data);
+			continue;
+		}
+		ret = ar1335_write16(sd, regs[i].addr, regs[i].data);
+		if (ret < 0) {
+			dev_err(sd->dev, "write sensor regs[%i] addr = 0x%04X, data = 0x%04X, error %d",
+					i, regs[i].addr, regs[i].data, ret);
+			return ret;
+		}
+	}
+
+	return 0;
+}
+
+static int ar1335_set_mode(struct v4l2_subdev *sd)
+{
+	struct ar1335 *sensor = to_sensor(sd);
+	int ret;
+	//dev_info(sd->dev, ">>> %s:%d <<<", __func__, __LINE__);
+
+	ret = ar1335_write_array(sd, sensor->mode->reg_list,
+				 sensor->mode->num_regs);
+	if (ret < 0) {
+		return ret;
+	}
+
+	return 0;
+}
+
+static int ar1335_stream_on(struct v4l2_subdev *sd)
+{
+	struct i2c_client *client = v4l2_get_subdevdata(sd);
+	int ret;
+	//dev_info(sd->dev, ">>> %s:%d <<<", __func__, __LINE__);
+
+	ret = ar1335_set_mode(sd);
+	if (ret) {
+		dev_err(&client->dev, "Failed to program sensor mode: %d", ret);
+		return ret;
+	}
+
+	/* Apply customized values from user when stream starts. */
+	ret =  __v4l2_ctrl_handler_setup(sd->ctrl_handler);
+	if (ret)
+		return ret;
+
+	return 0;
+}
+
+static int ar1335_stream_off(struct v4l2_subdev *sd)
+{
+	int ret;
+	//dev_info(sd->dev, ">>> %s:%d <<<", __func__, __LINE__);
+
+	ret = ar1335_write(sd, AR1335_SW_RESET, 0x01);
+	if (ret < 0)
+		return ret;
+
+	msleep(10);
+	return 0;
+}
+
+static int ar1335_power_on(struct device *dev)
+{
+	struct ar1335 *sensor = dev_get_drvdata(dev);
+	int ret;
+
+	dev_info(dev, "AR1335 power on");
+
+	if (sensor->pwdn) {
+		gpiod_set_value_cansleep(sensor->pwdn, 0);
+		msleep(PWDN_ACTIVE_DELAY_MS);
+	}
+
+	ret = clk_prepare_enable(sensor->xclk);
+	if (ret < 0) {
+		dev_err(dev, "clk prepare enable failed");
+		goto error_pwdn;
+	}
+
+	return 0;
+
+error_pwdn:
+	gpiod_set_value_cansleep(sensor->pwdn, 1);
+
+	return ret;
+}
+
+static int ar1335_power_off(struct device *dev)
+{
+	struct ar1335 *sensor = dev_get_drvdata(dev);
+
+	dev_info(dev, "AR1335 power off");
+
+	clk_disable_unprepare(sensor->xclk);
+	gpiod_set_value_cansleep(sensor->pwdn, 1);
+
+	return 0;
+}
+
+/* Subdev core operations registration */
+static const struct v4l2_subdev_core_ops ar1335_subdev_core_ops = {
+	.subscribe_event	= v4l2_ctrl_subdev_subscribe_event,
+	.unsubscribe_event	= v4l2_event_subdev_unsubscribe,
+};
+
+static int ar1335_s_stream(struct v4l2_subdev *sd, int enable)
+{
+	struct i2c_client *client = v4l2_get_subdevdata(sd);
+	struct ar1335 *sensor = to_sensor(sd);
+	int ret;
+	dev_info(sd->dev, ">>> %s:%d enable %d <<<", __func__, __LINE__, enable);
+
+	mutex_lock(&sensor->lock);
+	if (sensor->streaming == enable) {
+		mutex_unlock(&sensor->lock);
+		return 0;
+	}
+
+	if (enable) {
+		ret = pm_runtime_resume_and_get(&client->dev);
+		if (ret < 0)
+			goto error_unlock;
+
+		ret = ar1335_stream_on(sd);
+		if (ret < 0) {
+			dev_err(&client->dev, "stream start failed: %d", ret);
+			goto error_pm;
+		}
+	} else {
+		ret = ar1335_stream_off(sd);
+		if (ret < 0) {
+			dev_err(&client->dev, "stream stop failed: %d", ret);
+			goto error_pm;
+		}
+		pm_runtime_put(&client->dev);
+	}
+
+	sensor->streaming = enable;
+	mutex_unlock(&sensor->lock);
+
+	return 0;
+
+error_pm:
+	pm_runtime_put(&client->dev);
+error_unlock:
+	mutex_unlock(&sensor->lock);
+
+	return ret;
+}
+
+static const struct v4l2_subdev_video_ops ar1335_subdev_video_ops = {
+	.s_stream =		ar1335_s_stream,
+};
+
+static int ar1335_enum_mbus_code(struct v4l2_subdev *sd,
+				 struct v4l2_subdev_state *sd_state,
+				 struct v4l2_subdev_mbus_code_enum *code)
+{
+	//dev_info(sd->dev, ">>> %s:%d <<<", __func__, __LINE__);
+	if (code->index > 0)
+		return -EINVAL;
+
+	code->code = AR1335_PIXEL_FORMAT;
+
+	return 0;
+}
+
+static int ar1335_enum_frame_size(struct v4l2_subdev *sd,
+				  struct v4l2_subdev_state *sd_state,
+				  struct v4l2_subdev_frame_size_enum *fse)
+{
+	const struct v4l2_mbus_framefmt *fmt;
+	//dev_info(sd->dev, ">>> %s:%d <<<", __func__, __LINE__);
+
+	if (fse->code != AR1335_PIXEL_FORMAT ||
+		fse->index >= ARRAY_SIZE(ar1335_modes))
+		return -EINVAL;
+
+	fmt = &ar1335_modes[fse->index].format;
+	fse->min_width = fmt->width;
+	fse->max_width = fmt->width;
+	fse->min_height = fmt->height;
+	fse->max_height = fmt->height;
+
+	return 0;
+}
+
+static int ar1335_get_pad_fmt(struct v4l2_subdev *sd,
+				  struct v4l2_subdev_state *sd_state,
+				  struct v4l2_subdev_format *format)
+{
+	struct v4l2_mbus_framefmt *fmt = &format->format;
+	const struct v4l2_mbus_framefmt *sensor_format;
+	struct ar1335 *sensor = to_sensor(sd);
+	//dev_info(sd->dev, ">>> %s:%d <<<", __func__, __LINE__);
+
+	mutex_lock(&sensor->lock);
+	switch (format->which) {
+	case V4L2_SUBDEV_FORMAT_TRY:
+		sensor_format = v4l2_subdev_get_try_format(sd, sd_state,
+							   format->pad);
+		break;
+	default:
+		sensor_format = &sensor->mode->format;
+		break;
+	}
+
+	*fmt = *sensor_format;
+	mutex_unlock(&sensor->lock);
+
+	return 0;
+}
+
+static int ar1335_set_pad_fmt(struct v4l2_subdev *sd,
+				  struct v4l2_subdev_state *sd_state,
+				  struct v4l2_subdev_format *format)
+{
+	struct v4l2_mbus_framefmt *fmt = &format->format;
+	struct ar1335 *sensor = to_sensor(sd);
+	const struct ar1335_mode *mode;
+	//dev_info(sd->dev, ">>> %s:%d <<<", __func__, __LINE__);
+
+	mode = v4l2_find_nearest_size(ar1335_modes, ARRAY_SIZE(ar1335_modes),
+					  format.width, format.height,
+					  fmt->width, fmt->height);
+
+	/* Update the sensor mode and apply at it at streamon time. */
+	mutex_lock(&sensor->lock);
+	if (format->which == V4L2_SUBDEV_FORMAT_TRY) {
+		*v4l2_subdev_get_try_format(sd, sd_state, format->pad) = mode->format;
+	} else {
+		int exposure_max, exposure_def;
+		int hblank, vblank;
+
+		sensor->mode = mode;
+		__v4l2_ctrl_modify_range(sensor->pixel_rate, mode->pixel_rate,
+					 mode->pixel_rate, 1, mode->pixel_rate);
+
+		hblank = mode->hts - mode->format.width;
+		__v4l2_ctrl_modify_range(sensor->hblank, hblank, hblank, 1,
+					 hblank);
+
+		vblank = mode->vts - mode->format.height;
+		__v4l2_ctrl_modify_range(sensor->vblank, AR1335_VBLANK_MIN,
+					 AR1335_VTS_MAX - mode->format.height,
+					 1, vblank);
+		__v4l2_ctrl_s_ctrl(sensor->vblank, vblank);
+
+		exposure_max = mode->vts - 1;
+		exposure_def = min(exposure_max, AR1335_EXPOSURE_DEFAULT);
+		__v4l2_ctrl_modify_range(sensor->exposure,
+					 sensor->exposure->minimum,
+					 exposure_max, sensor->exposure->step,
+					 exposure_def);
+	}
+	*fmt = mode->format;
+	mutex_unlock(&sensor->lock);
+
+	return 0;
+}
+
+static const struct v4l2_subdev_pad_ops ar1335_subdev_pad_ops = {
+	.enum_mbus_code		= ar1335_enum_mbus_code,
+	.enum_frame_size	= ar1335_enum_frame_size,
+	.set_fmt		= ar1335_set_pad_fmt,
+	.get_fmt		= ar1335_get_pad_fmt,
+};
+
+static const struct v4l2_subdev_ops ar1335_subdev_ops = {
+	.core		= &ar1335_subdev_core_ops,
+	.video		= &ar1335_subdev_video_ops,
+	.pad		= &ar1335_subdev_pad_ops,
+};
+
+static int ar1335_detect(struct v4l2_subdev *sd)
+{
+	struct i2c_client *client = v4l2_get_subdevdata(sd);
+	u8 read;
+	int ret;
+
+	ret = ar1335_write(sd, AR1335_SW_RESET, 0x01);
+	if (ret < 0) {
+		return ret;
+	}
+
+	msleep(10);
+
+	ret = ar1335_read(sd, AR1335_REG_CHIPID_H, &read);
+	if (ret < 0) {
+		return ret;
+	}
+
+	if (read != 0x01) {
+		dev_err(&client->dev, "ID High expected 0x01 got %x", read);
+		return -ENODEV;
+	}
+
+	ret = ar1335_read(sd, AR1335_REG_CHIPID_L, &read);
+	if (ret < 0) {
+		return ret;
+	}
+
+	if (read != 0x53) {
+		dev_err(&client->dev, "ID Low expected 0x47 got %x", read);
+		return -ENODEV;
+	}
+
+	dev_info(&client->dev, "Aptina AR1335 (ID:0x0153) detected!");
+	return 0;
+}
+
+static int ar1335_open(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh)
+{
+	struct v4l2_mbus_framefmt *format =
+				v4l2_subdev_get_try_format(sd, fh->state, 0);
+	//dev_info(sd->dev, ">>> %s:%d <<<", __func__, __LINE__);
+	*format = AR1335_DEFAULT_FORMAT;
+
+	return 0;
+}
+
+static int ar1335_close(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh)
+{
+	//dev_info(sd->dev, ">>> %s:%d <<<", __func__, __LINE__);
+	return 0;
+}
+
+static const struct v4l2_subdev_internal_ops ar1335_subdev_internal_ops = {
+	.open = ar1335_open,
+	.close = ar1335_close,
+};
+
+static int ar1335_s_ctrl(struct v4l2_ctrl *ctrl)
+{
+	struct ar1335 *sensor = container_of(ctrl->handler,
+						struct ar1335, ctrls);
+	struct v4l2_subdev *sd = &sensor->sd;
+	struct i2c_client *client = v4l2_get_subdevdata(sd);
+	int ret = 0;
+
+	//dev_info(sd->dev, ">>> %s:%d <<<", __func__, __LINE__);
+
+	/* v4l2_ctrl_lock() locks our own mutex */
+
+	if (ctrl->id == V4L2_CID_VBLANK) {
+		int exposure_max, exposure_def;
+
+		/* Update max exposure while meeting expected vblanking */
+		exposure_max = sensor->mode->format.height + ctrl->val - 1;
+		exposure_def = min(exposure_max, AR1335_EXPOSURE_DEFAULT);
+		__v4l2_ctrl_modify_range(sensor->exposure,
+					 sensor->exposure->minimum,
+					 exposure_max, sensor->exposure->step,
+					 exposure_def);
+	}
+
+	/*
+	 * If the device is not powered up do not apply any controls
+	 * to H/W at this time. Instead the controls will be restored
+	 * at s_stream(1) time.
+	 */
+	if (pm_runtime_get_if_in_use(&client->dev) == 0)
+		return 0;
+
+	switch (ctrl->id) {
+	case V4L2_CID_ANALOGUE_GAIN:
+		ret = ar1335_write16(sd, AR1335_REG_GAIN, ctrl->val);
+		break;
+	case V4L2_CID_EXPOSURE:
+		ret = ar1335_write16(sd, AR1335_REG_EXPOSURE, ctrl->val);
+		break;
+	case V4L2_CID_VBLANK:
+		ret = ar1335_write16(sd, AR1335_REG_VTS, sensor->mode->format.height + ctrl->val);
+		break;
+
+	/* Read-only, but we adjust it based on mode. */
+	case V4L2_CID_PIXEL_RATE:
+	case V4L2_CID_HBLANK:
+		/* Read-only, but we adjust it based on mode. */
+		break;
+
+	default:
+		dev_err(&client->dev,
+			 "Control (id:0x%x, val:0x%x) not supported",
+			 ctrl->id, ctrl->val);
+		return -EINVAL;
+	}
+
+	pm_runtime_put(&client->dev);
+
+	return ret;
+}
+
+static const struct v4l2_ctrl_ops ar1335_ctrl_ops = {
+	.s_ctrl = ar1335_s_ctrl,
+};
+
+static int ar1335_init_controls(struct ar1335 *sensor)
+{
+	struct i2c_client *client = v4l2_get_subdevdata(&sensor->sd);
+	int hblank, exposure_max, exposure_def;
+
+	v4l2_ctrl_handler_init(&sensor->ctrls, 8);
+
+	exposure_max = sensor->mode->vts - 1;
+	exposure_def = min(exposure_max, AR1335_EXPOSURE_DEFAULT);
+	sensor->exposure = v4l2_ctrl_new_std(&sensor->ctrls, &ar1335_ctrl_ops,
+						 V4L2_CID_EXPOSURE,
+						 AR1335_EXPOSURE_MIN,
+						 exposure_max, AR1335_EXPOSURE_STEP,
+						 exposure_def);
+
+	/* min: 16 = 1.0x; max (10 bits); default: 32 = 2.0x. */
+	v4l2_ctrl_new_std(&sensor->ctrls, &ar1335_ctrl_ops,
+			  V4L2_CID_ANALOGUE_GAIN, 0x2010, 0x633f, 1, 0x2010); //FIXME
+
+	/* By default, PIXEL_RATE is read only, but it does change per mode */
+	sensor->pixel_rate = v4l2_ctrl_new_std(&sensor->ctrls, &ar1335_ctrl_ops,
+						   V4L2_CID_PIXEL_RATE,
+						   sensor->mode->pixel_rate,
+						   sensor->mode->pixel_rate, 1,
+						   sensor->mode->pixel_rate);
+
+	/* By default, HBLANK is read only, but it does change per mode. */
+	hblank = sensor->mode->hts - sensor->mode->format.width;
+	sensor->hblank = v4l2_ctrl_new_std(&sensor->ctrls, &ar1335_ctrl_ops,
+					   V4L2_CID_HBLANK, hblank, hblank, 1,
+					   hblank);
+
+	sensor->vblank = v4l2_ctrl_new_std(&sensor->ctrls, &ar1335_ctrl_ops,
+					   V4L2_CID_VBLANK, AR1335_VBLANK_MIN,
+					   AR1335_VTS_MAX -
+					   sensor->mode->format.height, 1,
+					   sensor->mode->vts -
+					   sensor->mode->format.height);
+
+	if (sensor->ctrls.error)
+		goto handler_free;
+
+	sensor->pixel_rate->flags |= V4L2_CTRL_FLAG_READ_ONLY;
+	sensor->hblank->flags |= V4L2_CTRL_FLAG_READ_ONLY;
+	sensor->sd.ctrl_handler = &sensor->ctrls;
+
+	return 0;
+
+handler_free:
+	dev_err(&client->dev, "%s Controls initialization failed (%d)",
+		__func__, sensor->ctrls.error);
+	v4l2_ctrl_handler_free(&sensor->ctrls);
+
+	return sensor->ctrls.error;
+}
+
+static int ar1335_probe(struct i2c_client *client)
+{
+	struct device *dev = &client->dev;
+	struct ar1335 *sensor;
+	struct v4l2_subdev *sd;
+	u32 xclk_freq;
+	int ret;
+
+	sensor = devm_kzalloc(dev, sizeof(*sensor), GFP_KERNEL);
+	if (!sensor) {
+		dev_err(dev, "malloc for sensor context fail");
+		return -ENOMEM;
+	}
+
+	sensor->xclk = devm_clk_get(dev, NULL);
+	if (IS_ERR(sensor->xclk)) {
+		dev_err(dev, "could not get xclk");
+		return PTR_ERR(sensor->xclk);
+	}
+
+	xclk_freq = clk_get_rate(sensor->xclk);
+	if (xclk_freq != 48000000) {
+		dev_err(dev, "Unsupported clock frequency: %u", xclk_freq);
+		return -EINVAL;
+	}
+
+	/* Request the power down GPIO asserted. */
+	sensor->pwdn = devm_gpiod_get_optional(dev, "pwdn", GPIOD_OUT_HIGH);
+	if (IS_ERR(sensor->pwdn)) {
+		dev_err(dev, "Failed to get 'pwdn' gpio");
+		return -EINVAL;
+	}
+
+	mutex_init(&sensor->lock);
+
+	sensor->mode = AR1335_DEFAULT_MODE;
+
+	ret = ar1335_init_controls(sensor);
+	if (ret) {
+		goto mutex_destroy;
+	}
+
+	sd = &sensor->sd;
+	v4l2_i2c_subdev_init(sd, client, &ar1335_subdev_ops);
+	sd->internal_ops = &ar1335_subdev_internal_ops;
+	sd->flags |= V4L2_SUBDEV_FL_HAS_DEVNODE | V4L2_SUBDEV_FL_HAS_EVENTS;
+
+	sensor->pad.flags = MEDIA_PAD_FL_SOURCE;
+	sd->entity.function = MEDIA_ENT_F_CAM_SENSOR;
+	ret = media_entity_pads_init(&sd->entity, 1, &sensor->pad);
+	if (ret < 0) {
+		dev_err(dev, "media entity pads init fail");
+		goto ctrl_handler_free;
+	}
+
+	ret = ar1335_power_on(dev);
+	if (ret) {
+		goto entity_cleanup;
+	}
+
+	ret = ar1335_detect(sd);
+	if (ret < 0) {
+		goto power_off;
+	}
+
+	ret = v4l2_async_register_subdev(sd);
+	if (ret < 0) {
+		dev_err(dev, "v4l2 async register subdev fail");
+		goto power_off;
+	}
+
+	/* Enable runtime PM and turn off the device */
+	pm_runtime_set_active(dev);
+	pm_runtime_enable(dev);
+	pm_runtime_idle(dev);
+
+	dev_info(dev, "Aptina AR1335 camera driver probed!");
+
+	return 0;
+
+power_off:
+	ar1335_power_off(dev);
+entity_cleanup:
+	media_entity_cleanup(&sd->entity);
+ctrl_handler_free:
+	v4l2_ctrl_handler_free(&sensor->ctrls);
+mutex_destroy:
+	mutex_destroy(&sensor->lock);
+
+	return ret;
+}
+
+static int ar1335_remove(struct i2c_client *client)
+{
+	struct v4l2_subdev *sd = i2c_get_clientdata(client);
+	struct ar1335 *sensor = to_sensor(sd);
+
+	v4l2_async_unregister_subdev(&sensor->sd);
+	media_entity_cleanup(&sensor->sd.entity);
+	v4l2_ctrl_handler_free(&sensor->ctrls);
+	v4l2_device_unregister_subdev(sd);
+	pm_runtime_disable(&client->dev);
+	mutex_destroy(&sensor->lock);
+
+	return 0;
+}
+
+static const struct dev_pm_ops ar1335_pm_ops = {
+	SET_RUNTIME_PM_OPS(ar1335_power_off, ar1335_power_on, NULL)
+};
+
+static const struct i2c_device_id ar1335_id[] = {
+	{ "ar1335", 0 },
+	{ /* sentinel */ }
+};
+MODULE_DEVICE_TABLE(i2c, ar1335_id);
+
+// ar1335: camera@36 {
+// 	compatible = "aptina,ar1335";
+// 	reg = <0x36>;
+// 	clocks = <&misc_clk_1>;
+// 	clock-names = "xclk";
+// 	pwdn-gpios = <&axi_gpio 2 1>;
+// 	port {
+// 		ar1335_csi2_out: endpoint {
+// 			remote-endpoint = <&mipi_csi_inmipi_csi2_rx_ias1>;
+// 			clock-lanes = <0>;
+// 			data-lanes = <1 2 3 4>;
+// 		};
+// 	};
+// };
+
+#if IS_ENABLED(CONFIG_OF)
+static const struct of_device_id ar1335_of_match[] = {
+	{ .compatible = "aptina,ar1335" },
+	{ /* sentinel */ },
+};
+MODULE_DEVICE_TABLE(of, ar1335_of_match);
+#endif
+
+static struct i2c_driver ar1335_driver = {
+	.driver = {
+		.of_match_table = of_match_ptr(ar1335_of_match),
+		.name	= "ar1335",
+		.pm	= &ar1335_pm_ops,
+	},
+	.probe_new	= ar1335_probe,
+	.remove		= ar1335_remove,
+	.id_table	= ar1335_id,
+};
+
+module_i2c_driver(ar1335_driver);
+
+MODULE_AUTHOR("xinquan.bian<544177215@qq.com>");
+MODULE_DESCRIPTION("A low-level driver for Aptina ar1335 sensors");
+MODULE_LICENSE("GPL v2");
diff --git a/drivers/media/i2c/tca9546a.c b/drivers/media/i2c/tca9546a.c
new file mode 100755
index 000000000..adc3c4092
--- /dev/null
+++ b/drivers/media/i2c/tca9546a.c
@@ -0,0 +1,58 @@
+#include <linux/i2c.h>
+#include <linux/delay.h>
+
+static int tca9546a_probe(struct i2c_client *client)
+{
+	struct device *dev = &client->dev;
+	int ret;
+
+#define CHANNEL_ID  2
+	unsigned char data[1] = { CHANNEL_ID };
+	ret = i2c_master_send(client, data, 1);
+	if (ret < 0) {
+		dev_dbg(dev, "%s: i2c write error, reg: %x\n",
+				__func__, data[0]);
+		return ret;
+	}
+
+	msleep(10);
+
+	dev_info(dev, "tca9546a i2c switcher driver probed\n");
+
+	return 0;
+}
+
+static int tca9546a_remove(struct i2c_client *client)
+{
+	return 0;
+}
+
+static const struct i2c_device_id tca9546a_id[] = {
+	{ "tca9546a", 0 },
+	{ /* sentinel */ }
+};
+MODULE_DEVICE_TABLE(i2c, tca9546a_id);
+
+#if IS_ENABLED(CONFIG_OF)
+static const struct of_device_id tca9546a_of_match[] = {
+	{ .compatible = "tca9546a" },
+	{ /* sentinel */ },
+};
+MODULE_DEVICE_TABLE(of, tca9546a_of_match);
+#endif
+
+static struct i2c_driver tca9546a_driver = {
+	.driver = {
+		.of_match_table = of_match_ptr(tca9546a_of_match),
+		.name	= "tca9546a",
+	},
+	.probe_new	= tca9546a_probe,
+	.remove		= tca9546a_remove,
+	.id_table	= tca9546a_id,
+};
+
+module_i2c_driver(tca9546a_driver);
+
+MODULE_AUTHOR("bxinquan");
+MODULE_DESCRIPTION("tca9546a i2c switcher");
+MODULE_LICENSE("GPL v2");
diff --git a/drivers/media/platform/xilinx/Kconfig b/drivers/media/platform/xilinx/Kconfig
index d98bd20e3..3bb4938e6 100644
--- a/drivers/media/platform/xilinx/Kconfig
+++ b/drivers/media/platform/xilinx/Kconfig
@@ -21,6 +21,21 @@ config VIDEO_XILINX_CSI2RXSS
 	  based driver that takes input from CSI-2 Tx source and converts
 	  it into an AXI4-Stream.
 
+config VIDEO_MIPI_RX_TO_VIDEO
+	tristate "MIPI Rx to Video IP Driver"
+	help
+	  Driver for MIPI Rx to Video IP. This is a V4L sub-device
+
+config VIDEO_XIL_ISP_LITE
+	tristate "Xil ISP LIte IP Driver"
+	help
+	  Driver for Xil ISP Lite IP. This is a V4L sub-device
+
+config VIDEO_XIL_VIP
+	tristate "Xil VIP IP Driver"
+	help
+	  Driver for VIP IP. This is a V4L sub-device
+
 config VIDEO_XILINX_AXI4S_SWITCH
 	tristate "Xilinx AXI4-Stream Video Switch"
 	depends on VIDEO_XILINX
diff --git a/drivers/media/platform/xilinx/Makefile b/drivers/media/platform/xilinx/Makefile
index e91436ce9..885b05e46 100644
--- a/drivers/media/platform/xilinx/Makefile
+++ b/drivers/media/platform/xilinx/Makefile
@@ -11,6 +11,9 @@ obj-$(CONFIG_VIDEO_XILINX_AXI4S_SWITCH) += xilinx-axis-switch.o
 obj-$(CONFIG_VIDEO_XILINX_CFA) += xilinx-cfa.o
 obj-$(CONFIG_VIDEO_XILINX_CRESAMPLE) += xilinx-cresample.o
 obj-$(CONFIG_VIDEO_XILINX_CSI2RXSS) += xilinx-csi2rxss.o
+obj-$(CONFIG_VIDEO_MIPI_RX_TO_VIDEO) += mipi-rx-to-video.o
+obj-$(CONFIG_VIDEO_XIL_ISP_LITE) += xil-isp-lite.o
+obj-$(CONFIG_VIDEO_XIL_VIP) += xil-vip.o
 obj-$(CONFIG_VIDEO_XILINX_DEMOSAIC) += xilinx-demosaic.o
 obj-$(CONFIG_VIDEO_XILINX_DPRXSS) += xilinx-dprxss.o
 obj-$(CONFIG_VIDEO_XILINX_GAMMA) += xilinx-gamma.o
diff --git a/drivers/media/platform/xilinx/mipi-rx-to-video.c b/drivers/media/platform/xilinx/mipi-rx-to-video.c
new file mode 100755
index 000000000..73af7fdc8
--- /dev/null
+++ b/drivers/media/platform/xilinx/mipi-rx-to-video.c
@@ -0,0 +1,584 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Driver for MIPI Rx to Video
+ *
+ */
+#include <linux/clk.h>
+#include <linux/delay.h>
+#include <linux/gpio/consumer.h>
+#include <linux/interrupt.h>
+#include <linux/module.h>
+#include <linux/mutex.h>
+#include <linux/of.h>
+#include <linux/of_irq.h>
+#include <linux/platform_device.h>
+#include <linux/v4l2-subdev.h>
+#include <media/media-entity.h>
+#include <media/v4l2-common.h>
+#include <media/v4l2-subdev.h>
+#include <media/v4l2-event.h>
+
+/* Register register map */
+
+#define MIPI_RX_REG_RESET                (0 * 4)    
+#define MIPI_RX_REG_WIDTH                (1 * 4)    
+#define MIPI_RX_REG_HEIGHT               (2 * 4)    
+#define MIPI_RX_REG_FRAME_CNT            (3 * 4)    
+#define MIPI_RX_REG_DI                   (4 * 4)    
+#define MIPI_RX_REG_STATUS               (5 * 4)    
+#define MIPI_RX_REG_INT_STATUS           (6 * 4)    
+#define MIPI_RX_REG_INT_MASK             (7 * 4)    
+
+#define MIPI_RX_REG_STATUS_BIT_LOCKED            (1<<0)
+
+#define MIPI_RX_REG_INT_STATUS_BIT_FRAME_START   (1<<0)
+#define MIPI_RX_REG_INT_STATUS_BIT_FRAME_DONE    (1<<1)
+
+#define MIPI_RX_REG_INT_MASK_BIT_FRAME_START     (1<<0)
+#define MIPI_RX_REG_INT_MASK_BIT_FRAME_DONE      (1<<1)
+
+////////////////////////////////////
+
+#define MIPI_RX_PAD_SINK		0
+#define MIPI_RX_PAD_SOURCE		1
+#define MIPI_RX_MEDIA_PADS		2
+
+
+/**
+ * struct mipirx_state - CSI-2 Rx device structure
+ * @subdev: The v4l2 subdev structure
+ * @format: Active V4L2 formats on each pad
+ * @default_format: Default V4L2 format
+ * @dev: Platform structure
+ * @rst_gpio: reset to video_aresetn
+ * @aclk: s_axi clock
+ * @iomem: Base address of subsystem
+ * @lock: mutex for accessing this structure
+ * @pads: media pads
+ * @streaming: Flag for storing streaming state
+ *
+ * This structure contains the device driver related parameters
+ */
+struct mipirx_state {
+	struct v4l2_subdev subdev;
+	struct v4l2_mbus_framefmt format;
+	struct v4l2_mbus_framefmt default_format;
+	struct device *dev;
+	struct gpio_desc *rst_gpio;
+	struct clk	*aclk;
+	void __iomem *iomem;
+	/* used to protect access to this struct */
+	struct mutex lock;
+	struct media_pad pads[MIPI_RX_MEDIA_PADS];
+	bool streaming;
+};
+
+static inline struct mipirx_state *
+to_mipirxstate(struct v4l2_subdev *subdev)
+{
+	return container_of(subdev, struct mipirx_state, subdev);
+}
+
+/*
+ * Register related operations
+ */
+static inline u32 mipirx_read(struct mipirx_state *mipirx, u32 addr)
+{
+	return ioread32(mipirx->iomem + addr);
+}
+
+static inline void mipirx_write(struct mipirx_state *mipirx, u32 addr,
+				   u32 value)
+{
+	iowrite32(value, mipirx->iomem + addr);
+}
+
+static void mipirx_hard_reset(struct mipirx_state *state)
+{
+	if (!state->rst_gpio) {
+		return;
+	}
+
+	/* minimum of 40 dphy_clk_200M cycles */
+	gpiod_set_value_cansleep(state->rst_gpio, 1);
+	usleep_range(1, 2);
+	gpiod_set_value_cansleep(state->rst_gpio, 0);
+}
+
+/**
+ * mipirx_log_status - Logs the status of the CSI-2 Receiver
+ * @sd: Pointer to V4L2 subdevice structure
+ *
+ * This function prints the current status of MIPI Rx to Video IP
+ *
+ * Return: 0 on success
+ */
+static int mipirx_log_status(struct v4l2_subdev *sd)
+{
+	struct mipirx_state *mipirx = to_mipirxstate(sd);
+	struct device *dev = mipirx->dev;
+	u32 width, height, frame_cnt, di, status;
+
+	mutex_lock(&mipirx->lock);
+
+	width     = mipirx_read(mipirx, MIPI_RX_REG_WIDTH);
+	height    = mipirx_read(mipirx, MIPI_RX_REG_HEIGHT);
+	di        = mipirx_read(mipirx, MIPI_RX_REG_DI);
+	frame_cnt = mipirx_read(mipirx, MIPI_RX_REG_FRAME_CNT);
+	status    = mipirx_read(mipirx, MIPI_RX_REG_STATUS);
+	dev_info(dev, "MIPI Rx %u x %u, DI %02X, frame_cnt %u, status %04X",
+			width, height, di, frame_cnt, status);
+
+	mutex_unlock(&mipirx->lock);
+
+	return 0;
+}
+
+static int mipirx_subscribe_event(struct v4l2_subdev *sd, struct v4l2_fh *fh,
+			       struct v4l2_event_subscription *sub)
+{
+	if (sub->type != V4L2_EVENT_FRAME_SYNC)
+		return -EINVAL;
+
+	/* V4L2_EVENT_FRAME_SYNC doesn't require an id, so zero should be set */
+	if (sub->id != 0)
+		return -EINVAL;
+
+	return v4l2_event_subscribe(fh, sub, 0, NULL);
+}
+
+static int mipirx_start_stream(struct mipirx_state *mipirx)
+{
+	mipirx_write(mipirx, MIPI_RX_REG_INT_STATUS, 0);
+	mipirx_write(mipirx, MIPI_RX_REG_INT_MASK, ~MIPI_RX_REG_INT_MASK_BIT_FRAME_START);
+	mipirx_write(mipirx, MIPI_RX_REG_RESET, 0);
+
+	mipirx->streaming = true;
+
+	return 0;
+}
+
+static void mipirx_stop_stream(struct mipirx_state *mipirx)
+{
+	mipirx_write(mipirx, MIPI_RX_REG_RESET, 1);
+	mipirx_write(mipirx, MIPI_RX_REG_INT_MASK, ~0);
+	mipirx_write(mipirx, MIPI_RX_REG_INT_STATUS, 0);
+
+	mipirx->streaming = false;
+}
+
+static void mipirx_queue_event_frame_sync(struct mipirx_state *state, u32 frame_seq)
+{
+	struct v4l2_event event = {
+		.type = V4L2_EVENT_FRAME_SYNC,
+	};
+	event.u.frame_sync.frame_sequence = frame_seq;
+
+	v4l2_event_queue(state->subdev.devnode, &event);
+}
+
+/**
+ * mipirx_irq_handler - Interrupt handler for CSI-2
+ * @irq: IRQ number
+ * @data: Pointer to device state
+ *
+ * In the interrupt handler, a list of event counters are updated for
+ * corresponding interrupts. This is useful to get status / debug.
+ *
+ * Return: IRQ_HANDLED after handling interrupts
+ */
+static irqreturn_t mipirx_irq_handler(int irq, void *data)
+{
+	struct mipirx_state *state = (struct mipirx_state *)data;
+	//struct device *dev = state->dev;
+	u32 status;
+
+	status = mipirx_read(state, MIPI_RX_REG_INT_STATUS);
+	mipirx_write(state, MIPI_RX_REG_INT_STATUS, 0);
+
+	if (status & MIPI_RX_REG_INT_STATUS_BIT_FRAME_START) {
+		u32 frame_seq = mipirx_read(state, MIPI_RX_REG_FRAME_CNT);
+		//dev_info(dev, "IRQ frame start, seq %u", frame_seq);
+		mipirx_queue_event_frame_sync(state, frame_seq);
+	}
+
+	if (status & MIPI_RX_REG_INT_STATUS_BIT_FRAME_DONE) {
+		//XXX
+	}
+
+	return IRQ_HANDLED;
+}
+
+/**
+ * mipirx_s_stream - It is used to start/stop the streaming.
+ * @sd: V4L2 Sub device
+ * @enable: Flag (True / False)
+ *
+ * This function controls the start or stop of streaming for the
+ * MIPI CSI-2 Rx to Video.
+ *
+ * Return: 0 on success, errors otherwise
+ */
+static int mipirx_s_stream(struct v4l2_subdev *sd, int enable)
+{
+	struct mipirx_state *mipirx = to_mipirxstate(sd);
+	int ret = 0;
+
+	mutex_lock(&mipirx->lock);
+
+	if (enable == mipirx->streaming) {
+		goto stream_done;
+	}
+
+	mipirx_hard_reset(mipirx);
+
+	if (enable) {
+		ret = mipirx_start_stream(mipirx);
+	} else {
+		mipirx_stop_stream(mipirx);
+	}
+
+stream_done:
+	mutex_unlock(&mipirx->lock);
+	return ret;
+}
+
+static struct v4l2_mbus_framefmt *
+__mipirx_get_pad_format(struct mipirx_state *mipirx,
+			   struct v4l2_subdev_state *sd_state,
+			   unsigned int pad, u32 which)
+{
+	struct v4l2_mbus_framefmt *get_fmt;
+
+	switch (which) {
+	case V4L2_SUBDEV_FORMAT_TRY:
+		get_fmt = v4l2_subdev_get_try_format(&mipirx->subdev,
+						     sd_state, pad);
+		break;
+	case V4L2_SUBDEV_FORMAT_ACTIVE:
+		get_fmt = &mipirx->format;
+		break;
+	default:
+		get_fmt = NULL;
+		break;
+	}
+
+	return get_fmt;
+}
+
+/**
+ * mipirx_init_cfg - Initialise the pad format config to default
+ * @sd: Pointer to V4L2 Sub device structure
+ * @cfg: Pointer to sub device pad information structure
+ *
+ * This function is used to initialize the pad format with the default
+ * values.
+ *
+ * Return: 0 on success
+ */
+static int mipirx_init_cfg(struct v4l2_subdev *sd,
+			      struct v4l2_subdev_state *sd_state)
+{
+	struct mipirx_state *mipirx = to_mipirxstate(sd);
+	struct v4l2_mbus_framefmt *format;
+	unsigned int i;
+
+	mutex_lock(&mipirx->lock);
+	for (i = 0; i < MIPI_RX_MEDIA_PADS; i++) {
+		format = v4l2_subdev_get_try_format(sd, sd_state, i);
+		*format = mipirx->default_format;
+	}
+	mutex_unlock(&mipirx->lock);
+
+	return 0;
+}
+
+/**
+ * mipirx_get_format - Get the pad format
+ * @sd: Pointer to V4L2 Sub device structure
+ * @cfg: Pointer to sub device pad information structure
+ * @fmt: Pointer to pad level media bus format
+ *
+ * This function is used to get the pad format information.
+ *
+ * Return: 0 on success
+ */
+static int mipirx_get_format(struct v4l2_subdev *sd,
+				struct v4l2_subdev_state *sd_state,
+				struct v4l2_subdev_format *fmt)
+{
+	struct mipirx_state *mipirx = to_mipirxstate(sd);
+	struct v4l2_mbus_framefmt *get_fmt;
+	int ret = 0;
+
+	mutex_lock(&mipirx->lock);
+
+	get_fmt = __mipirx_get_pad_format(mipirx, sd_state, fmt->pad,
+					     fmt->which);
+	if (!get_fmt) {
+		ret = -EINVAL;
+		goto unlock_get_format;
+	}
+
+	fmt->format = *get_fmt;
+
+unlock_get_format:
+	mutex_unlock(&mipirx->lock);
+
+	return ret;
+}
+
+/**
+ * mipirx_set_format - This is used to set the pad format
+ * @sd: Pointer to V4L2 Sub device structure
+ * @cfg: Pointer to sub device pad information structure
+ * @fmt: Pointer to pad level media bus format
+ *
+ * This function is used to set the pad format. Since the pad format is fixed
+ * in hardware, it can't be modified on run time. So when a format set is
+ * requested by application, all parameters except the format type is saved
+ * for the pad and the original pad format is sent back to the application.
+ *
+ * Return: 0 on success
+ */
+static int mipirx_set_format(struct v4l2_subdev *sd,
+				struct v4l2_subdev_state *sd_state,
+				struct v4l2_subdev_format *fmt)
+{
+	struct mipirx_state *mipirx = to_mipirxstate(sd);
+	struct v4l2_mbus_framefmt *__format;
+	int ret = 0;
+
+	mutex_lock(&mipirx->lock);
+
+	/*
+	 * Only the format->code parameter matters for CSI as the
+	 * CSI format cannot be changed at runtime.
+	 * Ensure that format to set is copied to over to CSI pad format
+	 */
+	__format = __mipirx_get_pad_format(mipirx, sd_state,
+					      fmt->pad, fmt->which);
+	if (!__format) {
+		ret = -EINVAL;
+		goto unlock_set_format;
+	}
+
+	/* only sink pad format can be updated */
+	if (fmt->pad == MIPI_RX_PAD_SOURCE) {
+		fmt->format = *__format;
+		goto unlock_set_format;
+	}
+
+	*__format = fmt->format;
+
+unlock_set_format:
+	mutex_unlock(&mipirx->lock);
+
+	return ret;
+}
+
+/*
+ * mipirx_enum_mbus_code - Handle pixel format enumeration
+ * @sd: pointer to v4l2 subdev structure
+ * @cfg: V4L2 subdev pad configuration
+ * @code: pointer to v4l2_subdev_mbus_code_enum structure
+ *
+ * Return: -EINVAL or zero on success
+ */
+static int mipirx_enum_mbus_code(struct v4l2_subdev *sd,
+				    struct v4l2_subdev_state *sd_state,
+				    struct v4l2_subdev_mbus_code_enum *code)
+{
+	//struct mipirx_state *state = to_mipirxstate(sd);
+
+	const u32 support_codes[] = {
+		MEDIA_BUS_FMT_SBGGR8_1X8,
+		MEDIA_BUS_FMT_SGBRG8_1X8,
+		MEDIA_BUS_FMT_SGRBG8_1X8,
+		MEDIA_BUS_FMT_SRGGB8_1X8,
+		MEDIA_BUS_FMT_SBGGR10_1X10,
+		MEDIA_BUS_FMT_SGBRG10_1X10,
+		MEDIA_BUS_FMT_SGRBG10_1X10,
+		MEDIA_BUS_FMT_SRGGB10_1X10
+	};
+
+	if (code->index >= ARRAY_SIZE(support_codes)) {
+		return -EINVAL;
+	}
+
+	code->code = support_codes[code->index];
+
+	return 0;
+}
+
+/* -----------------------------------------------------------------------------
+ * Media Operations
+ */
+
+static const struct media_entity_operations mipirx_media_ops = {
+	.link_validate = v4l2_subdev_link_validate
+};
+
+static const struct v4l2_subdev_core_ops mipirx_core_ops = {
+	.log_status = mipirx_log_status,
+	.subscribe_event = mipirx_subscribe_event,
+	.unsubscribe_event = v4l2_event_subdev_unsubscribe,
+};
+
+static const struct v4l2_subdev_video_ops mipirx_video_ops = {
+	.s_stream = mipirx_s_stream
+};
+
+static const struct v4l2_subdev_pad_ops mipirx_pad_ops = {
+	.init_cfg = mipirx_init_cfg,
+	.get_fmt = mipirx_get_format,
+	.set_fmt = mipirx_set_format,
+	.enum_mbus_code = mipirx_enum_mbus_code,
+	.link_validate = v4l2_subdev_link_validate_default,
+};
+
+static const struct v4l2_subdev_ops mipirx_ops = {
+	.core = &mipirx_core_ops,
+	.video = &mipirx_video_ops,
+	.pad = &mipirx_pad_ops
+};
+
+static int mipirx_probe(struct platform_device *pdev)
+{
+	struct v4l2_subdev *subdev;
+	struct mipirx_state *mipirx;
+	struct device *dev = &pdev->dev;
+	int irq, ret;
+
+	mipirx = devm_kzalloc(dev, sizeof(*mipirx), GFP_KERNEL);
+	if (!mipirx) {
+		dev_err(dev, "No memory for mipirx");
+		return -ENOMEM;
+	}
+
+	mipirx->dev = dev;
+
+	/* Reset GPIO */
+	mipirx->rst_gpio = devm_gpiod_get_optional(dev, "reset", GPIOD_OUT_HIGH);
+	if (IS_ERR(mipirx->rst_gpio)) {
+		dev_err(dev, "Video Reset GPIO not setup in DT, ignore it");
+		mipirx->rst_gpio = NULL;
+	}
+
+	mipirx->iomem = devm_platform_ioremap_resource(pdev, 0);
+	if (IS_ERR(mipirx->iomem)) {
+		dev_err(dev, "No iomem resource in DT");
+		return PTR_ERR(mipirx->iomem);
+	}
+
+	irq = platform_get_irq(pdev, 0);
+	if (irq < 0) {
+		dev_err(dev, "No irq resource in DT");
+		return irq;
+	}
+
+	ret = devm_request_threaded_irq(dev, irq, NULL,
+					mipirx_irq_handler, IRQF_ONESHOT,
+					dev_name(dev), mipirx);
+	if (ret) {
+		dev_err(dev, "Err = %d Interrupt handler reg failed!\n", ret);
+		return ret;
+	}
+
+	mipirx->aclk = devm_clk_get(dev, "s00_axi_aclk");
+	if (IS_ERR(mipirx->aclk)) {
+		dev_err(dev, "could not get s00_axi_aclk");
+		return PTR_ERR(mipirx->aclk);
+	}
+
+	/* TODO: Enable/disable clocks at stream on/off time. */
+	ret = clk_prepare_enable(mipirx->aclk);
+	if (ret) {
+		dev_err(dev, "could not prepare enable aclk");
+		return ret;
+	}
+
+	mutex_init(&mipirx->lock);
+
+	mipirx_hard_reset(mipirx);
+	mipirx_write(mipirx, MIPI_RX_REG_RESET, 1);
+
+	/* Initialize V4L2 subdevice and media entity */
+	mipirx->pads[MIPI_RX_PAD_SINK].flags = MEDIA_PAD_FL_SINK;
+	mipirx->pads[MIPI_RX_PAD_SOURCE].flags = MEDIA_PAD_FL_SOURCE;
+
+	/* Initialize the default format */
+	mipirx->default_format.code = MEDIA_BUS_FMT_SRGGB10_1X10;
+	mipirx->default_format.field = V4L2_FIELD_NONE;
+	mipirx->default_format.colorspace = V4L2_COLORSPACE_SRGB;
+	mipirx->default_format.width = 1920;
+	mipirx->default_format.height = 1080;
+	mipirx->format = mipirx->default_format;
+
+	/* Initialize V4L2 subdevice and media entity */
+	subdev = &mipirx->subdev;
+	v4l2_subdev_init(subdev, &mipirx_ops);
+	subdev->dev = dev;
+	strscpy(subdev->name, dev_name(dev), sizeof(subdev->name));
+	subdev->flags |= V4L2_SUBDEV_FL_HAS_EVENTS | V4L2_SUBDEV_FL_HAS_DEVNODE;
+	subdev->entity.ops = &mipirx_media_ops;
+	v4l2_set_subdevdata(subdev, mipirx);
+
+	ret = media_entity_pads_init(&subdev->entity, MIPI_RX_MEDIA_PADS,
+				     mipirx->pads);
+	if (ret < 0) {
+		dev_err(dev, "init media entity pads fail");
+		goto error;
+	}
+
+	platform_set_drvdata(pdev, mipirx);
+
+	ret = v4l2_async_register_subdev(subdev);
+	if (ret < 0) {
+		dev_err(dev, "failed to register subdev\n");
+		goto error;
+	}
+
+	dev_info(dev, "mipi-rx-to-video driver probed!");
+
+	return 0;
+error:
+	media_entity_cleanup(&subdev->entity);
+	mutex_destroy(&mipirx->lock);
+	clk_disable_unprepare(mipirx->aclk);
+	return ret;
+}
+
+static int mipirx_remove(struct platform_device *pdev)
+{
+	struct mipirx_state *mipirx = platform_get_drvdata(pdev);
+	struct v4l2_subdev *subdev = &mipirx->subdev;
+
+	v4l2_async_unregister_subdev(subdev);
+	media_entity_cleanup(&subdev->entity);
+	mutex_destroy(&mipirx->lock);
+	clk_disable_unprepare(mipirx->aclk);
+
+	return 0;
+}
+
+static const struct of_device_id mipirx_of_id_table[] = {
+	{ .compatible = "xlnx,mipi-rx-to-video-1.0", },
+	{ }
+};
+MODULE_DEVICE_TABLE(of, mipirx_of_id_table);
+
+static struct platform_driver mipirx_driver = {
+	.driver = {
+		.name		= "mipi-rx-to-video",
+		.of_match_table	= mipirx_of_id_table,
+	},
+	.probe			= mipirx_probe,
+	.remove			= mipirx_remove,
+};
+
+module_platform_driver(mipirx_driver);
+
+MODULE_AUTHOR("xinquan bian <544177215@qq.com>");
+MODULE_DESCRIPTION("MIPI CSI-2 Rx to video Driver");
+MODULE_LICENSE("GPL v2");
diff --git a/drivers/media/platform/xilinx/xil-isp-lite.c b/drivers/media/platform/xilinx/xil-isp-lite.c
new file mode 100755
index 000000000..f2e5962e8
--- /dev/null
+++ b/drivers/media/platform/xilinx/xil-isp-lite.c
@@ -0,0 +1,1826 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Driver for Xil ISP Lite IP
+ *
+ */
+#include <linux/clk.h>
+#include <linux/delay.h>
+#include <linux/interrupt.h>
+#include <linux/module.h>
+#include <linux/mutex.h>
+#include <linux/of.h>
+#include <linux/of_irq.h>
+#include <linux/platform_device.h>
+#include <linux/v4l2-subdev.h>
+#include <media/media-entity.h>
+#include <media/v4l2-common.h>
+#include <media/v4l2-subdev.h>
+#include <media/v4l2-event.h>
+#include <media/v4l2-ioctl.h>
+#include <media/videobuf2-core.h>
+#include <media/videobuf2-vmalloc.h>
+#include <media/v4l2-ctrls.h>
+#include <linux/xil-isp-lite.h>
+
+////////////////////////////////////////////////////////////////////////////
+/* Register register map */
+
+#define ISP_REG_RESET                   (0  * 4)
+#define ISP_REG_WIDTH                   (1  * 4)
+#define ISP_REG_HEIGHT                  (2  * 4)
+#define ISP_REG_BITS                    (3  * 4)
+#define ISP_REG_BAYER                   (4  * 4)
+#define ISP_REG_TOP_EN                  (5  * 4)
+#define ISP_REG_DPC_THRESHOLD           (6  * 4)
+#define ISP_REG_BLC_R                   (7  * 4)
+#define ISP_REG_BLC_GR                  (8  * 4)
+#define ISP_REG_BLC_GB                  (9  * 4)
+#define ISP_REG_BLC_B                   (10 * 4)
+#define ISP_REG_NR_LEVEL                (11 * 4)
+#define ISP_REG_DGAIN_GAIN              (12 * 4)
+#define ISP_REG_DGAIN_OFFSET            (13 * 4)
+#define ISP_REG_WB_RGAIN                (14 * 4)
+#define ISP_REG_WB_GGAIN                (15 * 4)
+#define ISP_REG_WB_BGAIN                (16 * 4)
+#define ISP_REG_CCM_RR                  (17 * 4)
+#define ISP_REG_CCM_RG                  (18 * 4)
+#define ISP_REG_CCM_RB                  (19 * 4)
+#define ISP_REG_CCM_GR                  (20 * 4)
+#define ISP_REG_CCM_GG                  (21 * 4)
+#define ISP_REG_CCM_GB                  (22 * 4)
+#define ISP_REG_CCM_BR                  (23 * 4)
+#define ISP_REG_CCM_BG                  (24 * 4)
+#define ISP_REG_CCM_BB                  (25 * 4)
+#define ISP_REG_STAT_AE_RECT_X          (26 * 4)
+#define ISP_REG_STAT_AE_RECT_Y          (27 * 4)
+#define ISP_REG_STAT_AE_RECT_W          (28 * 4)
+#define ISP_REG_STAT_AE_RECT_H          (29 * 4)
+#define ISP_REG_STAT_AE_PIX_CNT_L       (30 * 4)
+#define ISP_REG_STAT_AE_PIX_CNT_H       (31 * 4)
+#define ISP_REG_STAT_AE_SUM_L           (32 * 4)
+#define ISP_REG_STAT_AE_SUM_H           (33 * 4)
+#define ISP_REG_STAT_AWB_MIN            (34 * 4)
+#define ISP_REG_STAT_AWB_MAX            (35 * 4)
+#define ISP_REG_STAT_AWB_PIX_CNT_L      (36 * 4)
+#define ISP_REG_STAT_AWB_PIX_CNT_H      (37 * 4)
+#define ISP_REG_STAT_AWB_SUM_R_L        (38 * 4)
+#define ISP_REG_STAT_AWB_SUM_R_H        (39 * 4)
+#define ISP_REG_STAT_AWB_SUM_G_L        (40 * 4)
+#define ISP_REG_STAT_AWB_SUM_G_H        (41 * 4)
+#define ISP_REG_STAT_AWB_SUM_B_L        (42 * 4)
+#define ISP_REG_STAT_AWB_SUM_B_H        (43 * 4)
+#define ISP_REG_INT_STATUS              (44 * 4)
+#define ISP_REG_INT_MASK                (45 * 4)
+#define ISP_REG_2DNR_SPACE_WEIGHT_0     (46 * 4) //0:[4:0], 1:[12:8], 2:[20:16], 3:[28:24]
+#define ISP_REG_2DNR_SPACE_WEIGHT_4     (47 * 4)
+#define ISP_REG_2DNR_SPACE_WEIGHT_8     (48 * 4)
+#define ISP_REG_2DNR_SPACE_WEIGHT_12    (49 * 4)
+#define ISP_REG_2DNR_SPACE_WEIGHT_16    (50 * 4)
+#define ISP_REG_2DNR_SPACE_WEIGHT_20    (51 * 4)
+#define ISP_REG_2DNR_SPACE_WEIGHT_24    (52 * 4)
+#define ISP_REG_2DNR_SPACE_WEIGHT_28    (53 * 4)
+#define ISP_REG_2DNR_SPACE_WEIGHT_32    (54 * 4)
+#define ISP_REG_2DNR_SPACE_WEIGHT_36    (55 * 4)
+#define ISP_REG_2DNR_SPACE_WEIGHT_40    (56 * 4)
+#define ISP_REG_2DNR_SPACE_WEIGHT_44    (57 * 4)
+#define ISP_REG_2DNR_SPACE_WEIGHT_48    (58 * 4) //48:[4:0]
+#define ISP_REG_2DNR_COLOR_CURVE_0      (59 * 4) //x0:[15:0] y0:[20:16]
+#define ISP_REG_2DNR_COLOR_CURVE_1      (60 * 4)
+#define ISP_REG_2DNR_COLOR_CURVE_2      (61 * 4)
+#define ISP_REG_2DNR_COLOR_CURVE_3      (62 * 4)
+#define ISP_REG_2DNR_COLOR_CURVE_4      (63 * 4)
+#define ISP_REG_2DNR_COLOR_CURVE_5      (64 * 4)
+#define ISP_REG_2DNR_COLOR_CURVE_6      (65 * 4)
+#define ISP_REG_2DNR_COLOR_CURVE_7      (66 * 4)
+#define ISP_REG_2DNR_COLOR_CURVE_8      (67 * 4)
+
+
+#define ISP_REG_STAT_AE_HIST_ADDR     	(1*1024*4)
+#define ISP_REG_STAT_AE_HIST_SIZE     	(4*256*4)
+#define ISP_REG_STAT_AWB_HIST_ADDR    	(2*1024*4)
+#define ISP_REG_STAT_AWB_HIST_SIZE      (3*256*4)
+#define ISP_REG_GAMMA_TABLE_ADDR      	(3*1024*4)
+#define ISP_REG_GAMMA_TABLE_SIZE      	(1*256*4)
+
+
+#define ISP_REG_TOP_EN_BIT_DPC_EN           (1<<0)
+#define ISP_REG_TOP_EN_BIT_BLC_EN           (1<<1)
+#define ISP_REG_TOP_EN_BIT_BNR_EN           (1<<2)
+#define ISP_REG_TOP_EN_BIT_DGAIN_EN         (1<<3)
+#define ISP_REG_TOP_EN_BIT_DEMOSIC_EN       (1<<4)
+#define ISP_REG_TOP_EN_BIT_WB_EN            (1<<5)
+#define ISP_REG_TOP_EN_BIT_CCM_EN           (1<<6)
+#define ISP_REG_TOP_EN_BIT_CSC_EN           (1<<7)
+#define ISP_REG_TOP_EN_BIT_GAMMA_EN         (1<<8)
+#define ISP_REG_TOP_EN_BIT_2DNR_EN          (1<<9)
+#define ISP_REG_TOP_EN_BIT_EE_EN            (1<<10)
+#define ISP_REG_TOP_EN_BIT_STAT_AE_EN       (1<<11)
+#define ISP_REG_TOP_EN_BIT_STAT_AWB_EN      (1<<12)
+
+#define ISP_REG_INT_STATUS_BIT_FRAME_START  (1<<0)
+#define ISP_REG_INT_STATUS_BIT_FRAME_DONE   (1<<1)
+#define ISP_REG_INT_STATUS_BIT_AE_DONE      (1<<2)
+#define ISP_REG_INT_STATUS_BIT_AWB_DONE     (1<<3)
+
+#define ISP_REG_INT_MASK_BIT_FRAME_START    (1<<0)
+#define ISP_REG_INT_MASK_BIT_FRAME_DONE     (1<<1)
+#define ISP_REG_INT_MASK_BIT_AE_DONE        (1<<2)
+#define ISP_REG_INT_MASK_BIT_AWB_DONE       (1<<3)
+
+////////////////////////////////////////////////////////////////////////////
+
+#define ISP_PAD_SINK		0
+#define ISP_PAD_SOURCE		1
+#define ISP_MEDIA_PADS		2
+
+#define ISP_DRIVER_NAME		"xil-isp-lite"
+#define ISP_BUS_NAME		"platform:" ISP_DRIVER_NAME
+#define ISP_STAT_DEV_NAME	ISP_DRIVER_NAME "_stat"
+
+struct isp_stat_buffer {
+	struct vb2_v4l2_buffer vb;
+	struct list_head list_node;
+};
+
+struct isp_stat_node {
+	struct video_device vdev;
+	struct vb2_queue queue;
+	struct mutex vlock; /* ioctl serialization mutex */
+	struct media_pad pad;
+	spinlock_t lock; /* locks the buffers list 'stat' */
+	struct list_head buf_list;
+};
+
+struct isp_state {
+	struct v4l2_subdev subdev;
+	struct v4l2_mbus_framefmt pad_format[ISP_MEDIA_PADS];
+	struct device *dev;
+	struct clk_bulk_data *clks;
+	void __iomem *iomem;
+	u32 bits;
+	/* used to protect access to this struct */
+	struct mutex lock;
+	struct media_pad pads[ISP_MEDIA_PADS];
+	bool streaming;
+	u32 frame_sequence;
+	u32 int_status;
+
+	struct v4l2_ctrl_handler config_ctrls;
+	struct isp_stat_node    stat_node;
+};
+
+static inline struct isp_state *to_ispstate(struct v4l2_subdev *subdev)
+{
+	return container_of(subdev, struct isp_state, subdev);
+}
+
+/*
+ * Register related operations
+ */
+static inline u32 isp_read(struct isp_state *isp, u32 addr)
+{
+	return ioread32(isp->iomem + addr);
+}
+
+static inline void isp_write(struct isp_state *isp, u32 addr,
+				   u32 value)
+{
+	iowrite32(value, isp->iomem + addr);
+}
+
+
+/////////////////////////////////////////////////////////////////////////////
+// ISP config/statistics
+
+static int isp_get_top (struct isp_state *isp, struct xil_isp_lite_top *top)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	*(u32*)top = top_en;
+	return 0;
+}
+
+static int isp_set_top (struct isp_state *isp, const struct xil_isp_lite_top *top)
+{
+	isp_write(isp, ISP_REG_TOP_EN, *(u32*)top);
+	return 0;
+}
+
+static int isp_get_dpc (struct isp_state *isp, struct xil_isp_lite_dpc *dpc)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	u32 thresh = isp_read(isp, ISP_REG_DPC_THRESHOLD);
+	dpc->enabled   = !!(top_en & ISP_REG_TOP_EN_BIT_DPC_EN);
+	dpc->threshold = thresh;
+	return 0;
+}
+
+static int isp_set_dpc (struct isp_state *isp, const struct xil_isp_lite_dpc *dpc)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	top_en = dpc->enabled ?
+		(top_en |  ISP_REG_TOP_EN_BIT_DPC_EN) :
+		(top_en & ~ISP_REG_TOP_EN_BIT_DPC_EN) ;
+	isp_write(isp, ISP_REG_TOP_EN, top_en);
+	isp_write(isp, ISP_REG_DPC_THRESHOLD, dpc->threshold);
+	return 0;
+}
+
+static int isp_get_blc (struct isp_state *isp, struct xil_isp_lite_blc *blc)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	blc->enabled   = !!(top_en & ISP_REG_TOP_EN_BIT_BLC_EN);
+	blc->black_level_r = isp_read(isp, ISP_REG_BLC_R);
+	blc->black_level_gr = isp_read(isp, ISP_REG_BLC_GR);
+	blc->black_level_gb = isp_read(isp, ISP_REG_BLC_GB);
+	blc->black_level_b = isp_read(isp, ISP_REG_BLC_B);
+	return 0;
+}
+
+static int isp_set_blc (struct isp_state *isp, const struct xil_isp_lite_blc *blc)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	top_en = blc->enabled ?
+		(top_en |  ISP_REG_TOP_EN_BIT_BLC_EN) :
+		(top_en & ~ISP_REG_TOP_EN_BIT_BLC_EN) ;
+	isp_write(isp, ISP_REG_TOP_EN, top_en);
+	isp_write(isp, ISP_REG_BLC_R, blc->black_level_r);
+	isp_write(isp, ISP_REG_BLC_GR, blc->black_level_gr);
+	isp_write(isp, ISP_REG_BLC_GB, blc->black_level_gb);
+	isp_write(isp, ISP_REG_BLC_B, blc->black_level_b);
+	return 0;
+}
+
+static int isp_get_bnr (struct isp_state *isp, struct xil_isp_lite_bnr *bnr)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	bnr->enabled = !!(top_en & ISP_REG_TOP_EN_BIT_BNR_EN);
+	bnr->nr_level = isp_read(isp, ISP_REG_NR_LEVEL);
+	return 0;
+}
+
+static int isp_set_bnr (struct isp_state *isp, const struct xil_isp_lite_bnr *bnr)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	top_en = bnr->enabled ?
+		(top_en |  ISP_REG_TOP_EN_BIT_BNR_EN) :
+		(top_en & ~ISP_REG_TOP_EN_BIT_BNR_EN) ;
+	isp_write(isp, ISP_REG_TOP_EN, top_en);
+	isp_write(isp, ISP_REG_NR_LEVEL, bnr->nr_level);
+	return 0;
+}
+
+static int isp_get_dgain (struct isp_state *isp, struct xil_isp_lite_dgain *dgain)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	dgain->enabled = !!(top_en & ISP_REG_TOP_EN_BIT_DGAIN_EN);
+	dgain->gain = isp_read(isp, ISP_REG_DGAIN_GAIN);
+	dgain->offset = isp_read(isp, ISP_REG_DGAIN_OFFSET);
+	return 0;
+}
+
+static int isp_set_dgain (struct isp_state *isp, const struct xil_isp_lite_dgain *dgain)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	top_en = dgain->enabled ?
+		(top_en |  ISP_REG_TOP_EN_BIT_DGAIN_EN) :
+		(top_en & ~ISP_REG_TOP_EN_BIT_DGAIN_EN) ;
+	isp_write(isp, ISP_REG_TOP_EN, top_en);
+	isp_write(isp, ISP_REG_DGAIN_GAIN, dgain->gain);
+	isp_write(isp, ISP_REG_DGAIN_OFFSET, dgain->offset);
+	return 0;
+}
+
+static int isp_get_demosaic (struct isp_state *isp, struct xil_isp_lite_demosaic *demosaic)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	demosaic->enabled   = !!(top_en & ISP_REG_TOP_EN_BIT_DEMOSIC_EN);
+	return 0;
+}
+
+static int isp_set_demosaic (struct isp_state *isp, const struct xil_isp_lite_demosaic *demosaic)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	top_en = demosaic->enabled ?
+		(top_en |  ISP_REG_TOP_EN_BIT_DEMOSIC_EN) :
+		(top_en & ~ISP_REG_TOP_EN_BIT_DEMOSIC_EN) ;
+	isp_write(isp, ISP_REG_TOP_EN, top_en);
+	return 0;
+}
+
+static int isp_get_wb(struct isp_state *isp, struct xil_isp_lite_wb *wb)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	wb->enabled = !!(top_en & ISP_REG_TOP_EN_BIT_WB_EN);
+	wb->rgain =  isp_read(isp, ISP_REG_WB_RGAIN);
+	wb->ggain =  isp_read(isp, ISP_REG_WB_GGAIN);
+	wb->bgain =  isp_read(isp, ISP_REG_WB_BGAIN);
+	return 0;
+}
+
+static int isp_set_wb(struct isp_state *isp, const struct xil_isp_lite_wb *wb)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	top_en = wb->enabled ?
+		(top_en |  ISP_REG_TOP_EN_BIT_WB_EN) :
+		(top_en & ~ISP_REG_TOP_EN_BIT_WB_EN) ;
+	isp_write(isp, ISP_REG_TOP_EN, top_en);
+	isp_write(isp, ISP_REG_WB_RGAIN, wb->rgain);
+	isp_write(isp, ISP_REG_WB_GGAIN, wb->ggain);
+	isp_write(isp, ISP_REG_WB_BGAIN, wb->bgain);
+	return 0;
+}
+
+static int isp_get_ccm(struct isp_state *isp, struct xil_isp_lite_ccm *ccm)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	ccm->enabled = !!(top_en & ISP_REG_TOP_EN_BIT_CCM_EN);
+	ccm->matrix[0] = isp_read(isp, ISP_REG_CCM_RR);
+	ccm->matrix[1] = isp_read(isp, ISP_REG_CCM_RG);
+	ccm->matrix[2] = isp_read(isp, ISP_REG_CCM_RB);
+	ccm->matrix[3] = isp_read(isp, ISP_REG_CCM_GR);
+	ccm->matrix[4] = isp_read(isp, ISP_REG_CCM_GG);
+	ccm->matrix[5] = isp_read(isp, ISP_REG_CCM_GB);
+	ccm->matrix[6] = isp_read(isp, ISP_REG_CCM_BR);
+	ccm->matrix[7] = isp_read(isp, ISP_REG_CCM_BG);
+	ccm->matrix[8] = isp_read(isp, ISP_REG_CCM_BB);
+	return 0;
+}
+
+static int isp_set_ccm(struct isp_state *isp, const struct xil_isp_lite_ccm *ccm)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	top_en = ccm->enabled ?
+		(top_en |  ISP_REG_TOP_EN_BIT_CCM_EN) :
+		(top_en & ~ISP_REG_TOP_EN_BIT_CCM_EN) ;
+	isp_write(isp, ISP_REG_TOP_EN, top_en);
+	isp_write(isp, ISP_REG_CCM_RR, ccm->matrix[0]);
+	isp_write(isp, ISP_REG_CCM_RG, ccm->matrix[1]);
+	isp_write(isp, ISP_REG_CCM_RB, ccm->matrix[2]);
+	isp_write(isp, ISP_REG_CCM_GR, ccm->matrix[3]);
+	isp_write(isp, ISP_REG_CCM_GG, ccm->matrix[4]);
+	isp_write(isp, ISP_REG_CCM_GB, ccm->matrix[5]);
+	isp_write(isp, ISP_REG_CCM_BR, ccm->matrix[6]);
+	isp_write(isp, ISP_REG_CCM_BG, ccm->matrix[7]);
+	isp_write(isp, ISP_REG_CCM_BB, ccm->matrix[8]);
+	return 0;
+}
+
+static int isp_get_csc(struct isp_state *isp, struct xil_isp_lite_csc *csc)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	csc->enabled = !!(top_en & ISP_REG_TOP_EN_BIT_CSC_EN);
+	return 0;
+}
+
+static int isp_set_csc(struct isp_state *isp, const struct xil_isp_lite_csc *csc)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	top_en = csc->enabled ?
+		(top_en |  ISP_REG_TOP_EN_BIT_CSC_EN) :
+		(top_en & ~ISP_REG_TOP_EN_BIT_CSC_EN) ;
+	isp_write(isp, ISP_REG_TOP_EN, top_en);
+	return 0;
+}
+
+static int isp_get_gamma(struct isp_state *isp, struct xil_isp_lite_gamma *gamma)
+{
+	u32 i;
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	gamma->enabled = !!(top_en & ISP_REG_TOP_EN_BIT_GAMMA_EN);
+	for (i = 0; i < ARRAY_SIZE(gamma->gamma_table); i ++) {
+		gamma->gamma_table[i] = isp_read(isp, ISP_REG_GAMMA_TABLE_ADDR + i * 4);
+	}
+	return 0;
+}
+
+static int isp_set_gamma(struct isp_state *isp, const struct xil_isp_lite_gamma *gamma)
+{
+	u32 i;
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	top_en = gamma->enabled ?
+		(top_en |  ISP_REG_TOP_EN_BIT_GAMMA_EN) :
+		(top_en & ~ISP_REG_TOP_EN_BIT_GAMMA_EN) ;
+	isp_write(isp, ISP_REG_TOP_EN, top_en);
+	for (i = 0; i < ARRAY_SIZE(gamma->gamma_table); i ++) {
+		isp_write(isp, ISP_REG_GAMMA_TABLE_ADDR + i * 4, gamma->gamma_table[i]);
+	}
+	return 0;
+}
+
+static int isp_get_2dnr(struct isp_state *isp, struct xil_isp_lite_2dnr *nr2d)
+{
+	u32 i;
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	nr2d->enabled = !!(top_en & ISP_REG_TOP_EN_BIT_2DNR_EN);
+	for (i = 0; i < ARRAY_SIZE(nr2d->space_weight); i += 4) {
+		u32 data = isp_read(isp, ISP_REG_2DNR_SPACE_WEIGHT_0 + i * 4);
+		nr2d->space_weight[i] = (data >> 0) & 0x0ff;
+		if (i + 1 < ARRAY_SIZE(nr2d->space_weight))
+			nr2d->space_weight[i+1] = (data >> 8) & 0x0ff;
+		if (i + 2 < ARRAY_SIZE(nr2d->space_weight))
+			nr2d->space_weight[i+2] = (data >> 16) & 0x0ff;
+		if (i + 3 < ARRAY_SIZE(nr2d->space_weight))
+			nr2d->space_weight[i+3] = (data >> 24) & 0x0ff;
+	}
+	for (i = 0; i < ARRAY_SIZE(nr2d->color_curve); i++) {
+		u32 data = isp_read(isp, ISP_REG_2DNR_COLOR_CURVE_0 + i * 4);
+		nr2d->color_curve[i][0] = (data >> (isp->bits-8)) & 0x0ff;
+		nr2d->color_curve[i][1] = (data >> 16) & 0x0ff;
+	}
+	return 0;
+}
+
+static int isp_set_2dnr(struct isp_state *isp, const struct xil_isp_lite_2dnr *nr2d)
+{
+	u32 i;
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	top_en = nr2d->enabled ?
+		(top_en |  ISP_REG_TOP_EN_BIT_2DNR_EN) :
+		(top_en & ~ISP_REG_TOP_EN_BIT_2DNR_EN) ;
+	isp_write(isp, ISP_REG_TOP_EN, top_en);
+	for (i = 0; i < ARRAY_SIZE(nr2d->space_weight); i += 4) {
+		u32 data = nr2d->space_weight[i];
+		if (i + 1 < ARRAY_SIZE(nr2d->space_weight))
+			data |= nr2d->space_weight[i+1] << 8;
+		if (i + 2 < ARRAY_SIZE(nr2d->space_weight))
+			data |= nr2d->space_weight[i+2] << 16;
+		if (i + 3 < ARRAY_SIZE(nr2d->space_weight))
+			data |= nr2d->space_weight[i+3] << 24;
+		isp_write(isp, ISP_REG_2DNR_SPACE_WEIGHT_0 + i * 4, data);
+	}
+	for (i = 0; i < ARRAY_SIZE(nr2d->color_curve); i++) {
+		u32 data = (nr2d->color_curve[i][0] << (isp->bits - 8)) | (nr2d->color_curve[i][1] << 16);
+		isp_write(isp, ISP_REG_2DNR_COLOR_CURVE_0 + i * 4, data);
+	}
+	return 0;
+}
+
+static int isp_get_ee(struct isp_state *isp, struct xil_isp_lite_ee *ee)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	ee->enabled = !!(top_en & ISP_REG_TOP_EN_BIT_EE_EN);
+	return 0;
+}
+
+static int isp_set_ee(struct isp_state *isp, const struct xil_isp_lite_ee *ee)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	top_en = ee->enabled ?
+		(top_en |  ISP_REG_TOP_EN_BIT_EE_EN) :
+		(top_en & ~ISP_REG_TOP_EN_BIT_EE_EN) ;
+	isp_write(isp, ISP_REG_TOP_EN, top_en);
+	return 0;
+}
+
+static int isp_get_stat_ae_cfg(struct isp_state *isp, struct xil_isp_lite_stat_ae_cfg *ae_cfg)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	ae_cfg->enabled = !!(top_en & ISP_REG_TOP_EN_BIT_STAT_AE_EN);
+	ae_cfg->rect_x = isp_read(isp, ISP_REG_STAT_AE_RECT_X);
+	ae_cfg->rect_y = isp_read(isp, ISP_REG_STAT_AE_RECT_Y);
+	ae_cfg->rect_w = isp_read(isp, ISP_REG_STAT_AE_RECT_W);
+	ae_cfg->rect_h = isp_read(isp, ISP_REG_STAT_AE_RECT_H);
+	return 0;
+}
+
+static int isp_set_stat_ae_cfg(struct isp_state *isp, const struct xil_isp_lite_stat_ae_cfg *ae_cfg)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	top_en = ae_cfg->enabled ?
+		(top_en |  ISP_REG_TOP_EN_BIT_STAT_AE_EN) :
+		(top_en & ~ISP_REG_TOP_EN_BIT_STAT_AE_EN) ;
+	isp_write(isp, ISP_REG_TOP_EN, top_en);
+	isp_write(isp, ISP_REG_STAT_AE_RECT_X, ae_cfg->rect_x);
+	isp_write(isp, ISP_REG_STAT_AE_RECT_Y, ae_cfg->rect_y);
+	isp_write(isp, ISP_REG_STAT_AE_RECT_W, ae_cfg->rect_w);
+	isp_write(isp, ISP_REG_STAT_AE_RECT_H, ae_cfg->rect_h);
+	return 0;
+}
+
+static int isp_get_stat_awb_cfg(struct isp_state *isp, struct xil_isp_lite_stat_awb_cfg *awb_cfg)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	awb_cfg->enabled = !!(top_en & ISP_REG_TOP_EN_BIT_STAT_AWB_EN);
+	awb_cfg->thresh_min = isp_read(isp, ISP_REG_STAT_AWB_MIN);
+	awb_cfg->thresh_max = isp_read(isp, ISP_REG_STAT_AWB_MAX);
+	return 0;
+}
+
+static int isp_set_stat_awb_cfg(struct isp_state *isp, const struct xil_isp_lite_stat_awb_cfg *awb_cfg)
+{
+	u32 top_en = isp_read(isp, ISP_REG_TOP_EN);
+	top_en = awb_cfg->enabled ?
+		(top_en |  ISP_REG_TOP_EN_BIT_STAT_AWB_EN) :
+		(top_en & ~ISP_REG_TOP_EN_BIT_STAT_AWB_EN) ;
+	isp_write(isp, ISP_REG_TOP_EN, top_en);
+	isp_write(isp, ISP_REG_STAT_AWB_MIN, awb_cfg->thresh_min);
+	isp_write(isp, ISP_REG_STAT_AWB_MAX, awb_cfg->thresh_max);
+	return 0;
+}
+
+static int isp_get_stat_ae_result(struct isp_state *isp, struct xil_isp_lite_stat_ae_result *ae_result)
+{
+	u32 i;
+	ae_result->pix_cnt  = isp_read(isp, ISP_REG_STAT_AE_PIX_CNT_L);
+	ae_result->pix_cnt |= (u64)isp_read(isp, ISP_REG_STAT_AE_PIX_CNT_H) << 32;
+	ae_result->sum  = isp_read(isp, ISP_REG_STAT_AE_SUM_L);
+	ae_result->sum |= (u64)isp_read(isp, ISP_REG_STAT_AE_SUM_H) << 32;
+	for (i = 0; i < XIL_ISP_LITE_AE_HIST_BIN_NUM; i++) {
+		u32 offset = XIL_ISP_LITE_AE_HIST_BIN_NUM * 4 * 0 + i * 4;
+		ae_result->hist_r[i] = isp_read(isp, ISP_REG_STAT_AE_HIST_ADDR + offset);
+	}
+	for (i = 0; i < XIL_ISP_LITE_AE_HIST_BIN_NUM; i++) {
+		u32 offset = XIL_ISP_LITE_AE_HIST_BIN_NUM * 4 * 1 + i * 4;
+		ae_result->hist_gr[i] = isp_read(isp, ISP_REG_STAT_AE_HIST_ADDR + offset);
+	}
+	for (i = 0; i < XIL_ISP_LITE_AE_HIST_BIN_NUM; i++) {
+		u32 offset = XIL_ISP_LITE_AE_HIST_BIN_NUM * 4 * 2 + i * 4;
+		ae_result->hist_gb[i] = isp_read(isp, ISP_REG_STAT_AE_HIST_ADDR + offset);
+	}
+	for (i = 0; i < XIL_ISP_LITE_AE_HIST_BIN_NUM; i++) {
+		u32 offset = XIL_ISP_LITE_AE_HIST_BIN_NUM * 4 * 3 + i * 4;
+		ae_result->hist_b[i] = isp_read(isp, ISP_REG_STAT_AE_HIST_ADDR + offset);
+	}
+	return 0;
+}
+
+static int isp_get_stat_awb_result(struct isp_state *isp, struct xil_isp_lite_stat_awb_result *awb_result)
+{
+	u32 i;
+	awb_result->pix_cnt  = isp_read(isp, ISP_REG_STAT_AWB_PIX_CNT_L);
+	awb_result->pix_cnt |= (u64)isp_read(isp, ISP_REG_STAT_AWB_PIX_CNT_H) << 32;
+	awb_result->sum_r  = isp_read(isp, ISP_REG_STAT_AWB_SUM_R_L);
+	awb_result->sum_r |= (u64)isp_read(isp, ISP_REG_STAT_AWB_SUM_R_H) << 32;
+	awb_result->sum_g  = isp_read(isp, ISP_REG_STAT_AWB_SUM_G_L);
+	awb_result->sum_g |= (u64)isp_read(isp, ISP_REG_STAT_AWB_SUM_G_H) << 32;
+	awb_result->sum_b  = isp_read(isp, ISP_REG_STAT_AWB_SUM_B_L);
+	awb_result->sum_b |= (u64)isp_read(isp, ISP_REG_STAT_AWB_SUM_B_H) << 32;
+	for (i = 0; i < XIL_ISP_LITE_AWB_HIST_BIN_NUM; i++) {
+		u32 offset = XIL_ISP_LITE_AWB_HIST_BIN_NUM * 4 * 0 + i * 4;
+		awb_result->hist_r[i] = isp_read(isp, ISP_REG_STAT_AWB_HIST_ADDR + offset);
+	}
+	for (i = 0; i < XIL_ISP_LITE_AWB_HIST_BIN_NUM; i++) {
+		u32 offset = XIL_ISP_LITE_AWB_HIST_BIN_NUM * 4 * 1 + i * 4;
+		awb_result->hist_g[i] = isp_read(isp, ISP_REG_STAT_AWB_HIST_ADDR + offset);
+	}
+	for (i = 0; i < XIL_ISP_LITE_AWB_HIST_BIN_NUM; i++) {
+		u32 offset = XIL_ISP_LITE_AWB_HIST_BIN_NUM * 4 * 2 + i * 4;
+		awb_result->hist_b[i] = isp_read(isp, ISP_REG_STAT_AWB_HIST_ADDR + offset);
+	}
+	return 0;
+}
+
+/////////////////////////////////////////////////////////////////////////////
+// ISP config ctrls
+
+static int isp_config_g_volatile_ctrl(struct v4l2_ctrl *ctrl)
+{
+	struct isp_state *isp = container_of(ctrl->handler, struct isp_state, config_ctrls);
+	int ret = 0;
+
+	switch (ctrl->id) {
+	case V4L2_CID_USER_XIL_ISP_LITE_TOP:
+		ret = isp_get_top(isp, (struct xil_isp_lite_top*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_DPC:
+		ret = isp_get_dpc(isp, (struct xil_isp_lite_dpc*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_BLC:
+		ret = isp_get_blc(isp, (struct xil_isp_lite_blc*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_BNR:
+		ret = isp_get_bnr(isp, (struct xil_isp_lite_bnr*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_DGAIN:
+		ret = isp_get_dgain(isp, (struct xil_isp_lite_dgain*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_DEMOSAIC:
+		ret = isp_get_demosaic(isp, (struct xil_isp_lite_demosaic*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_WB:
+		ret = isp_get_wb(isp, (struct xil_isp_lite_wb*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_CCM:
+		ret = isp_get_ccm(isp, (struct xil_isp_lite_ccm*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_CSC:
+		ret = isp_get_csc(isp, (struct xil_isp_lite_csc*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_GAMMA:
+		ret = isp_get_gamma(isp, (struct xil_isp_lite_gamma*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_2DNR:
+		ret = isp_get_2dnr(isp, (struct xil_isp_lite_2dnr*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_EE:
+		ret = isp_get_ee(isp, (struct xil_isp_lite_ee*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_STAT_AE_CFG:
+		ret = isp_get_stat_ae_cfg(isp, (struct xil_isp_lite_stat_ae_cfg*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_STAT_AWB_CFG:
+		ret = isp_get_stat_awb_cfg(isp, (struct xil_isp_lite_stat_awb_cfg*)ctrl->p_new.p_u8);
+		break;
+	default:
+		dev_err(isp->dev, "Unrecognised control\n");
+		ret = -EINVAL;
+	}
+
+	if (ret) {
+		dev_err(isp->dev, "%s: Failed getting ctrl \"%s\" (%08x), err %d\n",
+			 __func__, ctrl->name, ctrl->id, ret);
+		ret = -EIO;
+	}
+
+	return ret;
+}
+
+static int isp_config_s_ctrl(struct v4l2_ctrl *ctrl)
+{
+	struct isp_state *isp = container_of(ctrl->handler, struct isp_state, config_ctrls);
+	int ret = 0;
+
+	switch (ctrl->id) {
+	case V4L2_CID_USER_XIL_ISP_LITE_TOP:
+		ret = isp_set_top(isp, (struct xil_isp_lite_top*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_DPC:
+		ret = isp_set_dpc(isp, (struct xil_isp_lite_dpc*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_BLC:
+		ret = isp_set_blc(isp, (struct xil_isp_lite_blc*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_BNR:
+		ret = isp_set_bnr(isp, (struct xil_isp_lite_bnr*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_DGAIN:
+		ret = isp_set_dgain(isp, (struct xil_isp_lite_dgain*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_DEMOSAIC:
+		ret = isp_set_demosaic(isp, (struct xil_isp_lite_demosaic*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_WB:
+		ret = isp_set_wb(isp, (struct xil_isp_lite_wb*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_CCM:
+		ret = isp_set_ccm(isp, (struct xil_isp_lite_ccm*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_CSC:
+		ret = isp_set_csc(isp, (struct xil_isp_lite_csc*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_GAMMA:
+		ret = isp_set_gamma(isp, (struct xil_isp_lite_gamma*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_2DNR:
+		ret = isp_set_2dnr(isp, (struct xil_isp_lite_2dnr*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_EE:
+		ret = isp_set_ee(isp, (struct xil_isp_lite_ee*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_STAT_AE_CFG:
+		ret = isp_set_stat_ae_cfg(isp, (struct xil_isp_lite_stat_ae_cfg*)ctrl->p_new.p_u8);
+		break;
+	case V4L2_CID_USER_XIL_ISP_LITE_STAT_AWB_CFG:
+		ret = isp_set_stat_awb_cfg(isp, (struct xil_isp_lite_stat_awb_cfg*)ctrl->p_new.p_u8);
+		break;
+	default:
+		dev_err(isp->dev, "Unrecognised control\n");
+		ret = -EINVAL;
+	}
+
+	if (ret) {
+		dev_err(isp->dev, "%s: Failed setting ctrl \"%s\" (%08x), err %d\n",
+			 __func__, ctrl->name, ctrl->id, ret);
+		ret = -EIO;
+	}
+
+	return ret;
+}
+
+static const struct v4l2_ctrl_ops isp_config_ctrl_ops = {
+	.g_volatile_ctrl = isp_config_g_volatile_ctrl,
+	.s_ctrl = isp_config_s_ctrl,
+};
+
+struct isp_config_custom_ctrl {
+	const char *name;
+	u32 id;
+	u32 size;
+	u32 flags;
+};
+
+static const struct isp_config_custom_ctrl custom_ctrls[] = {
+	{
+		.name	= "ISP Top control",
+		.id	= V4L2_CID_USER_XIL_ISP_LITE_TOP,
+		.size	= sizeof(struct xil_isp_lite_top),
+		.flags  = 0
+	}, {
+		.name	= "DPC - Defective Pixel Correction",
+		.id	= V4L2_CID_USER_XIL_ISP_LITE_DPC,
+		.size	= sizeof(struct xil_isp_lite_dpc),
+		.flags  = 0
+	}, {
+		.name	= "BLC - Black Level Correction",
+		.id	= V4L2_CID_USER_XIL_ISP_LITE_BLC,
+		.size	= sizeof(struct xil_isp_lite_blc),
+		.flags  = 0
+	}, {
+		.name	= "BNR - Bayer Noise Reduction",
+		.id	= V4L2_CID_USER_XIL_ISP_LITE_BNR,
+		.size	= sizeof(struct xil_isp_lite_bnr),
+		.flags  = 0
+	}, {
+		.name	= "DGAIN - Digital Gain",
+		.id	= V4L2_CID_USER_XIL_ISP_LITE_DGAIN,
+		.size	= sizeof(struct xil_isp_lite_dgain),
+		.flags  = 0
+	}, {
+		.name	= "Demosaic - Bayer to RGB",
+		.id	= V4L2_CID_USER_XIL_ISP_LITE_DEMOSAIC,
+		.size	= sizeof(struct xil_isp_lite_demosaic),
+		.flags  = 0
+	}, {
+		.name	= "WB - White Balance",
+		.id	= V4L2_CID_USER_XIL_ISP_LITE_WB,
+		.size	= sizeof(struct xil_isp_lite_wb),
+		.flags  = 0
+	}, {
+		.name	= "CCM - Color Correction Matrix",
+		.id	= V4L2_CID_USER_XIL_ISP_LITE_CCM,
+		.size	= sizeof(struct xil_isp_lite_ccm),
+		.flags  = 0
+	}, {
+		.name	= "CSC - Color Space Conversion (RGB to YUV)",
+		.id	= V4L2_CID_USER_XIL_ISP_LITE_CSC,
+		.size	= sizeof(struct xil_isp_lite_csc),
+		.flags  = 0
+	}, {
+		.name	= "Gamma - Gamma",
+		.id	= V4L2_CID_USER_XIL_ISP_LITE_GAMMA,
+		.size	= sizeof(struct xil_isp_lite_gamma),
+		.flags  = 0
+	}, {
+		.name	= "2DNR - Bayer Noise Reduction",
+		.id	= V4L2_CID_USER_XIL_ISP_LITE_2DNR,
+		.size	= sizeof(struct xil_isp_lite_2dnr),
+		.flags  = 0
+	}, {
+		.name	= "EE - Edge Enhancement",
+		.id	= V4L2_CID_USER_XIL_ISP_LITE_EE,
+		.size	= sizeof(struct xil_isp_lite_ee),
+		.flags  = 0
+	}, {
+		.name	= "AE_CFG - Configure to Auto Exposure Statistics",
+		.id	= V4L2_CID_USER_XIL_ISP_LITE_STAT_AE_CFG,
+		.size	= sizeof(struct xil_isp_lite_stat_ae_cfg),
+		.flags  = 0
+	}, {
+		.name	= "AWB_CFG - Configure to Auto White Balance Statistics",
+		.id	= V4L2_CID_USER_XIL_ISP_LITE_STAT_AWB_CFG,
+		.size	= sizeof(struct xil_isp_lite_stat_awb_cfg),
+		.flags  = 0
+	}
+};
+
+static int isp_config_init_ctrl_handler(struct isp_state *isp)
+{
+	struct v4l2_ctrl_handler *ctrl_handler = &isp->config_ctrls;
+	int ret;
+	unsigned int i;
+
+	/* Use this ctrl template to assign custom ISP ctrls. */
+	struct v4l2_ctrl_config ctrl_template = {
+		.ops		= &isp_config_ctrl_ops,
+		.type		= V4L2_CTRL_TYPE_U8,
+		.def		= 0,
+		.min		= 0x00,
+		.max		= 0xff,
+		.step		= 1,
+	};
+
+	/* 3 standard controls, and an array of custom controls */
+	ret = v4l2_ctrl_handler_init(ctrl_handler, ARRAY_SIZE(custom_ctrls));
+	if (ret) {
+		dev_err(isp->dev, "ctrl_handler init failed (%d)", ret);
+		return ret;
+	}
+
+	for (i = 0; i < ARRAY_SIZE(custom_ctrls); i++) {
+		ctrl_template.name = custom_ctrls[i].name;
+		ctrl_template.id = custom_ctrls[i].id;
+		ctrl_template.dims[0] = custom_ctrls[i].size;
+		ctrl_template.flags = custom_ctrls[i].flags;
+		v4l2_ctrl_new_custom(ctrl_handler, &ctrl_template, NULL);
+	}
+
+	if (ctrl_handler->error) {
+		ret = ctrl_handler->error;
+		dev_err(isp->dev, "controls init failed (%d)", ret);
+		v4l2_ctrl_handler_free(ctrl_handler);
+		return ret;
+	}
+
+	return 0;
+}
+
+/////////////////////////////////////////////////////////////////////////////
+// ISP statistics meta node
+
+#define ISP_STAT_REQ_BUFS_MIN 2
+#define ISP_STAT_REQ_BUFS_MAX 8
+
+static int isp_stat_enum_fmt_meta_cap(struct file *file, void *priv,
+					  struct v4l2_fmtdesc *f)
+{
+	struct video_device *video = video_devdata(file);
+	//struct isp_stat_node *node = video_get_drvdata(video);
+
+	if (f->index > 0 || f->type != video->queue->type)
+		return -EINVAL;
+
+	f->pixelformat = V4L2_META_FMT_XIL_ISP_LITE_STAT;
+	return 0;
+}
+
+static int isp_stat_g_fmt_meta_cap(struct file *file, void *priv,
+				       struct v4l2_format *f)
+{
+	struct video_device *video = video_devdata(file);
+	//struct isp_stat_node *node = video_get_drvdata(video);
+	struct v4l2_meta_format *meta = &f->fmt.meta;
+
+	if (f->type != video->queue->type)
+		return -EINVAL;
+
+	memset(meta, 0, sizeof(*meta));
+	meta->dataformat = V4L2_META_FMT_XIL_ISP_LITE_STAT;
+	meta->buffersize = sizeof(struct xil_isp_lite_stat_result);
+
+	return 0;
+}
+
+static int isp_stat_querycap(struct file *file,
+				 void *priv, struct v4l2_capability *cap)
+{
+	struct video_device *vdev = video_devdata(file);
+
+	strscpy(cap->driver, ISP_DRIVER_NAME, sizeof(cap->driver));
+	strscpy(cap->card, vdev->name, sizeof(cap->card));
+	strscpy(cap->bus_info, ISP_BUS_NAME, sizeof(cap->bus_info));
+
+	return 0;
+}
+
+/* ISP video device IOCTLs */
+static const struct v4l2_ioctl_ops isp_stat_ioctl = {
+	.vidioc_reqbufs = vb2_ioctl_reqbufs,
+	.vidioc_querybuf = vb2_ioctl_querybuf,
+	.vidioc_create_bufs = vb2_ioctl_create_bufs,
+	.vidioc_qbuf = vb2_ioctl_qbuf,
+	.vidioc_dqbuf = vb2_ioctl_dqbuf,
+	.vidioc_prepare_buf = vb2_ioctl_prepare_buf,
+	.vidioc_expbuf = vb2_ioctl_expbuf,
+	.vidioc_streamon = vb2_ioctl_streamon,
+	.vidioc_streamoff = vb2_ioctl_streamoff,
+	.vidioc_enum_fmt_meta_cap = isp_stat_enum_fmt_meta_cap,
+	.vidioc_g_fmt_meta_cap = isp_stat_g_fmt_meta_cap,
+	.vidioc_s_fmt_meta_cap = isp_stat_g_fmt_meta_cap,
+	.vidioc_try_fmt_meta_cap = isp_stat_g_fmt_meta_cap,
+	.vidioc_querycap = isp_stat_querycap,
+	.vidioc_subscribe_event = v4l2_ctrl_subscribe_event,
+	.vidioc_unsubscribe_event = v4l2_event_unsubscribe,
+};
+
+static const struct v4l2_file_operations isp_stat_fops = {
+	.mmap = vb2_fop_mmap,
+	.unlocked_ioctl = video_ioctl2,
+	.poll = vb2_fop_poll,
+	.open = v4l2_fh_open,
+	.release = vb2_fop_release
+};
+
+static int isp_stat_vb2_queue_setup(struct vb2_queue *vq,
+					unsigned int *num_buffers,
+					unsigned int *num_planes,
+					unsigned int sizes[],
+					struct device *alloc_devs[])
+{
+	*num_planes = 1;
+
+	*num_buffers = clamp_t(u32, *num_buffers, ISP_STAT_REQ_BUFS_MIN, ISP_STAT_REQ_BUFS_MAX);
+
+	sizes[0] = sizeof(struct xil_isp_lite_stat_result);
+
+	return 0;
+}
+
+static void isp_stat_vb2_buf_queue(struct vb2_buffer *vb)
+{
+	struct vb2_v4l2_buffer *vbuf = to_vb2_v4l2_buffer(vb);
+	struct isp_stat_buffer *buffer =
+		container_of(vbuf, struct isp_stat_buffer, vb);
+	struct vb2_queue *vq = vb->vb2_queue;
+	struct isp_stat_node *node = vq->drv_priv;
+
+
+	spin_lock_irq(&node->lock);
+	list_add_tail(&buffer->list_node, &node->buf_list);
+	spin_unlock_irq(&node->lock);
+}
+
+static int isp_stat_vb2_buf_prepare(struct vb2_buffer *vb)
+{
+	if (vb2_plane_size(vb, 0) < sizeof(struct xil_isp_lite_stat_result))
+		return -EINVAL;
+
+	vb2_set_plane_payload(vb, 0, sizeof(struct xil_isp_lite_stat_result));
+
+	return 0;
+}
+
+static void isp_stat_vb2_stop_streaming(struct vb2_queue *vq)
+{
+	struct isp_stat_node *node = vq->drv_priv;
+	struct isp_stat_buffer *buffer;
+	unsigned int i;
+
+	spin_lock_irq(&node->lock);
+	for (i = 0; i < ISP_STAT_REQ_BUFS_MAX; i++) {
+		if (list_empty(&node->buf_list))
+			break;
+		buffer = list_first_entry(&node->buf_list, struct isp_stat_buffer, list_node);
+		list_del(&buffer->list_node);
+		vb2_buffer_done(&buffer->vb.vb2_buf, VB2_BUF_STATE_ERROR);
+	}
+	spin_unlock_irq(&node->lock);
+}
+
+static const struct vb2_ops isp_stat_vb2_ops = {
+	.queue_setup = isp_stat_vb2_queue_setup,
+	.buf_queue = isp_stat_vb2_buf_queue,
+	.buf_prepare = isp_stat_vb2_buf_prepare,
+	.wait_prepare = vb2_ops_wait_prepare,
+	.wait_finish = vb2_ops_wait_finish,
+	.stop_streaming = isp_stat_vb2_stop_streaming,
+};
+
+static int isp_stat_init_vb2_queue(struct isp_stat_node *node)
+{
+	struct vb2_queue *q = &node->queue;
+	q->type = V4L2_BUF_TYPE_META_CAPTURE;
+	q->io_modes = VB2_MMAP | VB2_USERPTR | VB2_DMABUF;
+	q->drv_priv = node;
+	q->ops = &isp_stat_vb2_ops;
+	q->mem_ops = &vb2_vmalloc_memops;
+	q->buf_struct_size = sizeof(struct isp_stat_buffer);
+	q->timestamp_flags = V4L2_BUF_FLAG_TIMESTAMP_MONOTONIC;
+	q->lock = &node->vlock;
+
+	return vb2_queue_init(q);
+}
+
+static void isp_stat_send_measurement(struct isp_stat_node *node)
+{
+	struct isp_state *isp = container_of(node, struct isp_state, stat_node);
+	struct isp_stat_buffer *buffer = NULL;
+	unsigned int frame_sequence = isp->frame_sequence;
+	u64 timestamp = ktime_get_ns();
+
+	spin_lock(&node->lock);
+
+	/* get one empty buffer */
+	if (!list_empty(&node->buf_list)) {
+		buffer = list_first_entry(&node->buf_list, struct isp_stat_buffer, list_node);
+		list_del(&buffer->list_node);
+	}
+
+	if (buffer) {
+		struct xil_isp_lite_stat_result *stat_result = NULL;
+		stat_result = (struct xil_isp_lite_stat_result *)vb2_plane_vaddr(&buffer->vb.vb2_buf, 0);
+
+		isp_get_stat_ae_result(isp, &stat_result->ae);
+		isp_get_stat_awb_result(isp, &stat_result->awb);
+
+		vb2_set_plane_payload(&buffer->vb.vb2_buf, 0, sizeof(struct xil_isp_lite_stat_result));
+		buffer->vb.sequence = frame_sequence;
+		buffer->vb.vb2_buf.timestamp = timestamp;
+		vb2_buffer_done(&buffer->vb.vb2_buf, VB2_BUF_STATE_DONE);
+	}
+
+	spin_unlock(&node->lock);
+}
+
+static int isp_stat_node_register(struct isp_state *isp, struct v4l2_device *v4l2_dev)
+{
+	struct isp_stat_node *node = &isp->stat_node;
+	struct video_device *vdev = &node->vdev;
+	int ret;
+
+	mutex_init(&node->vlock);
+	INIT_LIST_HEAD(&node->buf_list);
+	spin_lock_init(&node->lock);
+
+	//XXX
+	strscpy(vdev->name, ISP_STAT_DEV_NAME, sizeof(vdev->name));
+
+	video_set_drvdata(vdev, node);
+	vdev->ioctl_ops = &isp_stat_ioctl;
+	vdev->fops = &isp_stat_fops;
+	vdev->release = video_device_release_empty;
+	vdev->lock = &node->vlock;
+	vdev->v4l2_dev = v4l2_dev; //XXX MUST BE SET
+	vdev->ctrl_handler = &isp->config_ctrls; //XXX
+	vdev->queue = &node->queue;
+	vdev->device_caps = V4L2_CAP_META_CAPTURE | V4L2_CAP_STREAMING;
+	vdev->vfl_dir =  VFL_DIR_RX;
+	isp_stat_init_vb2_queue(node);
+	video_set_drvdata(vdev, node);
+
+	node->pad.flags = MEDIA_PAD_FL_SINK;
+	ret = media_entity_pads_init(&vdev->entity, 1, &node->pad);
+	if (ret)
+		goto err_mutex_destroy;
+
+	ret = video_register_device(vdev, VFL_TYPE_VIDEO, -1);
+	if (ret) {
+		dev_err(&vdev->dev,
+			"failed to register %s, ret=%d\n", vdev->name, ret);
+		goto err_cleanup_media_entity;
+	}
+
+	return 0;
+
+err_cleanup_media_entity:
+	media_entity_cleanup(&vdev->entity);
+err_mutex_destroy:
+	mutex_destroy(&node->vlock);
+	return ret;
+}
+
+static void isp_stat_node_unregister(struct isp_state *isp)
+{
+	struct isp_stat_node *node = &isp->stat_node;
+	struct video_device *vdev = &node->vdev;
+
+	vb2_video_unregister_device(vdev);
+	media_entity_cleanup(&vdev->entity);
+	mutex_destroy(&node->vlock);
+}
+
+/////////////////////////////////////////////////////////////////////////////
+// isp subdev
+
+static int isp_log_status(struct v4l2_subdev *sd)
+{
+	struct isp_state *isp = to_ispstate(sd);
+	struct device *dev = isp->dev;
+	u32 width, height, bits, bayer;
+
+	mutex_lock(&isp->lock);
+
+	width  = isp_read(isp, ISP_REG_WIDTH);
+	height = isp_read(isp, ISP_REG_HEIGHT);
+	bits   = isp_read(isp, ISP_REG_BITS);
+	bayer  = isp_read(isp, ISP_REG_BAYER);
+	dev_info(dev, "ISP Lite %u x %u RAW%u Bayer %u, stat_result_size %lu",
+			width, height, bits, bayer, sizeof(struct xil_isp_lite_stat_result));
+
+	mutex_unlock(&isp->lock);
+
+	return 0;
+}
+
+static int isp_subscribe_event(struct v4l2_subdev *sd, struct v4l2_fh *fh,
+			       struct v4l2_event_subscription *sub)
+{
+	if (sub->type != V4L2_EVENT_FRAME_SYNC)
+		return -EINVAL;
+
+	/* V4L2_EVENT_FRAME_SYNC doesn't require an id, so zero should be set */
+	if (sub->id != 0)
+		return -EINVAL;
+
+	return v4l2_event_subscribe(fh, sub, 0, NULL);
+}
+
+static int isp_start_stream(struct isp_state *isp)
+{
+	isp_write(isp, ISP_REG_INT_STATUS, 0);
+	isp_write(isp, ISP_REG_INT_MASK, ~(ISP_REG_INT_MASK_BIT_FRAME_START|ISP_REG_INT_MASK_BIT_FRAME_DONE|ISP_REG_INT_MASK_BIT_AE_DONE|ISP_REG_INT_STATUS_BIT_AWB_DONE));
+	isp_write(isp, ISP_REG_RESET, 0);
+
+	isp->frame_sequence = 0;
+	isp->int_status = 0;
+	isp->streaming = true;
+
+	return 0;
+}
+
+static void isp_stop_stream(struct isp_state *isp)
+{
+	isp_write(isp, ISP_REG_RESET, 1);
+	isp_write(isp, ISP_REG_INT_MASK, ~0U);
+	isp_write(isp, ISP_REG_INT_STATUS, 0);
+
+	isp->streaming = false;
+}
+
+static void isp_queue_event_frame_sync(struct isp_state *isp, u32 frame_seq)
+{
+	struct v4l2_event event = {
+		.type = V4L2_EVENT_FRAME_SYNC,
+	};
+	event.u.frame_sync.frame_sequence = frame_seq;
+
+	v4l2_event_queue(isp->subdev.devnode, &event);
+}
+
+static irqreturn_t isp_irq_handler(int irq, void *data)
+{
+	struct isp_state *isp = (struct isp_state *)data;
+	//struct device *dev = isp->dev;
+	u32 status, done_mask;
+
+	status = isp_read(isp, ISP_REG_INT_STATUS);
+	isp_write(isp, ISP_REG_INT_STATUS, 0);
+
+	if (status & ISP_REG_INT_STATUS_BIT_FRAME_START) {
+		//dev_info(dev, "IRQ FRAME_START");
+		isp_queue_event_frame_sync(isp, isp->frame_sequence);
+		isp->int_status = ISP_REG_INT_STATUS_BIT_FRAME_START;
+		return IRQ_HANDLED;
+	}
+
+	if (status & ISP_REG_INT_STATUS_BIT_AE_DONE) {
+		//dev_info(dev, "IRQ AE_DONE");
+		// static struct xil_isp_lite_stat_ae_result ae_result;
+		// u64 hist_r_cnt = 0;
+		// u64 hist_gr_cnt = 0;
+		// u64 hist_gb_cnt = 0;
+		// u64 hist_b_cnt = 0;
+		// u32 i;
+		// isp_get_stat_ae_result(isp, &ae_result);
+		// for (i = 0; i < XIL_ISP_LITE_AE_HIST_BIN_NUM; i ++) {
+		// 	hist_r_cnt += ae_result.hist_r[i];
+		// 	hist_gr_cnt += ae_result.hist_gr[i];
+		// 	hist_gb_cnt += ae_result.hist_gb[i];
+		// 	hist_b_cnt += ae_result.hist_b[i];
+		// }
+		// dev_info(dev, "IRQ AE_DONE avg-raw %llu, pix_cnt %llu, sum %llu, r_cnt %llu, gr_cnt %llu, gb_cnt %llu, b_cnt %llu",
+		// 			ae_result.sum/ae_result.pix_cnt, ae_result.pix_cnt, ae_result.sum,
+		// 			hist_r_cnt, hist_gr_cnt, hist_gb_cnt, hist_b_cnt);
+	}
+	if (status & ISP_REG_INT_STATUS_BIT_AWB_DONE) {
+		//dev_info(dev, "IRQ AWB_DONE");
+		// static struct xil_isp_lite_stat_awb_result awb_result;
+		// u64 hist_r_cnt = 0;
+		// u64 hist_g_cnt = 0;
+		// u64 hist_b_cnt = 0;
+		// u32 i;
+		// isp_get_stat_awb_result(isp, &awb_result);
+		// for (i = 0; i < XIL_ISP_LITE_AWB_HIST_BIN_NUM; i ++) {
+		// 	hist_r_cnt += awb_result.hist_r[i];
+		// 	hist_g_cnt += awb_result.hist_g[i];
+		// 	hist_b_cnt += awb_result.hist_b[i];
+		// }
+		// dev_info(dev, "IRQ AWB_DONE avg-rgb %llu,%llu,%llu, pix_cnt %llu, sum_r %llu, sum_g %llu, sum_b %llu, r_cnt %llu, g_cnt %llu, b_cnt %llu",
+		// 			awb_result.sum_r/awb_result.pix_cnt,
+		// 			awb_result.sum_g/awb_result.pix_cnt,
+		// 			awb_result.sum_b/awb_result.pix_cnt,
+		// 			awb_result.pix_cnt,
+		// 			awb_result.sum_r, awb_result.sum_g, awb_result.sum_b,
+		// 			hist_r_cnt, hist_g_cnt, hist_b_cnt);
+	}
+	if (status & ISP_REG_INT_STATUS_BIT_FRAME_DONE) {
+		//dev_info(dev, "IRQ FRAME_DONE");
+	}
+
+	isp->int_status |= status;
+	done_mask  = ISP_REG_INT_STATUS_BIT_FRAME_START | ISP_REG_INT_STATUS_BIT_FRAME_DONE;
+	done_mask |= ISP_REG_INT_STATUS_BIT_AE_DONE | ISP_REG_INT_STATUS_BIT_AWB_DONE;
+
+	if ((isp->int_status & done_mask) == done_mask) {
+		//dev_info(dev, "Statistics done");
+		isp_stat_send_measurement(&isp->stat_node);
+		isp->frame_sequence ++;
+		isp->int_status = 0;
+	}
+
+	return IRQ_HANDLED;
+}
+
+static int isp_s_stream(struct v4l2_subdev *sd, int enable)
+{
+	struct isp_state *isp = to_ispstate(sd);
+	int ret = 0;
+
+	mutex_lock(&isp->lock);
+
+	if (enable == isp->streaming) {
+		goto stream_done;
+	}
+
+	if (enable) {
+		ret = isp_start_stream(isp);
+	} else {
+		isp_stop_stream(isp);
+	}
+
+stream_done:
+	mutex_unlock(&isp->lock);
+	return ret;
+}
+
+static struct v4l2_mbus_framefmt *__isp_get_pad_format(struct isp_state *isp,
+			   struct v4l2_subdev_state *sd_state,
+			   unsigned int pad, u32 which)
+{
+	struct v4l2_mbus_framefmt *get_fmt;
+
+	switch (which) {
+	case V4L2_SUBDEV_FORMAT_TRY:
+		get_fmt = v4l2_subdev_get_try_format(&isp->subdev,
+						     sd_state, pad);
+		break;
+	case V4L2_SUBDEV_FORMAT_ACTIVE:
+		get_fmt = &isp->pad_format[pad];
+		break;
+	default:
+		get_fmt = NULL;
+		break;
+	}
+
+	return get_fmt;
+}
+
+static int isp_init_cfg(struct v4l2_subdev *sd,
+			      struct v4l2_subdev_state *sd_state)
+{
+	struct isp_state *isp = to_ispstate(sd);
+	struct v4l2_mbus_framefmt *format;
+	unsigned int i;
+
+	mutex_lock(&isp->lock);
+	for (i = 0; i < ISP_MEDIA_PADS; i++) {
+		format = v4l2_subdev_get_try_format(sd, sd_state, i);
+		*format = isp->pad_format[i];
+	}
+	mutex_unlock(&isp->lock);
+
+	return 0;
+}
+
+static int isp_get_format(struct v4l2_subdev *sd,
+				struct v4l2_subdev_state *sd_state,
+				struct v4l2_subdev_format *fmt)
+{
+	struct isp_state *isp = to_ispstate(sd);
+	struct v4l2_mbus_framefmt *get_fmt;
+	int ret = 0;
+
+	mutex_lock(&isp->lock);
+
+	get_fmt = __isp_get_pad_format(isp, sd_state, fmt->pad,
+					     fmt->which);
+	if (!get_fmt) {
+		ret = -EINVAL;
+		goto unlock_get_format;
+	}
+
+	fmt->format = *get_fmt;
+
+unlock_get_format:
+	mutex_unlock(&isp->lock);
+
+	return ret;
+}
+
+static int isp_set_format(struct v4l2_subdev *sd,
+				struct v4l2_subdev_state *sd_state,
+				struct v4l2_subdev_format *fmt)
+{
+	struct isp_state *isp = to_ispstate(sd);
+	struct v4l2_mbus_framefmt *__format;
+	int ret = 0;
+
+	mutex_lock(&isp->lock);
+
+	__format = __isp_get_pad_format(isp, sd_state,
+					      fmt->pad, fmt->which);
+	if (!__format) {
+		ret = -EINVAL;
+		goto unlock_set_format;
+	}
+
+	/* only sink pad format can be updated */
+	if (fmt->pad != ISP_PAD_SINK) {
+		fmt->format = *__format;
+		goto unlock_set_format;
+	}
+
+	if ((isp->bits == 8 && fmt->format.code == MEDIA_BUS_FMT_Y8_1X8) ||
+	    (isp->bits == 10 && fmt->format.code == MEDIA_BUS_FMT_Y10_1X10) ||
+	    (isp->bits == 12 && fmt->format.code == MEDIA_BUS_FMT_Y12_1X12)) {
+		__format->code = fmt->format.code;
+	}
+	fmt->format = *__format;
+
+unlock_set_format:
+	mutex_unlock(&isp->lock);
+
+	return ret;
+}
+
+static int isp_enum_mbus_code(struct v4l2_subdev *sd,
+				    struct v4l2_subdev_state *sd_state,
+				    struct v4l2_subdev_mbus_code_enum *code)
+{
+	struct isp_state *isp = to_ispstate(sd);
+
+	if (code->index > 1 || code->pad >= ISP_MEDIA_PADS) {
+		return -EINVAL;
+	}
+
+	if (code->index == 0) {
+		code->code = isp->pad_format[code->pad].code;
+	} else {
+		code->code = isp->bits == 8 ? MEDIA_BUS_FMT_Y8_1X8 : (isp->bits == 10) ? MEDIA_BUS_FMT_Y10_1X10 : MEDIA_BUS_FMT_Y12_1X12;
+	}
+
+	return 0;
+}
+
+static int isp_enum_frame_size(struct v4l2_subdev *sd,
+			       struct v4l2_subdev_state *state,
+			       struct v4l2_subdev_frame_size_enum *fse)
+{
+	struct isp_state *isp = to_ispstate(sd);
+
+	if (fse->index > 0 || fse->pad >= ISP_MEDIA_PADS || fse->code != isp->pad_format[fse->pad].code) {
+		return -EINVAL;
+	}
+
+	fse->min_width  = isp->pad_format[fse->pad].width;
+	fse->max_width  = isp->pad_format[fse->pad].width;
+	fse->min_height = isp->pad_format[fse->pad].height;
+	fse->max_height = isp->pad_format[fse->pad].height;
+
+	return 0;
+}
+
+/* -----------------------------------------------------------------------------
+ * Media Operations
+ */
+
+static const struct media_entity_operations isp_media_ops = {
+	.link_validate = v4l2_subdev_link_validate
+};
+
+static const struct v4l2_subdev_core_ops isp_core_ops = {
+	.log_status = isp_log_status,
+	.subscribe_event = isp_subscribe_event,
+	.unsubscribe_event = v4l2_event_subdev_unsubscribe,
+};
+
+static const struct v4l2_subdev_video_ops isp_video_ops = {
+	.s_stream = isp_s_stream,
+};
+
+static const struct v4l2_subdev_pad_ops isp_pad_ops = {
+	.init_cfg = isp_init_cfg,
+	.enum_mbus_code = isp_enum_mbus_code,
+	.enum_frame_size = isp_enum_frame_size,
+	.get_fmt = isp_get_format,
+	.set_fmt = isp_set_format,
+	.link_validate = v4l2_subdev_link_validate_default,
+};
+
+static const struct v4l2_subdev_ops isp_ops = {
+	.core = &isp_core_ops,
+	.video = &isp_video_ops,
+	.pad = &isp_pad_ops
+};
+
+static int isp_internal_registered (struct v4l2_subdev *sd)
+{
+	struct isp_state *isp = to_ispstate(sd);
+	return isp_stat_node_register(isp, sd->v4l2_dev);
+}
+
+static void isp_internal_unregistered (struct v4l2_subdev *sd)
+{
+	struct isp_state *isp = to_ispstate(sd);
+	isp_stat_node_unregister(isp);
+}
+
+static const struct v4l2_subdev_internal_ops isp_internal_ops = {
+	.registered    = isp_internal_registered,
+	.unregistered  = isp_internal_unregistered,
+};
+
+static int isp_get_hw_format(struct isp_state *isp)
+{
+	struct device *dev = isp->dev;
+	struct v4l2_mbus_framefmt *format = NULL;
+
+	const u32 raw8_codes[] =  {MEDIA_BUS_FMT_SRGGB8_1X8, MEDIA_BUS_FMT_SGRBG8_1X8, MEDIA_BUS_FMT_SGBRG8_1X8, MEDIA_BUS_FMT_SBGGR8_1X8};
+	const u32 raw10_codes[] = {MEDIA_BUS_FMT_SRGGB10_1X10, MEDIA_BUS_FMT_SGRBG10_1X10, MEDIA_BUS_FMT_SGBRG10_1X10, MEDIA_BUS_FMT_SBGGR10_1X10};
+	const u32 raw12_codes[] = {MEDIA_BUS_FMT_SRGGB12_1X12, MEDIA_BUS_FMT_SGRBG12_1X12, MEDIA_BUS_FMT_SGBRG12_1X12, MEDIA_BUS_FMT_SBGGR12_1X12};
+
+	u32 width  = isp_read(isp, ISP_REG_WIDTH);
+	u32 height = isp_read(isp, ISP_REG_HEIGHT);
+	u32 bits   = isp_read(isp, ISP_REG_BITS);
+	u32 bayer  = isp_read(isp, ISP_REG_BAYER);
+	if (width < 1 || height < 1 || (bits != 8 && bits != 10 && bits != 12) || bayer >= 4) {
+		dev_err(dev, "Invalid HW formats. Resolution %u x %u, RAW%u, Bayer %u",
+			width, height, bits, bayer);
+		return -EINVAL;
+	}
+
+	dev_info(dev, "ISP HW formats. Resolution %u x %u, RAW%u, Bayer %u",
+		width, height, bits, bayer);
+	
+	isp->bits = bits;
+	format = &isp->pad_format[ISP_PAD_SINK];
+
+	switch (bits) {
+		case 8:   format->code = raw8_codes[bayer];  break;
+		case 10:  format->code = raw10_codes[bayer]; break;
+		default:  format->code = raw12_codes[bayer]; break;
+	}
+
+	format->field      = V4L2_FIELD_NONE;
+	format->colorspace = V4L2_COLORSPACE_SRGB;
+	format->width      = width;
+	format->height     = height;
+
+	format = &isp->pad_format[ISP_PAD_SOURCE];
+
+	*format = isp->pad_format[ISP_PAD_SINK];
+	switch (bits) {
+		case 8:   format->code = MEDIA_BUS_FMT_YUV8_1X24;  break;
+		case 10:  format->code = MEDIA_BUS_FMT_YUV10_1X30; break;
+		default:  format->code = MEDIA_BUS_FMT_YUV12_1X36; break;
+	}
+
+	return 0;
+}
+
+//np.uint8(np.power(np.double(range(256))/255, 1/2.2) * 255)
+static const unsigned gamma_table[] = {
+		  0,  20,  28,  33,  38,  42,  46,  49,  52,  55,  58,  61,  63,
+		 65,  68,  70,  72,  74,  76,  78,  80,  81,  83,  85,  87,  88,
+		 90,  91,  93,  94,  96,  97,  99, 100, 102, 103, 104, 106, 107,
+		108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122,
+		123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136,
+		136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 147,
+		148, 149, 150, 151, 152, 153, 153, 154, 155, 156, 157, 158, 158,
+		159, 160, 161, 162, 162, 163, 164, 165, 165, 166, 167, 168, 168,
+		169, 170, 171, 171, 172, 173, 174, 174, 175, 176, 176, 177, 178,
+		178, 179, 180, 181, 181, 182, 183, 183, 184, 185, 185, 186, 187,
+		187, 188, 189, 189, 190, 190, 191, 192, 192, 193, 194, 194, 195,
+		196, 196, 197, 197, 198, 199, 199, 200, 200, 201, 202, 202, 203,
+		203, 204, 205, 205, 206, 206, 207, 208, 208, 209, 209, 210, 210,
+		211, 212, 212, 213, 213, 214, 214, 215, 216, 216, 217, 217, 218,
+		218, 219, 219, 220, 220, 221, 222, 222, 223, 223, 224, 224, 225,
+		225, 226, 226, 227, 227, 228, 228, 229, 229, 230, 230, 231, 231,
+		232, 232, 233, 233, 234, 234, 235, 235, 236, 236, 237, 237, 238,
+		238, 239, 239, 240, 240, 241, 241, 242, 242, 243, 243, 244, 244,
+		245, 245, 246, 246, 247, 247, 248, 248, 249, 249, 249, 250, 250,
+		251, 251, 252, 252, 253, 253, 254, 254, 255
+};
+
+//spaceKernel = x_bf_makeSpaceKern(7, 6, 31); print(spaceKernel)
+static const unsigned char spaceWeightTbl_6[7*7] = {
+		24, 26, 27, 27, 27, 26, 24,
+		26, 28, 29, 29, 29, 28, 26,
+		27, 29, 30, 31, 30, 29, 27,
+		27, 29, 31, 31, 31, 29, 27,
+		27, 29, 30, 31, 30, 29, 27,
+		26, 28, 29, 29, 29, 28, 26,
+		24, 26, 27, 27, 27, 26, 24
+	};
+//spaceKernel = x_bf_makeSpaceKern(7, 8, 31); print(spaceKernel)
+static const unsigned char spaceWeightTbl_8[7*7] = {
+		27, 28, 29, 29, 29, 28, 27,
+		28, 29, 30, 30, 30, 29, 28,
+		29, 30, 31, 31, 31, 30, 29,
+		29, 30, 31, 31, 31, 30, 29,
+		29, 30, 31, 31, 31, 30, 29,
+		28, 29, 30, 30, 30, 29, 28,
+		27, 28, 29, 29, 29, 28, 27
+	};
+//spaceKernel = x_bf_makeSpaceKern(7, 10, 31); print(spaceKernel)
+static const unsigned char spaceWeightTbl_10[7*7] = {
+		28, 29, 29, 30, 29, 29, 28,
+		29, 30, 30, 30, 30, 30, 29,
+		29, 30, 31, 31, 31, 30, 29,
+		30, 30, 31, 31, 31, 30, 30,
+		29, 30, 31, 31, 31, 30, 29,
+		29, 30, 30, 30, 30, 30, 29,
+		28, 29, 29, 30, 29, 29, 28
+	};
+//colorCurve = x_bf_makeColorCurve(9, 20, 6, 31); print(colorCurve)
+static const unsigned char colorCurveTbl_6[9][2] = {
+		{ 2, 29},
+		{ 4, 25},
+		{ 6, 19},
+		{ 8, 13},
+		{10,  8},
+		{12,  4},
+		{14,  2},
+		{16,  1},
+		{18,  0}
+	};
+//colorCurve = x_bf_makeColorCurve(9, 26, 8, 31); print(colorCurve)
+static const unsigned char colorCurveTbl_8[9][2] = {
+		{ 2, 30},
+		{ 5, 25},
+		{ 7, 21},
+		{10, 14},
+		{13,  8},
+		{15,  5},
+		{18,  2},
+		{20,  1},
+		{23,  0}
+	};
+//colorCurve = x_bf_makeColorCurve(9, 34, 10, 31); print(colorCurve)
+static const unsigned char colorCurveTbl_10[9][2] = {
+		{ 3, 30},
+		{ 6, 26},
+		{10, 19},
+		{13, 13},
+		{17,  7},
+		{20,  4},
+		{23,  2},
+		{27,  1},
+		{30,  0}
+	};
+
+static int isp_initialize_hw(struct isp_state *isp)
+{
+	u32 width  = isp->pad_format[ISP_PAD_SINK].width;
+	u32 height = isp->pad_format[ISP_PAD_SINK].height;
+	u32 bits   = isp->bits;
+	//struct xil_isp_lite_top top = {};
+	struct xil_isp_lite_dpc dpc = {};
+	struct xil_isp_lite_blc blc = {};
+	struct xil_isp_lite_bnr bnr = {};
+	struct xil_isp_lite_dgain dgain = {};
+	struct xil_isp_lite_demosaic demosaic = {};
+	struct xil_isp_lite_wb wb = {};
+	struct xil_isp_lite_ccm ccm = {};
+	struct xil_isp_lite_csc csc = {};
+	struct xil_isp_lite_gamma gamma = {};
+	struct xil_isp_lite_2dnr nr2d = {};
+	struct xil_isp_lite_ee ee = {};
+	struct xil_isp_lite_stat_ae_cfg ae_cfg = {};
+	struct xil_isp_lite_stat_awb_cfg awb_cfg = {};
+	unsigned i;
+
+	isp_write(isp, ISP_REG_RESET, 1);
+	isp_write(isp, ISP_REG_INT_MASK, ~0U);
+
+	dpc.enabled = 1;
+	blc.enabled = 1;
+	bnr.enabled = 1;
+	dgain.enabled = 1;
+	demosaic.enabled = 1;
+	wb.enabled = 1;
+	ccm.enabled = 1;
+	csc.enabled = 1;
+	gamma.enabled = 1;
+	nr2d.enabled = 1;
+	ee.enabled = 1;
+	ae_cfg.enabled = 1;
+	awb_cfg.enabled = 1;
+
+	dpc.threshold = 32 << (bits - 8);
+
+	blc.black_level_r  = 10 << (bits - 8);
+	blc.black_level_gr = 10 << (bits - 8);
+	blc.black_level_gb = 10 << (bits - 8);
+	blc.black_level_b  = 10 << (bits - 8);
+
+	bnr.nr_level = 2;
+
+	dgain.gain = 0x10;
+	dgain.offset = 0;
+	
+	wb.ggain = 0x10;
+	wb.rgain = 0x17;
+	wb.bgain = 0x20;
+
+	ccm.matrix[0] =  0x1a;
+	ccm.matrix[1] = -0x05;
+	ccm.matrix[2] = -0x05;
+	ccm.matrix[3] = -0x05;
+	ccm.matrix[4] =  0x1a;
+	ccm.matrix[5] = -0x05;
+	ccm.matrix[6] = -0x05;
+	ccm.matrix[7] = -0x05;
+	ccm.matrix[8] =  0x1a;
+
+	for (i = 0; i < ARRAY_SIZE(gamma.gamma_table); i++) {
+		gamma.gamma_table[i] = gamma_table[i];
+	}
+
+	for (i = 0; i < ARRAY_SIZE(nr2d.space_weight); i++) {
+		nr2d.space_weight[i] = spaceWeightTbl_10[i];
+	}
+	for (i = 0; i < ARRAY_SIZE(nr2d.color_curve); i++) {
+		nr2d.color_curve[i][0] = colorCurveTbl_10[i][0];
+		nr2d.color_curve[i][1] = colorCurveTbl_10[i][1];
+	}
+
+	ae_cfg.rect_x = width / 8;
+	ae_cfg.rect_y = height / 8;
+	ae_cfg.rect_w = width / 4 * 3;
+	ae_cfg.rect_h = height / 4 * 3;
+
+	awb_cfg.thresh_min = 10 << (bits - 8);
+	awb_cfg.thresh_max = 220 << (bits - 8);
+
+	isp_set_dpc(isp, &dpc);
+	isp_set_blc(isp, &blc);
+	isp_set_bnr(isp, &bnr);
+	isp_set_dgain(isp, &dgain);
+	isp_set_demosaic(isp, &demosaic);
+	isp_set_wb(isp, &wb);
+	isp_set_ccm(isp, &ccm);
+	isp_set_csc(isp, &csc);
+	isp_set_gamma(isp, &gamma);
+	isp_set_2dnr(isp, &nr2d);
+	isp_set_ee(isp, &ee);
+	isp_set_stat_ae_cfg(isp, &ae_cfg);
+	isp_set_stat_awb_cfg(isp, &awb_cfg);
+
+	// isp_get_top(isp, &top);
+	// dev_info(isp->dev, "top_en 0x%04X", *(u32*)&top);
+
+	// isp_get_gamma(isp, &gamma);
+	// for (i = 0; i < ARRAY_SIZE(gamma.gamma_table); i++) {
+	// 	dev_info(isp->dev, "gamma[%u]:\t%u", i, gamma.gamma_table[i]);
+	// }
+
+	// isp_get_ccm(isp, &ccm);
+	// for (i = 0; i < ARRAY_SIZE(ccm.matrix); i++) {
+	// 	dev_info(isp->dev, "matrix[%u]:\t%02X, %d", i, (u8)ccm.matrix[i], ccm.matrix[i]);
+	// }
+	return 0;
+}
+
+static const struct clk_bulk_data isp_clks[] = {
+	{ .id = "s00_axi_aclk" },
+	{ .id = "pclk" },
+};
+
+static int isp_probe(struct platform_device *pdev)
+{
+	struct v4l2_subdev *subdev;
+	struct isp_state *isp;
+	int num_clks = ARRAY_SIZE(isp_clks);
+	struct device *dev = &pdev->dev;
+	int irq, ret;
+
+	isp = devm_kzalloc(dev, sizeof(*isp), GFP_KERNEL);
+	if (!isp) {
+		dev_err(dev, "No memory for isp");
+		return -ENOMEM;
+	}
+
+	isp->dev = dev;
+
+	isp->clks = devm_kmemdup(dev, isp_clks, sizeof(isp_clks), GFP_KERNEL);
+	if (!isp->clks) {
+		dev_err(dev, "No memory for isp clks");
+		return -ENOMEM;
+	}
+
+	isp->iomem = devm_platform_ioremap_resource(pdev, 0);
+	if (IS_ERR(isp->iomem)) {
+		dev_err(dev, "No iomem resource in DT");
+		return PTR_ERR(isp->iomem);
+	}
+
+	irq = platform_get_irq(pdev, 0);
+	if (irq < 0) {
+		dev_err(dev, "No irq resource in DT");
+		return irq;
+	}
+
+	ret = devm_request_threaded_irq(dev, irq, NULL,
+					isp_irq_handler, IRQF_ONESHOT,
+					dev_name(dev), isp);
+	if (ret) {
+		dev_err(dev, "Err = %d Interrupt handler reg failed!\n", ret);
+		return ret;
+	}
+
+	ret = devm_clk_bulk_get(dev, num_clks, isp->clks);
+	if (ret) {
+		dev_err(dev, "could not get clks");
+		return ret;
+	}
+
+	/* TODO: Enable/disable clocks at stream on/off time. */
+	ret = clk_bulk_prepare_enable(num_clks, isp->clks);
+	if (ret) {
+		dev_err(dev, "could not prepare enable clks");
+		return ret;
+	}
+
+	mutex_init(&isp->lock);
+
+	/* Initialize V4L2 subdevice and media entity */
+	isp->pads[ISP_PAD_SINK].flags = MEDIA_PAD_FL_SINK;
+	isp->pads[ISP_PAD_SOURCE].flags = MEDIA_PAD_FL_SOURCE;
+
+	/* Initialize the default format */
+	ret = isp_get_hw_format(isp);
+	if (ret < 0) {
+		goto error;
+	}
+
+	/* Initialize the isp hardware */
+	ret = isp_initialize_hw(isp);
+	if (ret < 0) {
+		goto error;
+	}
+
+	/* Initialize ctrl handler */
+	ret = isp_config_init_ctrl_handler(isp);
+	if (ret < 0) {
+		goto error;
+	}
+
+	/* Initialize V4L2 subdevice and media entity */
+	subdev = &isp->subdev;
+	v4l2_subdev_init(subdev, &isp_ops);
+	subdev->dev = dev;
+	subdev->internal_ops = &isp_internal_ops;
+	strscpy(subdev->name, dev_name(dev), sizeof(subdev->name));
+	subdev->flags |= V4L2_SUBDEV_FL_HAS_EVENTS | V4L2_SUBDEV_FL_HAS_DEVNODE;
+	subdev->entity.ops = &isp_media_ops;
+	v4l2_set_subdevdata(subdev, isp);
+
+	ret = media_entity_pads_init(&subdev->entity, ISP_MEDIA_PADS,
+				     isp->pads);
+	if (ret < 0) {
+		dev_err(dev, "init media entity pads fail");
+		goto error;
+	}
+
+	platform_set_drvdata(pdev, isp);
+
+	ret = v4l2_async_register_subdev(subdev);
+	if (ret < 0) {
+		dev_err(dev, "failed to register subdev\n");
+		goto error;
+	}
+
+	dev_info(dev, ISP_DRIVER_NAME " driver probed!");
+
+	return 0;
+error:
+	media_entity_cleanup(&subdev->entity);
+	mutex_destroy(&isp->lock);
+	clk_bulk_disable_unprepare(num_clks, isp->clks);
+	return ret;
+}
+
+static int isp_remove(struct platform_device *pdev)
+{
+	struct isp_state *isp = platform_get_drvdata(pdev);
+	struct v4l2_subdev *subdev = &isp->subdev;
+	int num_clks = ARRAY_SIZE(isp_clks);
+
+	v4l2_async_unregister_subdev(subdev);
+	media_entity_cleanup(&subdev->entity);
+	mutex_destroy(&isp->lock);
+	clk_bulk_disable_unprepare(num_clks, isp->clks);
+
+	return 0;
+}
+
+static const struct of_device_id isp_of_id_table[] = {
+	{ .compatible = "xlnx,xil-isp-lite-1.0", },
+	{ }
+};
+MODULE_DEVICE_TABLE(of, isp_of_id_table);
+
+static struct platform_driver isp_driver = {
+	.driver = {
+		.name		= ISP_DRIVER_NAME,
+		.of_match_table	= isp_of_id_table,
+	},
+	.probe			= isp_probe,
+	.remove			= isp_remove,
+};
+
+module_platform_driver(isp_driver);
+
+MODULE_AUTHOR("xinquan bian <544177215@qq.com>");
+MODULE_DESCRIPTION("Xil ISP Lite Driver");
+MODULE_LICENSE("GPL v2");
diff --git a/drivers/media/platform/xilinx/xil-vip.c b/drivers/media/platform/xilinx/xil-vip.c
new file mode 100755
index 000000000..8e11e8805
--- /dev/null
+++ b/drivers/media/platform/xilinx/xil-vip.c
@@ -0,0 +1,686 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Driver for Xil VIP IP
+ *
+ */
+#include <linux/clk.h>
+#include <linux/delay.h>
+#include <linux/interrupt.h>
+#include <linux/module.h>
+#include <linux/mutex.h>
+#include <linux/of.h>
+#include <linux/of_irq.h>
+#include <linux/platform_device.h>
+#include <linux/v4l2-subdev.h>
+#include <media/media-entity.h>
+#include <media/v4l2-common.h>
+#include <media/v4l2-subdev.h>
+#include <media/v4l2-event.h>
+
+/* Register register map */
+
+#define VIP_REG_RESET                      (0 * 4)
+#define VIP_REG_WIDTH                      (1 * 4)
+#define VIP_REG_HEIGHT                     (2 * 4)
+#define VIP_REG_BITS                       (3 * 4)
+#define VIP_REG_TOP_EN                     (4 * 4)
+#define VIP_REG_HIST_EQU_MIN               (5 * 4)
+#define VIP_REG_HIST_EQU_MAX               (6 * 4)
+#define VIP_REG_CROP_X                     (7 * 4)
+#define VIP_REG_CROP_Y                     (8 * 4)
+#define VIP_REG_CROP_W                     (9 * 4)
+#define VIP_REG_CROP_H                     (10 * 4)
+#define VIP_REG_DSCALE_H                   (11 * 4)
+#define VIP_REG_DSCALE_V                   (12 * 4)
+#define VIP_REG_OSD_X                      (13 * 4)
+#define VIP_REG_OSD_Y                      (14 * 4)
+#define VIP_REG_OSD_W                      (15 * 4)
+#define VIP_REG_OSD_H                      (16 * 4)
+#define VIP_REG_OSD_RGB_FG                 (17 * 4)
+#define VIP_REG_OSD_RGB_BG                 (18 * 4)
+#define VIP_REG_YUV444TO422_SWITCH_UV      (19 * 4)
+#define VIP_REG_INT_STATUS                 (20 * 4)
+#define VIP_REG_INT_MASK                   (21 * 4)
+
+#define VIP_REG_OSD_RAM_ADDR               (1*512*4)
+#define VIP_REG_OSD_RAM_SIZE               (1*512*4)
+
+#define VIP_REG_TOP_EN_BIT_HIST_EQU_EN     (1<<0)
+#define VIP_REG_TOP_EN_BIT_SOBEL_EN        (1<<1)
+#define VIP_REG_TOP_EN_BIT_YUV2RGB_EN      (1<<2)
+#define VIP_REG_TOP_EN_BIT_CROP_EN         (1<<3)
+#define VIP_REG_TOP_EN_BIT_DSCALE_EN       (1<<4)
+#define VIP_REG_TOP_EN_BIT_OSD_EN          (1<<5)
+#define VIP_REG_TOP_EN_BIT_YUV444TO422_EN  (1<<6)
+
+#define VIP_REG_INT_STATUS_BIT_FRAME_START (1<<0)
+#define VIP_REG_INT_STATUS_BIT_FRAME_DONE  (1<<1)
+
+#define VIP_REG_INT_MASK_BIT_FRAME_START   (1<<0)
+#define VIP_REG_INT_MASK_BIT_FRAME_DONE    (1<<1)
+////////////////////////////////////
+
+#define VIP_PAD_SINK		0
+#define VIP_PAD_SOURCE		1
+#define VIP_MEDIA_PADS		2
+
+
+/**
+ * struct vip_state - CSI-2 Rx device structure
+ * @subdev: The v4l2 subdev structure
+ * @format: Active V4L2 formats on each pad
+ * @default_format: Default V4L2 format
+ * @dev: Platform structure
+ * @clks: array of clocks
+ * @iomem: Base address of subsystem
+ * @lock: mutex for accessing this structure
+ * @pads: media pads
+ * @streaming: Flag for storing streaming state
+ *
+ * This structure contains the device driver related parameters
+ */
+struct vip_state {
+	struct v4l2_subdev subdev;
+	struct v4l2_mbus_framefmt pad_format[VIP_MEDIA_PADS];
+	struct device *dev;
+	struct clk_bulk_data *clks;
+	void __iomem *iomem;
+	u32 bits;
+	/* used to protect access to this struct */
+	struct mutex lock;
+	struct media_pad pads[VIP_MEDIA_PADS];
+	bool streaming;
+};
+
+static const struct clk_bulk_data vip_clks[] = {
+	{ .id = "s00_axi_aclk" },
+	{ .id = "pclk" },
+};
+
+static inline struct vip_state *
+to_vipstate(struct v4l2_subdev *subdev)
+{
+	return container_of(subdev, struct vip_state, subdev);
+}
+
+/*
+ * Register related operations
+ */
+static inline u32 vip_read(struct vip_state *vip, u32 addr)
+{
+	return ioread32(vip->iomem + addr);
+}
+
+static inline void vip_write(struct vip_state *vip, u32 addr,
+				   u32 value)
+{
+	iowrite32(value, vip->iomem + addr);
+}
+
+static int vip_log_status(struct v4l2_subdev *sd)
+{
+	struct vip_state *vip = to_vipstate(sd);
+	struct device *dev = vip->dev;
+	u32 width, height, bits;
+
+	mutex_lock(&vip->lock);
+
+	width     = vip_read(vip, VIP_REG_WIDTH);
+	height    = vip_read(vip, VIP_REG_HEIGHT);
+	bits      = vip_read(vip, VIP_REG_BITS);
+	dev_info(dev, "VIP %u x %u YUV%u",
+			width, height, bits);
+
+	mutex_unlock(&vip->lock);
+
+	return 0;
+}
+
+static int vip_subscribe_event(struct v4l2_subdev *sd, struct v4l2_fh *fh,
+			       struct v4l2_event_subscription *sub)
+{
+	if (sub->type != V4L2_EVENT_FRAME_SYNC)
+		return -EINVAL;
+
+	/* V4L2_EVENT_FRAME_SYNC doesn't require an id, so zero should be set */
+	if (sub->id != 0)
+		return -EINVAL;
+
+	return v4l2_event_subscribe(fh, sub, 0, NULL);
+}
+
+static int vip_start_stream(struct vip_state *vip)
+{
+	u32 in_width   = vip->pad_format[VIP_PAD_SINK].width;
+	u32 in_height  = vip->pad_format[VIP_PAD_SINK].height;
+	u32 out_width  = vip->pad_format[VIP_PAD_SOURCE].width;
+	u32 out_height = vip->pad_format[VIP_PAD_SOURCE].height;
+	u32 out_code   = vip->pad_format[VIP_PAD_SOURCE].code;
+
+	u32 scale_h = in_width / out_width;
+	u32 scale_v = in_height / out_height;
+
+	u32 top_en = 0;
+
+	if (out_code == MEDIA_BUS_FMT_RBG888_1X24) {
+		top_en |= VIP_REG_TOP_EN_BIT_YUV2RGB_EN;
+	} else {
+		top_en |= VIP_REG_TOP_EN_BIT_YUV444TO422_EN;
+	}
+	if (in_width != out_width || in_height != out_height) {
+		top_en |= VIP_REG_TOP_EN_BIT_CROP_EN;
+	}
+	if (scale_h > 1 && scale_v > 1) {
+		top_en |= VIP_REG_TOP_EN_BIT_DSCALE_EN;
+	}
+	vip_write(vip, VIP_REG_TOP_EN, top_en);
+
+	if (top_en & VIP_REG_TOP_EN_BIT_DSCALE_EN) {
+		u32 scale_val = scale_h < scale_v ? scale_h : scale_v;
+		vip_write(vip, VIP_REG_CROP_X, (in_width-out_width*scale_val)/2);
+		vip_write(vip, VIP_REG_CROP_Y, (in_height-out_height*scale_val)/2);
+		vip_write(vip, VIP_REG_CROP_W, out_width*scale_val);
+		vip_write(vip, VIP_REG_CROP_H, out_height*scale_val);
+		vip_write(vip, VIP_REG_DSCALE_H, scale_val-1);
+		vip_write(vip, VIP_REG_DSCALE_V, scale_val-1);
+	} else {
+		vip_write(vip, VIP_REG_CROP_X, (in_width-out_width)/2);
+		vip_write(vip, VIP_REG_CROP_Y, (in_height-out_height)/2);
+		vip_write(vip, VIP_REG_CROP_W, out_width);
+		vip_write(vip, VIP_REG_CROP_H, out_height);
+	}
+
+	vip_write(vip, VIP_REG_INT_STATUS, 0);
+	vip_write(vip, VIP_REG_INT_MASK, ~(VIP_REG_INT_MASK_BIT_FRAME_START|VIP_REG_INT_MASK_BIT_FRAME_DONE));
+	vip_write(vip, VIP_REG_RESET, 0);
+
+	vip->streaming = true;
+
+	return 0;
+}
+
+static void vip_stop_stream(struct vip_state *vip)
+{
+	vip_write(vip, VIP_REG_RESET, 1);
+	vip_write(vip, VIP_REG_INT_MASK, ~0U);
+	vip_write(vip, VIP_REG_INT_STATUS, 0);
+
+	vip->streaming = false;
+}
+
+static void vip_queue_event_frame_sync(struct vip_state *vip, u32 frame_seq)
+{
+	struct v4l2_event event = {
+		.type = V4L2_EVENT_FRAME_SYNC,
+	};
+	event.u.frame_sync.frame_sequence = frame_seq;
+
+	v4l2_event_queue(vip->subdev.devnode, &event);
+}
+
+/**
+ * vip_irq_handler - Interrupt handler for CSI-2
+ * @irq: IRQ number
+ * @data: Pointer to device state
+ *
+ * In the interrupt handler, a list of event counters are updated for
+ * corresponding interrupts. This is useful to get status / debug.
+ *
+ * Return: IRQ_HANDLED after handling interrupts
+ */
+static irqreturn_t vip_irq_handler(int irq, void *data)
+{
+	struct vip_state *vip = (struct vip_state *)data;
+	//struct device *dev = vip->dev;
+	u32 status;
+
+	status = vip_read(vip, VIP_REG_INT_STATUS);
+	vip_write(vip, VIP_REG_INT_STATUS, 0);
+
+	if (status & VIP_REG_INT_STATUS_BIT_FRAME_START) {
+		//dev_info(dev, "IRQ FRAME_START");
+		vip_queue_event_frame_sync(vip, 0);
+	}
+
+	if (status & VIP_REG_INT_STATUS_BIT_FRAME_DONE) {
+		//XXX
+		//dev_info(dev, "IRQ FRAME_DONE");
+	}
+
+	return IRQ_HANDLED;
+}
+
+static int vip_s_stream(struct v4l2_subdev *sd, int enable)
+{
+	struct vip_state *vip = to_vipstate(sd);
+	int ret = 0;
+
+	mutex_lock(&vip->lock);
+
+	if (enable == vip->streaming) {
+		goto stream_done;
+	}
+
+	if (enable) {
+		ret = vip_start_stream(vip);
+	} else {
+		vip_stop_stream(vip);
+	}
+
+stream_done:
+	mutex_unlock(&vip->lock);
+	return ret;
+}
+
+static struct v4l2_mbus_framefmt *
+__vip_get_pad_format(struct vip_state *vip,
+			   struct v4l2_subdev_state *sd_state,
+			   unsigned int pad, u32 which)
+{
+	struct v4l2_mbus_framefmt *get_fmt;
+
+	switch (which) {
+	case V4L2_SUBDEV_FORMAT_TRY:
+		get_fmt = v4l2_subdev_get_try_format(&vip->subdev,
+						     sd_state, pad);
+		break;
+	case V4L2_SUBDEV_FORMAT_ACTIVE:
+		get_fmt = &vip->pad_format[pad];
+		break;
+	default:
+		get_fmt = NULL;
+		break;
+	}
+
+	return get_fmt;
+}
+
+/**
+ * vip_init_cfg - Initialise the pad format config to default
+ * @sd: Pointer to V4L2 Sub device structure
+ * @cfg: Pointer to sub device pad information structure
+ *
+ * This function is used to initialize the pad format with the default
+ * values.
+ *
+ * Return: 0 on success
+ */
+static int vip_init_cfg(struct v4l2_subdev *sd,
+			      struct v4l2_subdev_state *sd_state)
+{
+	struct vip_state *vip = to_vipstate(sd);
+	struct v4l2_mbus_framefmt *format;
+	unsigned int i;
+
+	mutex_lock(&vip->lock);
+	for (i = 0; i < VIP_MEDIA_PADS; i++) {
+		format = v4l2_subdev_get_try_format(sd, sd_state, i);
+		*format = vip->pad_format[i];
+	}
+	mutex_unlock(&vip->lock);
+
+	return 0;
+}
+
+/**
+ * vip_get_format - Get the pad format
+ * @sd: Pointer to V4L2 Sub device structure
+ * @cfg: Pointer to sub device pad information structure
+ * @fmt: Pointer to pad level media bus format
+ *
+ * This function is used to get the pad format information.
+ *
+ * Return: 0 on success
+ */
+static int vip_get_format(struct v4l2_subdev *sd,
+				struct v4l2_subdev_state *sd_state,
+				struct v4l2_subdev_format *fmt)
+{
+	struct vip_state *vip = to_vipstate(sd);
+	struct v4l2_mbus_framefmt *get_fmt;
+	int ret = 0;
+
+	mutex_lock(&vip->lock);
+
+	get_fmt = __vip_get_pad_format(vip, sd_state, fmt->pad,
+					     fmt->which);
+	if (!get_fmt) {
+		ret = -EINVAL;
+		goto unlock_get_format;
+	}
+
+	fmt->format = *get_fmt;
+
+unlock_get_format:
+	mutex_unlock(&vip->lock);
+
+	return ret;
+}
+
+static int vip_set_format(struct v4l2_subdev *sd,
+				struct v4l2_subdev_state *sd_state,
+				struct v4l2_subdev_format *fmt)
+{
+	struct vip_state *vip = to_vipstate(sd);
+	struct v4l2_mbus_framefmt *__format;
+	int ret = 0;
+
+	mutex_lock(&vip->lock);
+
+	__format = __vip_get_pad_format(vip, sd_state,
+					      fmt->pad, fmt->which);
+	if (!__format) {
+		ret = -EINVAL;
+		goto unlock_set_format;
+	}
+
+	/* only source pad format can be updated */
+	if (fmt->pad != VIP_PAD_SOURCE) {
+		fmt->format = *__format;
+		goto unlock_set_format;
+	}
+
+	if ((fmt->format.code == MEDIA_BUS_FMT_RBG888_1X24) || (fmt->format.code == MEDIA_BUS_FMT_VYYUYY8_1X24)) {
+		__format->code = fmt->format.code;
+	}
+	if (fmt->format.width <= vip->pad_format[VIP_PAD_SINK].width && fmt->format.height <= vip->pad_format[VIP_PAD_SINK].height) {
+		__format->width  = fmt->format.width;
+		__format->height = fmt->format.height;
+	}
+	fmt->format = *__format;
+
+unlock_set_format:
+	mutex_unlock(&vip->lock);
+
+	return ret;
+}
+
+/*
+ * vip_enum_mbus_code - Handle pixel format enumeration
+ * @sd: pointer to v4l2 subdev structure
+ * @cfg: V4L2 subdev pad configuration
+ * @code: pointer to v4l2_subdev_mbus_code_enum structure
+ *
+ * Return: -EINVAL or zero on success
+ */
+static int vip_enum_mbus_code(struct v4l2_subdev *sd,
+				    struct v4l2_subdev_state *sd_state,
+				    struct v4l2_subdev_mbus_code_enum *code)
+{
+	struct vip_state *vip = to_vipstate(sd);
+	const u32 source_pad_codes[] = {MEDIA_BUS_FMT_RBG888_1X24, MEDIA_BUS_FMT_VYYUYY8_1X24};
+
+	if (code->pad == VIP_PAD_SINK && code->index == 0) {
+		code->code = vip->pad_format[code->pad].code;
+	} else if (code->pad == VIP_PAD_SOURCE && code->index < ARRAY_SIZE(source_pad_codes)) {
+		code->code = source_pad_codes[code->index];
+	} else {
+		return -EINVAL;
+	}
+
+	return 0;
+}
+
+static int vip_enum_frame_size(struct v4l2_subdev *sd,
+			       struct v4l2_subdev_state *state,
+			       struct v4l2_subdev_frame_size_enum *fse)
+{
+	struct vip_state *vip = to_vipstate(sd);
+
+	if (fse->index > 0 || fse->pad >= VIP_MEDIA_PADS) {
+		return -EINVAL;
+	}
+
+	if (fse->pad == VIP_PAD_SINK && fse->index == 0) {
+		fse->min_width  = vip->pad_format[fse->pad].width;
+		fse->min_height = vip->pad_format[fse->pad].height;
+		fse->max_width  = vip->pad_format[fse->pad].width;
+		fse->max_height = vip->pad_format[fse->pad].height;
+	} else if (fse->pad == VIP_PAD_SOURCE && fse->index == 0) {
+		fse->min_width  = vip->pad_format[VIP_PAD_SINK].width / 4 / 4 * 4;
+		fse->min_height = vip->pad_format[VIP_PAD_SINK].height / 4 / 4 * 4;
+		fse->max_width  = vip->pad_format[VIP_PAD_SINK].width;
+		fse->max_height = vip->pad_format[VIP_PAD_SINK].height;
+	} else {
+		return -EINVAL;
+	}
+
+	return 0;
+}
+
+/* -----------------------------------------------------------------------------
+ * Media Operations
+ */
+
+static const struct media_entity_operations vip_media_ops = {
+	.link_validate = v4l2_subdev_link_validate
+};
+
+static const struct v4l2_subdev_core_ops vip_core_ops = {
+	.log_status = vip_log_status,
+	.subscribe_event = vip_subscribe_event,
+	.unsubscribe_event = v4l2_event_subdev_unsubscribe,
+};
+
+static const struct v4l2_subdev_video_ops vip_video_ops = {
+	.s_stream = vip_s_stream,
+};
+
+static const struct v4l2_subdev_pad_ops vip_pad_ops = {
+	.init_cfg = vip_init_cfg,
+	.enum_mbus_code = vip_enum_mbus_code,
+	.enum_frame_size = vip_enum_frame_size,
+	.get_fmt = vip_get_format,
+	.set_fmt = vip_set_format,
+	.link_validate = v4l2_subdev_link_validate_default,
+};
+
+static const struct v4l2_subdev_ops vip_ops = {
+	.core = &vip_core_ops,
+	.video = &vip_video_ops,
+	.pad = &vip_pad_ops
+};
+
+static int vip_get_hw_format(struct vip_state *vip)
+{
+	struct device *dev = vip->dev;
+	struct v4l2_mbus_framefmt *format = NULL;
+
+	u32 width  = vip_read(vip, VIP_REG_WIDTH);
+	u32 height = vip_read(vip, VIP_REG_HEIGHT);
+	u32 bits   = vip_read(vip, VIP_REG_BITS);
+	if (width < 1 || height < 1 || (bits != 8 && bits != 10 && bits != 12)) {
+		dev_err(dev, "Invalid HW formats. Resolution %u x %u, YUV%u",
+			width, height, bits);
+		return -EINVAL;
+	}
+
+	dev_info(dev, "VIP HW formats. Resolution %u x %u, YUV%u",
+		width, height, bits);
+	
+	vip->bits = bits;
+	format = &vip->pad_format[VIP_PAD_SINK];
+
+	switch (bits) {
+		case 8:   format->code = MEDIA_BUS_FMT_YUV8_1X24;  break;
+		case 10:  format->code = MEDIA_BUS_FMT_YUV10_1X30; break;
+		default:  format->code = MEDIA_BUS_FMT_YUV12_1X36; break;
+	}
+
+	format->field      = V4L2_FIELD_NONE;
+	format->colorspace = V4L2_COLORSPACE_SRGB;
+	format->width      = width;
+	format->height     = height;
+
+	format = &vip->pad_format[VIP_PAD_SOURCE];
+
+	*format = vip->pad_format[VIP_PAD_SINK];
+	format->code = MEDIA_BUS_FMT_RBG888_1X24;
+	//format->code = MEDIA_BUS_FMT_VYYUYY8_1X24;
+
+	return 0;
+}
+
+static int vip_initialize_hw(struct vip_state *vip)
+{
+	//u32 width  = vip->pad_format[VIP_PAD_SINK].width;
+	//u32 height = vip->pad_format[VIP_PAD_SINK].height;
+	//u32 bits   = vip->bits;
+	unsigned int vip_top_en = 0;
+
+	vip_write(vip, VIP_REG_RESET, 1);
+	vip_write(vip, VIP_REG_INT_MASK, ~0U);
+
+	//vip_top_en |= VIP_REG_TOP_EN_BIT_HIST_EQU_EN;
+	//vip_top_en |= VIP_REG_TOP_EN_BIT_SOBEL_EN;
+	vip_top_en |= VIP_REG_TOP_EN_BIT_YUV2RGB_EN;
+	//vip_top_en |= VIP_REG_TOP_EN_BIT_CROP_EN;
+	//vip_top_en |= VIP_REG_TOP_EN_BIT_OSD_EN;
+	//vip_top_en |= VIP_REG_TOP_EN_BIT_DSCALE_EN;
+	//vip_top_en |= VIP_REG_TOP_EN_BIT_YUV444TO422_EN;
+	vip_write(vip, VIP_REG_TOP_EN, vip_top_en);
+
+	return 0;
+}
+
+static int vip_probe(struct platform_device *pdev)
+{
+	struct v4l2_subdev *subdev;
+	struct vip_state *vip;
+	int num_clks = ARRAY_SIZE(vip_clks);
+	struct device *dev = &pdev->dev;
+	int irq, ret;
+
+	vip = devm_kzalloc(dev, sizeof(*vip), GFP_KERNEL);
+	if (!vip) {
+		dev_err(dev, "No memory for vip");
+		return -ENOMEM;
+	}
+
+	vip->dev = dev;
+
+	vip->clks = devm_kmemdup(dev, vip_clks, sizeof(vip_clks), GFP_KERNEL);
+	if (!vip->clks) {
+		dev_err(dev, "No memory for vip clks");
+		return -ENOMEM;
+	}
+
+	vip->iomem = devm_platform_ioremap_resource(pdev, 0);
+	if (IS_ERR(vip->iomem)) {
+		dev_err(dev, "No iomem resource in DT");
+		return PTR_ERR(vip->iomem);
+	}
+
+	irq = platform_get_irq(pdev, 0);
+	if (irq < 0) {
+		dev_err(dev, "No irq resource in DT");
+		return irq;
+	}
+
+	ret = devm_request_threaded_irq(dev, irq, NULL,
+					vip_irq_handler, IRQF_ONESHOT,
+					dev_name(dev), vip);
+	if (ret) {
+		dev_err(dev, "Err = %d Interrupt handler reg failed!\n", ret);
+		return ret;
+	}
+
+	ret = devm_clk_bulk_get(dev, num_clks, vip->clks);
+	if (ret) {
+		dev_err(dev, "could not get clks");
+		return ret;
+	}
+
+	/* TODO: Enable/disable clocks at stream on/off time. */
+	ret = clk_bulk_prepare_enable(num_clks, vip->clks);
+	if (ret) {
+		dev_err(dev, "could not prepare enable clks");
+		return ret;
+	}
+
+	mutex_init(&vip->lock);
+
+	/* Initialize V4L2 subdevice and media entity */
+	vip->pads[VIP_PAD_SINK].flags = MEDIA_PAD_FL_SINK;
+	vip->pads[VIP_PAD_SOURCE].flags = MEDIA_PAD_FL_SOURCE;
+
+	/* Initialize the default format */
+	ret = vip_get_hw_format(vip);
+	if (ret < 0) {
+		goto error;
+	}
+
+	/* Initialize the vip hardware */
+	ret = vip_initialize_hw(vip);
+	if (ret < 0) {
+		goto error;
+	}
+
+	/* Initialize V4L2 subdevice and media entity */
+	subdev = &vip->subdev;
+	v4l2_subdev_init(subdev, &vip_ops);
+	subdev->dev = dev;
+	strscpy(subdev->name, dev_name(dev), sizeof(subdev->name));
+	subdev->flags |= V4L2_SUBDEV_FL_HAS_EVENTS | V4L2_SUBDEV_FL_HAS_DEVNODE;
+	subdev->entity.ops = &vip_media_ops;
+	v4l2_set_subdevdata(subdev, vip);
+
+	ret = media_entity_pads_init(&subdev->entity, VIP_MEDIA_PADS,
+				     vip->pads);
+	if (ret < 0) {
+		dev_err(dev, "init media entity pads fail");
+		goto error;
+	}
+
+	platform_set_drvdata(pdev, vip);
+
+	ret = v4l2_async_register_subdev(subdev);
+	if (ret < 0) {
+		dev_err(dev, "failed to register subdev\n");
+		goto error;
+	}
+
+	dev_info(dev, "xil-vip driver probed!");
+
+	return 0;
+error:
+	media_entity_cleanup(&subdev->entity);
+	mutex_destroy(&vip->lock);
+	clk_bulk_disable_unprepare(num_clks, vip->clks);
+	return ret;
+}
+
+static int vip_remove(struct platform_device *pdev)
+{
+	struct vip_state *vip = platform_get_drvdata(pdev);
+	struct v4l2_subdev *subdev = &vip->subdev;
+	int num_clks = ARRAY_SIZE(vip_clks);
+
+	v4l2_async_unregister_subdev(subdev);
+	media_entity_cleanup(&subdev->entity);
+	mutex_destroy(&vip->lock);
+	clk_bulk_disable_unprepare(num_clks, vip->clks);
+
+	return 0;
+}
+
+static const struct of_device_id vip_of_id_table[] = {
+	{ .compatible = "xlnx,xil-vip-1.0", },
+	{ }
+};
+MODULE_DEVICE_TABLE(of, vip_of_id_table);
+
+static struct platform_driver vip_driver = {
+	.driver = {
+		.name		= "xil-vip",
+		.of_match_table	= vip_of_id_table,
+	},
+	.probe			= vip_probe,
+	.remove			= vip_remove,
+};
+
+module_platform_driver(vip_driver);
+
+MODULE_AUTHOR("xinquan bian <544177215@qq.com>");
+MODULE_DESCRIPTION("Xil VIP Driver");
+MODULE_LICENSE("GPL v2");
diff --git a/drivers/media/platform/xilinx/xilinx-dma.c b/drivers/media/platform/xilinx/xilinx-dma.c
index b72d22b25..05e5fa977 100644
--- a/drivers/media/platform/xilinx/xilinx-dma.c
+++ b/drivers/media/platform/xilinx/xilinx-dma.c
@@ -561,7 +561,7 @@ static int xvip_dma_start_streaming(struct vb2_queue *vq, unsigned int count)
 	 * We dont't want to start DMA in case of low latency capture mode,
 	 * applications will start DMA using S_CTRL at later point of time.
 	 */
-	if (!dma->low_latency_cap) {
+	if (!dma->low_latency_cap || V4L2_TYPE_IS_OUTPUT(dma->format.type)) {
 		dma_async_issue_pending(dma->dma);
 	} else {
 		/* For low latency capture, return the first buffer early
@@ -797,6 +797,50 @@ xvip_dma_enum_format(struct file *file, void *fh, struct v4l2_fmtdesc *f)
 	return 0;
 }
 
+static int
+xvip_dma_enum_framesizes(struct file *file, void *fh, struct v4l2_frmsizeenum *fsize)
+{
+	struct v4l2_fh *vfh = file->private_data;
+	struct xvip_dma *dma = to_xvip_dma(vfh->vdev);
+	struct v4l2_subdev *subdev;
+	const struct xvip_video_format *fmt;
+	struct v4l2_subdev_frame_size_enum fse = {0};
+	int ret;
+
+	/* Establish media pad format */
+	subdev = xvip_dma_remote_subdev(&dma->pad, &fse.pad);
+	if (!subdev)
+		return -EPIPE;
+
+	fmt = xvip_get_format_by_fourcc(fsize->pixel_format);
+	if (IS_ERR(fmt))
+		return PTR_ERR(fmt);
+
+	fse.code = fmt->code;
+	fse.index = fsize->index;
+	fse.which = V4L2_SUBDEV_FORMAT_ACTIVE;
+
+	ret = v4l2_subdev_call(subdev, pad, enum_frame_size, NULL, &fse);
+	if (ret < 0)
+		return ret;
+
+	if (fse.min_width == fse.max_width && fse.min_height == fse.max_height) {
+		fsize->type = V4L2_FRMSIZE_TYPE_DISCRETE;
+		fsize->discrete.width = fse.min_width;
+		fsize->discrete.height = fse.min_height;
+	} else {
+		fsize->type = V4L2_FRMSIZE_TYPE_STEPWISE;
+		fsize->stepwise.min_width = fse.min_width;
+		fsize->stepwise.max_width = fse.max_width;
+		fsize->stepwise.step_width = 1;
+		fsize->stepwise.min_height = fse.min_height;
+		fsize->stepwise.max_height = fse.max_height;
+		fsize->stepwise.step_height = 1;
+	}
+
+	return 0;
+}
+
 static int
 xvip_dma_get_format(struct file *file, void *fh, struct v4l2_format *format)
 {
@@ -1113,6 +1157,7 @@ static const struct v4l2_ioctl_ops xvip_dma_ioctl_ops = {
 	.vidioc_querycap		= xvip_dma_querycap,
 	.vidioc_enum_fmt_vid_cap	= xvip_dma_enum_format,
 	.vidioc_enum_fmt_vid_out	= xvip_dma_enum_format,
+	.vidioc_enum_framesizes	    = xvip_dma_enum_framesizes,
 	.vidioc_g_fmt_vid_cap		= xvip_dma_get_format,
 	.vidioc_g_fmt_vid_cap_mplane	= xvip_dma_get_format,
 	.vidioc_g_fmt_vid_out		= xvip_dma_get_format,
@@ -1204,10 +1249,12 @@ static int xvip_dma_open(struct file *file)
 	if (v4l2_fh_is_singular_file(file)) {
 		struct xvip_dma *dma = video_drvdata(file);
 
-		mutex_lock(&dma->lock);
-		dma->low_latency_cap = false;
-		xilinx_xdma_set_mode(dma->dma, AUTO_RESTART);
-		mutex_unlock(&dma->lock);
+		if (!V4L2_TYPE_IS_OUTPUT(dma->format.type)) {
+			mutex_lock(&dma->lock);
+			dma->low_latency_cap = false;
+			xilinx_xdma_set_mode(dma->dma, AUTO_RESTART);
+			mutex_unlock(&dma->lock);
+		}
 	}
 
 	return 0;
diff --git a/include/uapi/linux/xil-isp-lite.h b/include/uapi/linux/xil-isp-lite.h
new file mode 100644
index 000000000..f63cb2f1d
--- /dev/null
+++ b/include/uapi/linux/xil-isp-lite.h
@@ -0,0 +1,175 @@
+/* SPDX-License-Identifier: ((GPL-2.0+ WITH Linux-syscall-note) OR BSD-3-Clause) */
+/*
+ * xil-isp-lite.h
+ *
+ * Xil ISP Lite driver - user space header file.
+ *
+ * Copyright © 2022- bxinquan Ltd.
+ *
+ * Author: Xinquan Bian (544177215@qq.com)
+ *
+ */
+
+#ifndef __XIL_ISP_LITE_H_
+#define __XIL_ISP_LITE_H_
+
+#include <linux/v4l2-controls.h>
+
+#define V4L2_CID_USER_XIL_ISP_LITE_BASE			(V4L2_CID_USER_BASE + 0x10e0)
+
+#define V4L2_CID_USER_XIL_ISP_LITE_TOP			(V4L2_CID_USER_XIL_ISP_LITE_BASE + 0x0001)
+#define V4L2_CID_USER_XIL_ISP_LITE_DPC			(V4L2_CID_USER_XIL_ISP_LITE_BASE + 0x0002)
+#define V4L2_CID_USER_XIL_ISP_LITE_BLC			(V4L2_CID_USER_XIL_ISP_LITE_BASE + 0x0003)
+#define V4L2_CID_USER_XIL_ISP_LITE_BNR			(V4L2_CID_USER_XIL_ISP_LITE_BASE + 0x0004)
+#define V4L2_CID_USER_XIL_ISP_LITE_DGAIN		(V4L2_CID_USER_XIL_ISP_LITE_BASE + 0x0005)
+#define V4L2_CID_USER_XIL_ISP_LITE_DEMOSAIC		(V4L2_CID_USER_XIL_ISP_LITE_BASE + 0x0006)
+#define V4L2_CID_USER_XIL_ISP_LITE_WB			(V4L2_CID_USER_XIL_ISP_LITE_BASE + 0x0007)
+#define V4L2_CID_USER_XIL_ISP_LITE_CCM			(V4L2_CID_USER_XIL_ISP_LITE_BASE + 0x0008)
+#define V4L2_CID_USER_XIL_ISP_LITE_CSC			(V4L2_CID_USER_XIL_ISP_LITE_BASE + 0x0009)
+#define V4L2_CID_USER_XIL_ISP_LITE_GAMMA		(V4L2_CID_USER_XIL_ISP_LITE_BASE + 0x000a)
+#define V4L2_CID_USER_XIL_ISP_LITE_2DNR			(V4L2_CID_USER_XIL_ISP_LITE_BASE + 0x000b)
+#define V4L2_CID_USER_XIL_ISP_LITE_EE			(V4L2_CID_USER_XIL_ISP_LITE_BASE + 0x000c)
+#define V4L2_CID_USER_XIL_ISP_LITE_STAT_AE_CFG		(V4L2_CID_USER_XIL_ISP_LITE_BASE + 0x000d)
+#define V4L2_CID_USER_XIL_ISP_LITE_STAT_AWB_CFG		(V4L2_CID_USER_XIL_ISP_LITE_BASE + 0x000e)
+
+/*
+ * XIL-ISP-LITE IP Modules
+ *
+ *        |------------- RAW -------------|   |------- RGB -------| |--------- YUV ---------|
+ * RAW ==> DPC => BLC => BNR => DGAIN => Demosaic => WB => CCM => CSC => Gamma => 2DNR => EE ==> YUV
+ *                                    |           |
+ *                                    V           V
+ *                                 STAT_AE    STAT_AWB
+ * */
+
+
+/* ISP Configure structure define */
+
+struct xil_isp_lite_top {
+	__u32 dpc_en		:1;
+	__u32 blc_en		:1;
+	__u32 bnr_en		:1;
+	__u32 dgain_en		:1;
+	__u32 demosaic_en	:1;
+	__u32 wb_en		:1;
+	__u32 ccm_en		:1;
+	__u32 csc_en		:1;
+	__u32 gamma_en		:1;
+	__u32 nr2d_en		:1;
+	__u32 ee_en		:1;
+	__u32 stat_ae_en	:1;
+	__u32 stat_awb_en	:1;
+	__u32 padding		:19; /* Unused */
+};
+
+struct xil_isp_lite_dpc {
+	__u32 enabled;
+	__u16 threshold;
+	__u16 padding;
+};
+
+struct xil_isp_lite_blc {
+	__u32 enabled;
+	__u16 black_level_r;
+	__u16 black_level_gr;
+	__u16 black_level_gb;
+	__u16 black_level_b;
+};
+
+struct xil_isp_lite_bnr {
+	__u32 enabled;
+	__u32 nr_level   :4;
+	__u32 padding    :28;
+};
+
+struct xil_isp_lite_dgain {
+	__u32 enabled;
+	__u8  gain;  //U4.4
+	__u16 offset;
+	__u8  padding;
+};
+
+struct xil_isp_lite_demosaic {
+	__u32 enabled;
+};
+
+struct xil_isp_lite_wb {
+	__u32 enabled;
+	__u8  rgain; //U4.4
+	__u8  ggain;
+	__u8  bgain;
+	__u8  padding;
+};
+
+struct xil_isp_lite_ccm {
+	__u32 enabled;
+	__s8  matrix[3*3];
+	__u8  padding[3];
+};
+
+struct xil_isp_lite_csc {
+	__u32 enabled;
+};
+
+struct xil_isp_lite_gamma {
+	__u32 enabled;
+	__u8  gamma_table[256];
+};
+
+struct xil_isp_lite_2dnr {
+	__u32 enabled;
+	__u8  space_weight[7*7];
+	__u8  color_curve[9][2];
+	__u8  padding;
+};
+
+struct xil_isp_lite_ee {
+	__u32 enabled;
+};
+
+struct xil_isp_lite_stat_ae_cfg {
+	__u32 enabled;
+	__u16 rect_x;
+	__u16 rect_y;
+	__u16 rect_w;
+	__u16 rect_h;
+};
+
+struct xil_isp_lite_stat_awb_cfg {
+	__u32 enabled;
+	__u16 thresh_min;
+	__u16 thresh_max;
+};
+
+
+/* ISP statistics buffer define */
+
+#define V4L2_META_FMT_XIL_ISP_LITE_STAT		v4l2_fourcc('X', 'I', 'S', 'P') 
+#define XIL_ISP_LITE_AE_HIST_BIN_NUM		(256)
+#define XIL_ISP_LITE_AWB_HIST_BIN_NUM		(256)
+
+struct xil_isp_lite_stat_ae_result {
+	__u64 pix_cnt;
+	__u64 sum;
+	__u32 hist_r[XIL_ISP_LITE_AE_HIST_BIN_NUM];
+	__u32 hist_gr[XIL_ISP_LITE_AE_HIST_BIN_NUM];
+	__u32 hist_gb[XIL_ISP_LITE_AE_HIST_BIN_NUM];
+	__u32 hist_b[XIL_ISP_LITE_AE_HIST_BIN_NUM];
+};
+
+struct xil_isp_lite_stat_awb_result {
+	__u64 pix_cnt;
+	__u64 sum_r;
+	__u64 sum_g;
+	__u64 sum_b;
+	__u32 hist_r[XIL_ISP_LITE_AWB_HIST_BIN_NUM];
+	__u32 hist_g[XIL_ISP_LITE_AWB_HIST_BIN_NUM];
+	__u32 hist_b[XIL_ISP_LITE_AWB_HIST_BIN_NUM];
+};
+
+struct xil_isp_lite_stat_result {
+	struct xil_isp_lite_stat_ae_result  ae;
+	struct xil_isp_lite_stat_awb_result awb;
+};
+
+#endif /* __XIL_ISP_LITE_H_ */
